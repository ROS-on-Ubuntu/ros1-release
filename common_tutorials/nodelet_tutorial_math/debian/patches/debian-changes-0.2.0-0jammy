Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ros-noetic-nodelet-tutorial-math (0.2.0-0jammy) jammy; urgency=high
 .
   * Autogenerated, no changelog for this version found in CHANGELOG.rst.
Author: Daniel Stonier <d.stonier@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2024-08-18

--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/CHANGELOG.rst
@@ -0,0 +1,12 @@
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Changelog for package nodelet_tutorial_math
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+0.1.11 (2018-03-30)
+-------------------
+* update to use new pluginlib macros
+
+0.1.8 (2014-11-05)
+------------------
+* update package maintainer.
+* Contributors: Daniel Stonier
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/CMakeLists.txt
@@ -0,0 +1,29 @@
+cmake_minimum_required(VERSION 3.0.2)
+project(nodelet_tutorial_math)
+
+find_package(catkin REQUIRED COMPONENTS nodelet roscpp std_msgs)
+
+## Setup include directories
+include_directories(${catkin_INCLUDE_DIRS})
+
+catkin_package(
+  LIBRARIES nodelet_math
+  CATKIN_DEPENDS nodelet roscpp std_msgs
+)
+
+## Create the nodelet tutorial library
+add_library(nodelet_math src/plus.cpp)
+target_link_libraries(nodelet_math ${catkin_LIBRARIES})
+if(catkin_EXPORTED_LIBRARIES)
+  add_dependencies(nodelet_math ${catkin_EXPORTED_LIBRARIES})
+endif()
+
+## Mark the nodelet library for installations
+install(TARGETS nodelet_math
+  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
+  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
+  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
+
+## Mark other files for installation (e.g. launch and bag files, etc.)
+install(FILES nodelet_math.xml plus.launch plus_default.yaml
+  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/nodelet_math.xml
@@ -0,0 +1,7 @@
+<library path="lib/libnodelet_math">
+  <class name="nodelet_tutorial_math/Plus" type="nodelet_tutorial_math::Plus" base_class_type="nodelet::Nodelet">
+    <description> 
+      A node to add a value and republish.
+    </description>
+  </class>
+</library>
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/package.xml
@@ -0,0 +1,25 @@
+<package>
+  <name>nodelet_tutorial_math</name>
+  <version>0.2.0</version>
+  <description>Package for Nodelet tutorial.</description>
+  <maintainer email="d.stonier@gmail.com">Daniel Stonier</maintainer>
+  <author>Tully Foote</author>
+  <license>BSD</license>
+  <url type="website">http://www.ros.org/wiki/nodelet_tutorial_math</url>
+
+  <buildtool_depend>catkin</buildtool_depend>
+
+  <build_depend>nodelet</build_depend>
+  <build_depend>roscpp</build_depend>
+  <build_depend>std_msgs</build_depend>
+
+  <run_depend>nodelet</run_depend>
+  <run_depend>roscpp</run_depend>
+  <run_depend>std_msgs</run_depend>
+
+  <export>
+    <nodelet plugin="${prefix}/nodelet_math.xml"/>
+  </export>
+</package>
+
+
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/plus.launch
@@ -0,0 +1,16 @@
+<launch>
+  <node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager" output="screen"/>
+
+  <node pkg="nodelet" type="nodelet" name="Plus" args="load nodelet_tutorial_math/Plus standalone_nodelet" output="screen">
+    <remap from="/Plus/out" to="remapped_output"/>
+  </node>		  
+  
+  <rosparam param="Plus2" file="$(find nodelet_tutorial_math)/plus_default.yaml"/>
+  <node pkg="nodelet" type="nodelet" name="Plus2" args="load nodelet_tutorial_math/Plus standalone_nodelet" output="screen">
+    <rosparam file="$(find nodelet_tutorial_math)/plus_default.yaml"/>
+  </node>
+  <node pkg="nodelet" type="nodelet" name="Plus3" args="standalone nodelet_tutorial_math/Plus" output="screen">
+    <param name="value" type="double" value="2.5"/>
+    <remap from="Plus3/in" to="Plus2/out"/>
+  </node>
+</launch>
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/plus_default.yaml
@@ -0,0 +1 @@
+value: 10
--- /dev/null
+++ ros-noetic-nodelet-tutorial-math-0.2.0/src/plus.cpp
@@ -0,0 +1,72 @@
+/*
+ * Copyright (c) 2009, Willow Garage, Inc.
+ * All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ * 
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of the Willow Garage, Inc. nor the names of its
+ *       contributors may be used to endorse or promote products derived from
+ *       this software without specific prior written permission.
+ * 
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <pluginlib/class_list_macros.h>
+#include <nodelet/nodelet.h>
+#include <ros/ros.h>
+#include <std_msgs/Float64.h>
+#include <stdio.h>
+
+
+#include <math.h> //fabs
+
+namespace nodelet_tutorial_math
+{
+
+class Plus : public nodelet::Nodelet
+{
+public:
+  Plus()
+  : value_(0)
+  {}
+
+private:
+  virtual void onInit()
+  {
+    ros::NodeHandle& private_nh = getPrivateNodeHandle();
+    private_nh.getParam("value", value_);
+    pub = private_nh.advertise<std_msgs::Float64>("out", 10);
+    sub = private_nh.subscribe("in", 10, &Plus::callback, this);
+  }
+
+  void callback(const std_msgs::Float64::ConstPtr& input)
+  {
+    std_msgs::Float64Ptr output(new std_msgs::Float64());
+    output->data = input->data + value_;
+    NODELET_DEBUG("Adding %f to get %f", value_, output->data);
+    pub.publish(output);
+  }
+
+  ros::Publisher pub;
+  ros::Subscriber sub;
+  double value_;
+};
+
+PLUGINLIB_EXPORT_CLASS(nodelet_tutorial_math::Plus, nodelet::Nodelet)
+}
