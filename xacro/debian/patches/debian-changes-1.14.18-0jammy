Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ros-noetic-xacro (1.14.18-0jammy) jammy; urgency=high
 .
   * Add more unit tags for yaml files  (#331 <https://github.com/ros/xacro/issues/331>)
   * Mark regexes as raw strings (#336 <https://github.com/ros/xacro/issues/336>)
   * Contributors: Adam Heins, Bruno-Pier
Author: Robert Haschke <rhaschke@techfak.uni-bielefeld.de>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2024-08-18

--- /dev/null
+++ ros-noetic-xacro-1.14.18/.github/FUNDING.yml
@@ -0,0 +1 @@
+github: rhaschke
--- /dev/null
+++ ros-noetic-xacro-1.14.18/.github/workflows/ci.yaml
@@ -0,0 +1,20 @@
+name: CI
+
+on: [push, pull_request, workflow_dispatch]
+
+jobs:
+  default:
+    strategy:
+      fail-fast: false
+      matrix:
+        ros: [melodic, noetic]
+
+    name: ${{ matrix.ros }}
+    runs-on: ubuntu-latest
+    env:
+      ROS_DISTRO: ${{ matrix.ros }}
+    steps:
+      - uses: actions/checkout@v3
+
+      - name: industrial_ci
+        uses: ros-industrial/industrial_ci@master
--- /dev/null
+++ ros-noetic-xacro-1.14.18/.github/workflows/format.yaml
@@ -0,0 +1,14 @@
+# This is a format job. Pre-commit has a first-party GitHub action, so we use
+# that: https://github.com/pre-commit/action
+
+name: Format
+
+on: [push, pull_request, workflow_dispatch]
+
+jobs:
+  pre-commit:
+    name: pre-commit
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v3
+      - uses: pre-commit/action@v3.0.0
--- /dev/null
+++ ros-noetic-xacro-1.14.18/.pre-commit-config.yaml
@@ -0,0 +1,36 @@
+# To use:
+#
+#     pre-commit run -a
+#
+# Or:
+#
+#     pre-commit install  # (runs every time you commit in git)
+#
+# To update this file:
+#
+#     pre-commit autoupdate
+#
+# See https://github.com/pre-commit/pre-commit
+
+repos:
+  # Standard hooks
+  - repo: https://github.com/pre-commit/pre-commit-hooks
+    rev: v4.1.0
+    hooks:
+      - id: check-added-large-files
+      - id: check-case-conflict
+      - id: check-merge-conflict
+      - id: check-symlinks
+      - id: debug-statements
+      - id: mixed-line-ending
+      - id: end-of-file-fixer
+      - id: trailing-whitespace
+
+  - repo: https://github.com/pycqa/flake8
+    rev: 4.0.1
+    hooks:
+      - id: flake8
+        args:
+          - --select=E901,E999,F821,F822,F823
+          - --show-source
+          - --statistics
--- /dev/null
+++ ros-noetic-xacro-1.14.18/CHANGELOG.rst
@@ -0,0 +1,726 @@
+^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Changelog for package xacro
+^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+1.14.18 (2024-04-02)
+--------------------
+* Add more unit tags for yaml files  (`#331 <https://github.com/ros/xacro/issues/331>`_)
+* Mark regexes as raw strings (`#336 <https://github.com/ros/xacro/issues/336>`_)
+* Contributors: Adam Heins, Bruno-Pier
+
+1.14.17 (2024-01-25)
+--------------------
+* Expose python.abs()
+* Contributors: Robert Haschke
+
+1.14.16 (2023-05-24)
+--------------------
+* Fix hasattr support of YamlDictWrapper (`#324 <https://github.com/ros/xacro/issues/324>`_)
+* Contributors: Alec Tiefenthal, Robert Haschke
+
+1.14.15 (2023-02-27)
+--------------------
+* Evaluate ``arg`` value as str/unicode (`#322 <https://github.com/ros/xacro/issues/322>`_)
+* Remove obsolete options from completion
+* Contributors: Robert Haschke
+
+1.14.14 (2022-10-21)
+--------------------
+* Dotted YAML access from list iterator (`#318 <https://github.com/ros/xacro/issues/318>`_)
+* Link to `extended wiki <https://github.com/ros/xacro/wiki>`_
+* Contributors: Robert Haschke
+
+1.14.13 (2022-02-12)
+--------------------
+* Only optionally activate comment evaluation (`#310 <https://github.com/ros/xacro/issues/310>`_)
+
+  Comment evaluation can be enabled with a special comment:
+
+  - ``<!-- xacro:eval-comments -->`` or
+  - ``<!-- xacro:eval-comments:on -->``
+
+  It remains active for the following comments until:
+
+  - the current XML tag's scope is left (or a new tag entered)
+  - another tag or non-whitespace text is processed
+  - it becomes explicitly disabled via: ``<!-- xacro:eval-comments:off -->``
+
+* Fix property resolution with namespace usage (`#308 <https://github.com/ros/xacro/issues/308>`_)
+
+  - Allow access to properties in parent scopes again (fixes `#305 <https://github.com/ros/xacro/issues/305#issuecomment-1016811150>`_)
+  - Pick correct scope when defining a property into the parent (fixes `#307 <https://github.com/ros/xacro/issues/307>`_)
+
+    Setting a property within the parent scope may occur in two contexts:
+
+    1. From within a macro. In that case, one wants to set the property in the caller's scope.
+    2. From within the included file. In that case, one wants to set the property in the includer's scope.
+
+* Contributors: Robert Haschke
+
+1.14.12 (2022-01-30)
+--------------------
+* Issue a warning only for evaluation errors in comments
+* Add LICENSE file
+* Contributors: Robert Haschke
+
+1.14.11 (2022-01-20)
+--------------------
+* Fix resolving of macros and properties declared and used in/from a namespace (`#297 <https://github.com/ros/xacro/issues/297>`_, `#306 <https://github.com/ros/xacro/issues/306>`_)
+
+  Macros and properties that are declared within a namespaced include shouldn't require the namespace prefix when used within the namespace.
+* Perform expression evaluation in comments (`#300 <https://github.com/ros/xacro/issues/300>`_)
+* Expose ``xacro.arg()`` to facilitate access to substitution args
+* Fix scoped macro evaluation
+
+  * Replace ``[Macro|Property]NameSpace`` with common ``NameSpace`` class derived from ``Table``
+  * Use the scoped macro Table
+* Contributors: Robert Haschke
+
+1.14.10 (2021-10-02)
+--------------------
+* Allow property names to be evaluated from an expression
+  This allows to turn macros into a function that can compute an arbitrary property::
+
+    <xacro:macro name="square" params="name args">
+      <!-- Perform some complex computation and set the property within the parent's scope -->
+      <xacro:property name="${name}" value="${[float(x)**2 for x in args]}" scope="parent" />
+    </xacro:macro>
+    <xacro:square name="result" args="${python.range(5)}" />
+
+* Fix error reporting for invalid symbols in NameSpaces
+* Allow removal of a property definition (`#288 <https://github.com/ros/xacro/issues/288>`_)
+
+     <xacro:property name="prop" remove="true"/>
+
+* Allow greedy property evaluation (`#284 <https://github.com/ros/xacro/issues/284>`_)
+  This can be used, to redefine a property from its previous value, e.g. for normalization::
+
+     <xacro:property name="prop" value="${prop.lower()}" lazy_eval="false"/>
+
+* Correctly expose XML namespaces imported via ``xacro:include`` within a macro (`#287 <https://github.com/ros/xacro/issues/287>`_)
+* Throw when attempting to declare a property starting with *double* underscore (`#286 <https://github.com/ros/xacro/issues/286>`_)
+* Improve global symbols (`#283 <https://github.com/ros/xacro/issues/283>`_)
+
+  * Expose most builtin symbols of python
+  * Expose xacro functions into ``xacro`` namespace
+
+    * ``xacro.print_location()`` to print the current filestack
+    * ``tokenize(string, sep=',; ', skip_empty=True)`` to facilitate string tokenization
+    * ``message()``, ``warning()``, ``error()``, and ``fatal()`` to output messages on ``stderr``.
+      All but ``message()`` print the error location (macro call and file hierarchy) by default::
+
+      ${xacro.message('message', 'text', 2, 3.14, color=32, print_location=True)}
+      ${xacro.warning('warning')}
+      ${xacro.error('error', print_location=False)}
+      ${xacro.fatal('fatal')}
+
+  * Rework handling of file and macro stack, such that print_location() works from anywhere
+  * Unit tests: Reduce reported ``stdout``/``stderr`` output
+  * Rework definition of ``global_symbols`` to expose functions into namespaces python, math, xacro
+* Contributors: Robert Haschke
+
+1.14.9 (2021-09-03)
+-------------------
+* Allow more builtin symbols: sorted, set
+* Don't import hidden symbols from math package
+* Fix ``eval()`` security vulnerability
+
+  - ``safe_eval()``: Forbid symbol names starting with *double* underscore
+  - unit tests validating the protection mechanism
+* Generalize yaml ``!degrees`` constructor: Enable expressions as well
+* Contributors: Robert Haschke
+
+1.14.8 (2021-07-19)
+-------------------
+* Improve macro arg parsing (`#278 <https://github.com/ros/xacro/issues/278>`_) to support:
+
+  - ``$(substitution args)``
+  - ``${python expressions}``
+  - single or double quoting of spaces
+* Contributors: Robert Haschke
+
+1.14.7 (2021-05-30)
+-------------------
+* [feature] Expose YamlDictWrapper as dotify() to allow dotted access to any dict (`#274 <https://github.com/ros/xacro/issues/274>`_)
+* [fix]     Scoped macro evaluation (`#272 <https://github.com/ros/xacro/issues/272>`_)
+* Contributors: Robert Haschke
+
+1.14.6 (2021-03-02)
+-------------------
+* [fix] Report correct filename for XML errors (`#268 <https://github.com/ros/xacro/issues/268>`_)
+* [fix] Python3-compatible property Table (`#266 <https://github.com/ros/xacro/issues/266>`_)
+* [fix] Use outer-scope symbols to resolve include filename in ``xacro:include`` (`#264 <https://github.com/ros/xacro/issues/264>`_)
+* Contributors: Robert Haschke
+
+1.14.5 (2020-10-13)
+-------------------
+* [fix]     yaml loading: recursively wrap lists and dicts for dotted dict access (`#258 <https://github.com/ros/xacro/issues/258>`_)
+* [feature] Provide support for yaml constructors ``!degrees`` and ``!radians`` (`#252 <https://github.com/ros/xacro/issues/252>`_)
+* Contributors: Robert Haschke, G.A. vd. Hoorn
+
+1.14.4 (2020-08-09)
+-------------------
+* [fix] Rework YamlDictWrapper to restore dict properties (`#250 <https://github.com/ros/xacro/issues/250>`_)
+* [fix] Ignore underscores when parsing literal numeric values (`#247 <https://github.com/ros/xacro/issues/247>`_)
+* Contributors: Robert Haschke
+
+1.14.3 (2020-07-05)
+-------------------
+* [feature] Improve warnings
+
+  - Unify meaning of verbosity > 0 (to print file location)
+  - Provide file location on warning in check_attrs()
+  - Issue warning on child elements of <xacro:include> tag
+* [feature] Allow dotted access to yaml-loaded dicts: d.key1.key2.key3 (`#245 <https://github.com/ros/xacro/issues/245>`_)
+* [maint]   Travis: Update distro to Bionic
+* Contributors: Robert Haschke, G.A. vd. Hoorn
+
+1.14.2 (2020-05-21)
+-------------------
+* [maintanence] Remove deprecated xacro.py (`#239 <https://github.com/ros/xacro/issues/239>`_)
+* Contributors: Shane Loretz
+
+1.14.1 (2020-03-29)
+-------------------
+* [feature]     allow optional xacro includes (`#234 <https://github.com/ros/xacro/issues/234>`_)
+* [maintanence] Use setuptools instead of distutils (`#233 <https://github.com/ros/xacro/issues/233>`_)
+* [maintanence] fix Travis: export correct ROS_PYTHON_VERSION
+* Contributors: Alejandro Hernández Cordero, Robert Haschke
+
+1.14.0 (2019-12-08)
+-------------------
+* [maintanence] Remove deprecations
+
+  - Require all xacro commands to be prefixed with 'xacro:'
+  - Remove options --legacy, --inorder, --check-order, --includes
+* Contributors: Robert Haschke
+
+1.13.5 (2019-12-08)
+-------------------
+* [feature] Expose abs_filename() (`#220 <https://github.com/ros/xacro/issues/220>`_)
+* [feature] Catch missing closing brace in $() and ${} expressions
+* [maintanence]
+
+  - Replace deprecated yaml.load() -> yaml.safe_load()
+  - Save macro names internally w/o 'xacro:' prefix
+  - Correctly issue deprecation warning for non-prefixed xacro tags
+* Contributors: Robert Haschke
+
+1.13.4 (2019-09-26)
+-------------------
+* [feature] remove xmlns:xacro from processed file (`#207 <https://github.com/ros/xacro/issues/207>`_)
+
+  - Remove all notions of xmlns:xacro from the resulting document.
+  - If the root node defines a xacro:targetNamespace attribute, this will become the global xmlns namespace of the resulting document.
+* [feature] Add len() to allowed python functions (`#208 <https://github.com/ros/xacro/issues/208>`_)
+* [maintanence]
+
+  - ``--in-order`` warning: reduce severity level to message
+  - fix and cleanup test of cmake extensions
+  - adapt run_xacro() to run xacro from PATH
+  - simplify import of substition_args
+  - remove 'requires' field from setup.py
+  - fix Travis config: use new repository key, use xenial/kinetic distro
+  - basic README.md
+  - fix catkin_lint issue
+  - remove duplicate catkin_python_setup() (`#206 <https://github.com/ros/xacro/issues/206>`_)
+* Contributors: Robert Haschke, James Xu, Martin Pecka
+
+1.13.3 (2018-10-14)
+-------------------
+* use INORDER as default in cmake functions
+* remove weird 'None's in error messages
+* Contributors: Robert Haschke
+
+1.13.2 (2018-05-14)
+-------------------
+* deprecate --includes option (which is tied to deprecated --legacy processing)
+* moved all option handling to cli.py, including deprecation warnings for options
+* Contributors: Robert Haschke
+
+1.13.1 (2018-05-03)
+-------------------
+* fix parsing of quoted strings in default args for xacro params (`#187 <https://github.com/ros/xacro/issues/187>`_)
+* Contributors: Robert Haschke
+
+1.13.0 (2018-03-31)
+-------------------
+* make --inorder processing the default
+* Contributors: Robert Haschke
+
+1.12.1 (2018-03-28)
+-------------------
+* `#183 <https://github.com/ros/xacro/issues/183>`_: unicode support for python2 and python3
+* `#178 <https://github.com/ros/xacro/issues/178>`_: extend list of allowed python builtins: min, max, round
+* `#182 <https://github.com/ros/xacro/issues/182>`_: suppress xacro warnings when determining dependencies
+* `#151 <https://github.com/ros/xacro/issues/151>`_: fixes for `#149 <https://github.com/ros/xacro/issues/149>`_ and `#148 <https://github.com/ros/xacro/issues/148>`_
+* `#157 <https://github.com/ros/xacro/issues/157>`_: fix `#156 <https://github.com/ros/xacro/issues/156>`_ access to undefined target_table
+* `#150 <https://github.com/ros/xacro/issues/150>`_: allow True/False literals in python expressions
+* `#159 <https://github.com/ros/xacro/issues/159>`_: load ROS-related packages on demand, thus becoming more independent from ROS
+* `#173 <https://github.com/ros/xacro/issues/173>`_: allow default values for properties
+* `#172 <https://github.com/ros/xacro/issues/172>`_: fix formatting of XacroException
+* `#171 <https://github.com/ros/xacro/issues/171>`_: fix dependency handling (--deps option)
+* `#163 <https://github.com/ros/xacro/issues/163>`_: full python 3 compatibility
+* Contributors: Robert Haschke, Kartik Mohta, Morgan Quigley, Steven Peters
+
+1.12.0 (2017-03-25)
+-------------------
+
+1.11.2 (2017-02-27)
+-------------------
+* Convert exception to string in a python2/3 compatible way.
+* Use python2/3 independent check for file type.
+* Contributors: Hans Gaiser, Maarten de Vries
+
+1.11.1 (2016-06-22)
+-------------------
+* workaround for xml.dom.minidom issue
+* ensure non-empty error string
+* Contributors: Robert Haschke
+
+1.11.0 (2016-03-25)
+-------------------
+* added short option -i as alternative to --inorder
+* refactored main to fix #122, #107
+* added xacro indicator to error message to fix #123
+* moved banner generation to process_file()
+* removed special (but obsolete) output handling for just_includes mode
+* moved core processing pipeline into function process_file()
+* improved documentation: more comments, input_file -> input_file_name
+* fix #120: handle non-space whitespace characters in params string
+* extended tests to handle non-space whitespace characters in params string
+* always store macros with xacro: prefix in front: #118
+* fix #115: enforce xacro namespace usage with --xacro-ns option
+* apply correct checking for include tags, and extend testcase
+* allow (one-level) nested expression/extension evaluation
+* Contributors: Robert Haschke, Morgan Quigley
+
+1.10.6 (2015-09-01)
+-------------------
+* use correct catkin environment for cmake dependency checking
+* fixed dependency definition for cmake usage
+* Contributors: Robert Haschke
+
+1.10.5 (2015-08-12)
+-------------------
+* fix #108: evaluate property blocks recursively too
+* improved macro parameter parsing
+* use a regular expression to parse a param spec with forwarding and default
+* allow for spaces in default string (within single quotes)
+* forwarding macro arguments from outer scope
+* switched to `^|` syntax
+* use more compact `$|` syntax
+* moved parsing of argument defaults to grab_macro()
+* explicit forwarding of properties to macro scope
+* replace silent/implicit forwarding of properties from outer scope to
+  macro scope by an explicit "call" to a `forward(<name>[,<default>])` function.
+* implicit forwarding of outer-scope properties to macro args (#100)
+* property evaluation fixes
+* suppress double evaluation of properties
+* adapted unittest to cover the fixed issue
+* fixed evaluation order for properties exported to parent or global scope
+* Merge pull request #103 from ubi-agni/overwrite-check
+  issue warning when attempting to overwrite existing global property
+* fixed unittest: avoid overwrite warning
+* warn when overwriting any globally defined variable
+* Merge pull request #102 from ubi-agni/completion
+  bash completion
+* Merge pull request #99 from ubi-agni/jade-devel
+  reworked macro resolution
+* moved test_macro_name_with_colon() to class TestXacro
+  should be tested both, in oldorder and inorder mode
+* bash completion
+* improved error message for failed $(find)
+* reworked macro resolution
+  python-eval-based macro resolution (introduced to enable namespaces)
+  heavily restricted the set of possible macro names (only valid python
+  identifiers were allowed)
+  Particularly, xacro: prefixed macro names were forbidden.
+* initial attempt to fix #97
+* add failing test case with colon in the macro name
+* Contributors: Robert Haschke
+
+1.10.4 (2015-06-18)
+-------------------
+* removed test_DEPRECATED_should_replace_before_macroexpand()
+  duplicates test_should_replace_before_macroexpand()
+* fixed evaluation order of macro arguments and body
+  Macro arguments need to be evaluated and assigned to properties before
+  body is evaluated. Otherwise, the evaluated value will be converted to
+  str, i.e. loosing original type.
+* Contributors: Robert Haschke
+
+1.10.3 (2015-06-16)
+-------------------
+* deprecate ``--oldorder`` processing
+* added ``--check-order`` option to do a simple check for ``--inorder`` compatibility
+
+  - Most probable incompatibility is redefining a property after its usage.
+  - tested and reported with file location of (first) redefinition after usage.
+* moved command line processing to cli.py
+* explain verbosity levels in usage string
+* colorize errors during cli parsing
+* log definition and usage of properties
+* replaced debug option by verbosity options -q, -v
+* fixed evaluation time of default macro params
+* introduced Macro object to increase code readability
+* parse a macro's parameter list once at declaration time (instead of every instantiation)
+* extended test_multiple_blocks() to check for both normal and reversed order
+* added unittest to increase code coverage
+* do not issue deprecation warning for <include> tags that are non-xacro
+* added option --oldorder
+* allow to store properties to parent or global scope
+* added <xacro:attribute>
+* cleaned up error message about missing files
+* moved xml-specific functions to xmlutils.py
+  new generic functions opt_attrs(), reqd_attrs(), and check_attrs()
+  to fetch optional and required attributes and warn about unknown ones
+  in a uniform fashion
+* unittest to allow empty <arg> defaults
+* Merge pull request #94 from ubi-agni/minor-fixes
+* minor fixes
+* remove duplicates in --deps output
+* fixed dependency checking for --inorder mode (which requires full processing)
+* fixed doc of xacro' cmake macros
+* renamed "xacro:rename" to "xacro:element"
+* allow namespacing for xacro:include's
+* allow renaming of element names using xacro:rename
+* unittest cleanup
+* check property and macro names to be valid python identifiers
+* allow namespacing of xacro:include's
+* properties and macros in an included file will go into their own,
+  separate namespace, if the XML attribute `ns` is provided.
+  Access is by standard python syntax: namespace.name
+* allow renaming of element names
+  <xacro:rename xacro:name="<new element name>"/>
+* moved unittests requiring --inorder processing to class TestXacroInorder
+* added unittest test_dynamic_macro_undefined()
+* improved error message when variable include filename is used
+  without --inorder
+* stripped down unittest test_inorder_processing()
+* improved processing
+* adapted pr2 gold standard removing most comments again
+  this partially reverts 59605fb1521583dc63efdea13f4c45128499bd20
+* remove all XML comments directly before xacro elements
+  (These are considered xacro-related only and should be removed in the final doc.)
+  Leaving an empty line between xacro-unrelated and xacro-related comments
+  allows to include the former.
+* unittest: test_ignore_xacro_comments()
+* improved processing
+
+  - recursive (instead of iterative) eval_all()
+  - reusable process_include()
+  - replace_node() function to replace xacro tag by some other content
+  - avoid reprocessing of nodes
+  - avoid deep copy where possible (speedup)
+* fix evaluation (#83)
+* yaml support
+* check for consistency of xml namespaces on xacro:include
+* replaced strip()=='' by more efficient isspace()
+* allow transitive definition of substition args
+* fixed evaluation of literals in property definitions
+
+  - literals with preceding whitespace will be silently stripped (#83)
+  - more complex evaluation test (perturbing spaces added)
+* fixed xacro namespaces in pr2 files to get rid of new inconsistency warning
+* warning message on inconsistent namespace redefinition for includes
+* yaml support
+  ${load_yaml('file.yaml')} to load dict from yaml file
+* Merge pull request #85 from ubi-agni/error-reporting
+  improved error reporting
+* nicer formatting of multiple "when evaluating expression" lines
+* improved formatting of error messages
+  use XacroException to wrap and augment other exceptions
+  to achieve a clearer error formatting
+* better error message for missing substitution args
+* use colorized warnings where possible
+* included macro stack in error-reporting
+* maintain filestack to facilitate error reporting at any time
+* Merge pull request #82 from ubi-agni/unittests
+  improved unittesting
+* allow to capture (and check) stderr in unit tests
+* improved unittests to test both, classic and in-order processing
+* Merge pull request #81 from ubi-agni/jade-devel
+  Thank you for your time and contributions. Improving cosmetics is important.
+* PEP8 cleanup
+* cmake: only copy files to devel space if new
+* Merge pull request #80 from ubi-agni/jade-devel
+* improved error-handling opening the output file
+  - running multiple xacro process in parallel, all writing into a new dir
+  could cause a race condition when creating the dir
+  - improved error message on output creation failure
+* removed rospy dependency
+  - Importing rospy caused build order issues with ros_comm in workspace
+* Filtering out REMAP command-line arguments is done manually now.
+* update authors/maintainers and copyright statements
+* deprecate non-namespaced xacro tags
+* added missing print_location_msg() for file that actually failed parsing
+* improved deprecation warnings
+* New cli option `--xacro-ns` allows to enforce the new policy
+  requiring the xacro namespace prefix (and suppressing deprecation warnings).
+  However, non-prefixed tags will not be modified by xacro anymore
+  (as requested by #41, #59, #60).
+  Partially reverted cb73cfd8c678adfda2172accef398189ea2338a1, handling
+  <arg> tags in the same fashion as other tags, i.e. issue a warning if
+  used without prefix and ignoring it with cli argument `--xacro-ns`.
+* fixed pr2 xacro files to use 'xacro:' prefixed tags only
+* fixed unittests in test_xacro.py to use 'xacro:' prefixed tags only
+* deprecation message for missing xacro namespace prefix in xml tags
+* moved colored warning messages into color.py (for reuseability)
+* added missing print_location_msg() for file that actually failed parsing
+* improved xacro's cmake macros
+* prepend ${PACKAGE_NAME} to all generated cmake targets
+  Otherwise multiple packages employing xacro's cmake macros will use the
+  same conflicting target name.
+  This is only an issue with catkin_make, which defines a single global
+  cmake namespace. The new catkin tools (or catkin_make_isolated) build
+  each package separately.
+* basic unittest for xacro's cmake macros
+* improved xacro's cmake macros
+  - xacro_add_xacro_file() automatically determines output file from input (removing .xacro suffix).
+  If that fails, a fatal error is raised.
+  - added xacro_install() to allow installation into both, devel and install space.
+  - replaced conveniency function xacro_add_files()
+* Contributors: Robert Haschke
+
+1.10.2 (2015-05-23)
+-------------------
+
+* added --debug option to explicitly enable stack traces
+  By default, only show error message to the user.
+  Stack traces are only interesting for xacro developers.
+* recursive include processing
+  - more informed error messages (which file was included from where)
+  - allows relative path names for include filename specs
+  they are interpreted relative to the current file
+* new substitution command $(cwd) to extract current working directory
+* added unittest cases
+  - creation of required subdirs for output
+  - recursive xacro:include
+  - extended test_include_glob() to check for all glob patterns
+* added run_xacro() function to simplify unittests running xacro script
+* moved xacro.py back to original location
+* nicely colored deprecation warning
+* create required dirs before opening output file
+* added convenience cmake-macro xacro_add_target()
+  to auto-generate xacro-processed files
+* added cmake status message before launching xacro
+  (xacro might run for quite a while)
+* fetch xacro --deps errors at report them as a warning
+* simplified deprecation message
+* added missing return statement
+* removed obsolete math import
+  left over from deaaae2c69edd7d5e185eeb098c1521d8711608b
+* install xacro.py again (for backwards compatibility)
+  usage of xacro.py issues a deprecation warning
+* simplified scripts/xacro - removed xacro.py
+  - made run script "scripts/xacro" and install process follow standards
+  - removed xacro.py
+  - added dependencies to setup.py
+  Having the binaries xacro and xacro.py installed side by side causes
+  problems, because xacro.py is wrongly taken as the module.
+  This was avoided by the rather complex filtering of the sys.path.
+  Switched to ROS standard now, using a binary script called "xacro".
+* changed tests to use the whole xacro processing pipeline
+  utilizing the modularization of main() from previous commit
+  This simplifies several existing tests, especially these using files on disk.
+* split main() into process_cli_arg(), parse(), process_doc()
+* extended cmake macro xacro_add_xacro_file()
+  - handle INORDER option
+  - handle REMAP arguments
+  - create absolute input file names automatically
+  usage: xacro_add_xacro_file(input output INORDER REMAP ...)
+* stripped new unit tests to essential xml snippets
+* merged pull request `#68 <https://github.com/ros/xacro/issues/68>`_: eval properties assigned from <arg> tags as literals
+  In the following example:
+  <xacro:arg name="val" default="0.5"/>
+  <xacro:property name="val" value="$(arg val)"/>
+  ${val} was not evaluated as a number, but as string only.
+  Thus numerical expressions failed with an exception.
+* factored out get_boolean_value()
+* <xacro:arg> needs to be fully specified
+* (handling <arg> tags (without xacro ns-prefix) disabled native <arg> tags)
+  add test for eating launch parameter arguments
+  remove check for "arg" parameter.
+  move new test function to bottom of source
+* added unit tests for evaluation of list, tuple, and dict literals
+* fixed some code style issues
+* fixed string-isinstance checks (for python 3 compatibility)
+* do not evaluate list, dict, tuple expressions as literals (without ${} syntax)
+* added dict to list of known global symbols
+* focused global_symbols definition in the beginning of the file
+  added some basic python symbols: list, str, float, int and map
+  allowing some basic computation
+* tuning performance: instantiate QuickLexer's regexps only once
+* Contributors: Robert Haschke, Martin Pecka, Mike O'Driscoll, Morgan Quigley
+
+1.10.1 (2015-04-01)
+-------------------
+* improved error handling and more descriptive error messages
+* correctly raise a XacroException on invalid, i.e. non-boolean, <xacro:if> expressions.
+  (removed left-over debugging code, added test case)
+* raise an exception on undefined, but used macros
+  Using the syntax <xacro:macroname/> should raise an exception if
+  macroname is not defined. Added appropriate code and a test case.
+* fixed bookkeeping in lazy evaluation
+  switch Table.unevaluated from list to set to avoid multiple key entries
+* fix formatting of changelog
+* Contributors: Robert Haschke
+
+1.10.0 (2015-03-13)
+-------------------
+* security measure: forbid access to __builtins__ in expressions
+* literal evaluation should only consider literals, but no expressions use ast.literal_eval()
+* removed eval() from xacro:if evaluation
+* back to string comparison to handle (lowercase) true and false
+* add test case for equality expressions in <xacro:if>
+* add test case for math function usage
+* python based evaluation of expressions
+  - replaced handle_expr with python-internal eval() call
+  - care has been taken to resolve variables recursively on demand (in Table.__getitem__)
+  - allows for evaluation of standard math functions
+  - other desired functions could be added in eval_self_contained
+  - Values in Table symbols are not stored as strings but as typed values.
+* If text is required, a conversion with str() is performed, to ensure
+  proper evaluation of expressions. Otherwise 3*"1" would evaluate to "111".
+* use __future__.division we can handle integer division evaluating to
+  floating-point devision, as before
+* allow variable names for filename attribute in <xacro:include>
+* allow for ordered XML processing to avoid issues with multiply defined
+  properties and macros in (typically 3rd party) include files
+  - enable the new behaviour by passing --inorder cmdline option
+  - to improve code readibility and reusability, introduced functions
+* process_include(node), grab_macro(elt, macros), grab_property(elt, symbols)
+  containing 1:1 corresponding handling from process_includes, grab_macros,
+  and grab_properties
+  - added corresponding test case test_inorder_processing()
+* dynamic macro names using <xacro:call macro=""/>
+* fixup unittests and handling of non-element nodes in <include>, <if>, <macro>
+* updated pr2 gold standard to include all comments
+* allow to ignore comments in nodes_match()
+* New handling of non-element nodes invalidates pr2 gold standard (adding
+  a lot more comments). To allow validation, allow to ignore all
+  comments in comparison (as before).
+* fixed handling of non-element nodes in <include>, <if>, <macro>
+* fixed writexml: text nodes were not printed when other siblings exist
+  - print all text, but skip whitespace-only text nodes
+* improved xml matching
+  - so far only element nodes (with its attributes) were considered
+  - now also consider TEXT, CDATA, and COMMENT nodes
+  - added function text_matches (normalizing consecutive whitespace to a single space)
+  - added some new unit tests
+  - test_consider_non_elements:
+  non-element nodes are not yet considered in <if> and <macro>
+* travis-ci: use catkin_make
+* travis-ci: fixup running of tests
+* fix pathnames used in test case
+* Include CATKIN_ENV params at build time.
+* use output filename flag instead of shell redirection
+* create output file after parsing is complete, not before
+* Contributors: Robert Haschke, Mike O'Driscoll, Morgan Quigley, William Woodall
+
+1.9.3 (2015-01-14)
+------------------
+* merge test cases
+* add a snapshot of the pr2 model to the test directory. add a test case which verifies that the pr2 model is parsed equal to a 'golden' parse of it.
+* add more tests
+* add default arg tests
+* Allow default values for substitution args
+* Fix up comments
+* Allow xacro macros to have default parameters
+* Contributors: Paul Bovbel, Morgan Quigley
+
+1.9.2 (2014-07-11)
+------------------
+* add a few more tests to exercise the symbol table a bit more
+* allow for recursive evaluation of properties in expressions
+* add useful debugging information when parameters are not set
+* stop test from failing the second time it is run
+* unified if/unless handling, correctly handle floating point expressions
+* floating point expressions not equal zero are now evaluated as True
+* changed quotes to omit cmake warning
+* Contributors: Robert Haschke, Mike Ferguson
+
+1.9.1 (2014-06-21)
+------------------
+* fixup tests so they run
+* export architecture_independent flag in package.xml
+* installed relocatable fix
+* Contributors: Michael Ferguson, Mike Purvis, Scott K Logan
+
+1.9.0 (2014-03-28)
+------------------
+* Remove the roslint_python glob, use the default one.
+* Add roslint target to xacro; two whitespace fixes so that it passes.
+* fix evaluation of integers in if statements
+  also added a unit test, fixes `#15 <https://github.com/ros/xacro/issues/15>`_
+* fix setting of _xacro_py CMake var, fixes `#16 <https://github.com/ros/xacro/issues/16>`_
+* Add support for globbing multiple files in a single <xacro:include>
+* code cleanup and python3 support
+* check for CATKIN_ENABLE_TESTING
+
+1.8.4 (2013-08-06)
+------------------
+* Merge pull request `#9 <https://github.com/ros/xacro/issues/9>`_ from davetcoleman/hydro-devel
+  Xacro should not use plain 'include' tags but only namespaced ones.
+* Fix for the fact that minidom creates text nodes which count as child nodes
+* Removed <uri> checking and made it more general for any child element of an <include> tag
+* Removed Groovy reference, only being applied to Hydro
+* Created check for Gazebo's <uri> tabs only only shows deprecated warnings if not present.
+* Small spelling fix
+* Xacro should not use plain 'include' tags but only namespaced ones.
+* Merge pull request `#8 <https://github.com/ros/xacro/issues/8>`_ from piyushk/hydro-devel-conditional
+  xacro conditional blocks
+* using refined arguments instead of sys.argv for xml file location
+* adding conditional blocks to xacro
+
+1.8.3 (2013-04-22)
+------------------
+* bumped version to 1.8.3 for hydro release
+* backwards compatilibity with rosbuild
+* adding unit test for substitution args
+* Adding supoprt for substitution_args 'arg' fields
+* Remove bin copy of xacro.py
+* 1.7.3
+* Install xacro.py as a program so it can be run
+* 1.7.2
+* fixed build issues introduced in catkinization
+* 1.7.1
+* PEP8, cleanup, and remove roslib
+* Update copyright, self import guard, and catkinize
+* Catkinize.
+* Cleanup in preparation of catkinization.
+* Added tag unstable for changeset 169c4bf30367
+* Added tag xacro-1.6.1 for changeset fc45af7fdada
+* 1.6.1 marker
+* xacro: fuerte compat with sub args import
+* Added tag unstable for changeset 2d3c8dbfa3c9
+* Added tag xacro-1.6.0 for changeset e4a4455189bf
+* 1.6.0
+* converted to unary stack from common stack
+* xacro: fixed inserting property blocks (ros-pkg `#4561 <https://github.com/ros/xacro/issues/4561>`_)
+* xacro now uses XacroExceptions. String exceptions are not allowed in Python anymore. `#4209 <https://github.com/ros/xacro/issues/4209>`_
+* Added Ubuntu platform tags to manifest
+* Xacro now places comments below <?xml> tag (`#3859 <https://github.com/ros/xacro/issues/3859>`_)
+* Xacro prints out cleaner xml.
+  Elements are now often separated by a newline.
+* xacro dependency on roslaunch removed `#3451 <https://github.com/ros/xacro/issues/3451>`_
+* Xacro now adds a message mentioning that the file was autogenerated (`#2775 <https://github.com/ros/xacro/issues/2775>`_)
+* Remove use of deprecated rosbuild macros
+* Integers stay integers in xacro, fixing `#3287 <https://github.com/ros/xacro/issues/3287>`_
+* Tests for r25868
+* Added a flag for only evaluating include tags in xacro
+* Allowing multiple blocks and multiple insert_blocks, fixing `#3322 <https://github.com/ros/xacro/issues/3322>`_ and `#3323 <https://github.com/ros/xacro/issues/3323>`_
+* doc review completed for xacro
+* adding mainpage for xacro doc review
+* Added xacro.cmake file that exports new xacro_add_xacro_file() macro, `#3020 <https://github.com/ros/xacro/issues/3020>`_
+* Namespaced "include" tag in xacro
+* Marked xacro as api reviewed
+* Xacro now correctly declares the namespaces of the included documents in the final
+* Made xacro accept xml namespaces
+* Xacro now errors hard when a property is used without being declared
+* Xacro no longer allows you to create properties with "${}" in the name
+* Added the ability to escape "${" in xacro
+* Made the tests in xacro run again.
+* Created xacro/src
+* migration part 1
--- /dev/null
+++ ros-noetic-xacro-1.14.18/CMakeLists.txt
@@ -0,0 +1,25 @@
+cmake_minimum_required(VERSION 3.0.2)
+project(xacro)
+
+find_package(catkin REQUIRED COMPONENTS roslint)
+
+catkin_package(
+  CFG_EXTRAS xacro-extras.cmake
+)
+
+## Uncomment this if the package has a setup.py. This macro ensures
+## modules and global scripts declared therein get installed
+## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
+catkin_python_setup()
+
+catkin_install_python(PROGRAMS scripts/xacro
+  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
+
+if(CATKIN_ENABLE_TESTING)
+  ## Add folders to be run by python nosetests
+  catkin_add_nosetests(test)
+  ## add tests for xacro's cmake functions
+  add_subdirectory(test)
+endif()
+
+roslint_python()
--- /dev/null
+++ ros-noetic-xacro-1.14.18/LICENSE
@@ -0,0 +1,27 @@
+Copyright Robert Haschke, Bielefeld University
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are met:
+
+1. Redistributions of source code must retain the above copyright
+   notice, this list of conditions and the following disclaimer.
+
+2. Redistributions in binary form must reproduce the above copyright
+   notice, this list of conditions and the following disclaimer in the
+   documentation and/or other materials provided with the distribution.
+
+3. Neither the name of the copyright holder nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGE.
--- /dev/null
+++ ros-noetic-xacro-1.14.18/README.md
@@ -0,0 +1,6 @@
+# Xacro (XML Macros)
+
+**Xacro is an XML macro language**
+
+With `xacro`, you can construct shorter and more readable XML files by using macros that expand to larger XML expressions.
+Recent documentation can be found in the [wiki](https://github.com/ros/xacro/wiki). For older releases, have a look at the [ROS wiki](http://wiki.ros.org/xacro).
--- /dev/null
+++ ros-noetic-xacro-1.14.18/cmake/xacro-extras.cmake
@@ -0,0 +1,180 @@
+add_custom_target(${PROJECT_NAME}_xacro_generated_to_devel_space_ ALL)
+
+
+## xacro_add_xacro_file(<input> [<output>] [REMAP <arg> <arg> ...]
+##                      [OUTPUT <variable>] DEPENDS <arg> <arg>)
+##
+## Creates a command to run xacro on <input> like so:
+## xacro -o <output> <input> [<remap args>]
+##
+## If <output> was not specified, it is determined from <input> removing the suffix .xacro
+## The absolute output file name is returned in variable <output>, which defaults to
+## XACRO_OUTPUT_FILE.
+##
+## In order to actually build and install, you need to provide a custom target:
+## foreach(xacro_file ${MY_XACRO_FILES})
+##   xacro_add_xacro_file(${xacro_file} REMAP bar:=foo foo:=bar)
+##   list(APPEND xacro_outputs ${XACRO_OUTPUT_FILE})
+## endforeach()
+## xacro_install(xacro_target ${xacro_outputs} DESTINATION xml)
+##
+## Be aware, that xacro_install() is required to install into both, install and devel space.
+## Normal install() only installs into install space!
+##
+## For conveniency, you might want to use xacro_add_files(), which does the same:
+## xacro_add_files(${MY_XACRO_FILES} REMAP bar:=foo foo:=bar
+##                 TARGET xacro_target INSTALL DESTINATION xml)
+function(xacro_add_xacro_file input)
+  # parse arguments
+  set(options)
+  set(oneValueArgs OUTPUT)
+  set(multiValueArgs REMAP DEPENDS)
+  cmake_parse_arguments(_XACRO "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
+
+  ## process arguments
+  # retrieve output file name
+  if(_XACRO_UNPARSED_ARGUMENTS)
+    # output file explicitly specified
+    list(GET _XACRO_UNPARSED_ARGUMENTS 0 output)
+    list(REMOVE_AT _XACRO_UNPARSED_ARGUMENTS 0)
+    # any remaining unparsed args?
+    if(_XACRO_UNPARSED_ARGUMENTS)
+      message(WARNING "unknown arguments: ${_XACRO_UNPARSED_ARGUMENTS}")
+    endif(_XACRO_UNPARSED_ARGUMENTS)
+  else()
+    # implicitly determine output file from input
+    if(${input} MATCHES "(.*)[.]xacro$")
+      set(output ${CMAKE_MATCH_1})
+    else()
+      message(FATAL_ERROR "no <output> specified for: " ${input})
+    endif()
+  endif()
+  # message(STATUS "output: ${output}")
+
+  ## determine absolute output target location
+  if(IS_ABSOLUTE ${output})
+    set(abs_output ${output})
+  else()
+    set(abs_output ${CMAKE_CURRENT_BINARY_DIR}/${output})
+  endif()
+  # message(STATUS "abs_output: ${abs_output}")
+
+  ## export abs_output to parent scope in variable ${_XACRO_OUTPUT}
+  if(NOT _XACRO_OUTPUT)
+    set(_XACRO_OUTPUT XACRO_OUTPUT_FILE)
+  endif()
+  set(${_XACRO_OUTPUT} ${abs_output} PARENT_SCOPE)
+
+  ## Call out to xacro to determine dependencies
+  message(STATUS "xacro: determining deps for: " ${input} " ...")
+  execute_process(COMMAND ${CATKIN_ENV} xacro --deps ${input} ${_XACRO_REMAP}
+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
+    RESULT_VARIABLE _xacro_result
+    ERROR_VARIABLE _xacro_err
+    OUTPUT_VARIABLE _xacro_deps_result
+    OUTPUT_STRIP_TRAILING_WHITESPACE)
+  if(_xacro_result)
+    message(WARNING "failed to determine deps for: ${input}
+${_xacro_err}")
+  endif(_xacro_result)
+
+  separate_arguments(_xacro_deps_result)
+
+  ## command to actually call xacro
+  add_custom_command(OUTPUT ${output}
+    COMMAND ${CATKIN_ENV} xacro -o ${abs_output} ${input} ${_XACRO_REMAP}
+    DEPENDS ${input} ${_xacro_deps_result} ${_XACRO_DEPENDS}
+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
+    COMMENT "xacro: generating ${output} from ${input}"
+    )
+endfunction(xacro_add_xacro_file)
+
+
+## xacro_install(<target> <output> [<output> ...] DESTINATION <path>)
+##
+## installs xacro-generated files both to devel and input space
+## into ${CATKIN_PACKAGE_SHARE_DESTINATION}/<path>
+function(xacro_install target)
+  # parse arguments
+  set(oneValueArgs DESTINATION)
+  cmake_parse_arguments(_XACRO "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
+  set(outputs ${_XACRO_UNPARSED_ARGUMENTS})
+
+  ## rule to create target dir
+  file(TO_CMAKE_PATH ${CATKIN_PACKAGE_SHARE_DESTINATION}/${_XACRO_DESTINATION} dest)
+  file(TO_CMAKE_PATH ${CATKIN_DEVEL_PREFIX}/${dest} TARGET_DIR)
+  add_custom_command(OUTPUT ${TARGET_DIR}
+    COMMAND ${CMAKE_COMMAND} -E make_directory ${TARGET_DIR}
+    COMMENT "creating dir ${TARGET_DIR}")
+
+  ## process list of outputs
+  foreach(output ${outputs})
+    get_filename_component(tgt ${output} NAME)
+    file(TO_CMAKE_PATH ${TARGET_DIR}/${tgt} tgt)
+    list(APPEND tgts ${tgt})
+
+    # rule to create devel space tgt
+    add_custom_command(OUTPUT ${tgt}
+      COMMAND ${CMAKE_COMMAND} -E copy_if_different ${output} ${tgt}
+      DEPENDS ${TARGET_DIR} ${output}
+      COMMENT "Copying to devel space: ${tgt}"
+      )
+  endforeach()
+
+  ## rule to create devel space tgts
+  add_custom_target(${PROJECT_NAME}_${target}_to_devel_space_ DEPENDS ${tgts})
+  # add to main target _xacro_generated_to_devel_space_
+  add_dependencies(${PROJECT_NAME}_xacro_generated_to_devel_space_
+                   ${PROJECT_NAME}_${target}_to_devel_space_)
+
+
+  ## normal install
+  install(FILES ${outputs} DESTINATION ${dest})
+endfunction(xacro_install)
+
+
+## xacro_add_files(<file> [<file> ...] [REMAP <arg> <arg> ...] [DEPENDS <arg> <arg>]
+##                 [TARGET <target>] [INSTALL [DESTINATION <path>]])
+##
+## create make <target> to generate xacro files
+## and optionally install to ${CATKIN_PACKAGE_SHARE_DESTINATION}/<path>
+## in devel and install space.
+function(xacro_add_files)
+  # parse arguments
+  set(options INSTALL)
+  set(oneValueArgs OUTPUT TARGET DESTINATION)
+  set(multiValueArgs REMAP DEPENDS)
+  cmake_parse_arguments(_XACRO "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
+
+  ## process arguments
+  # prepare REMAP args (prepending REMAP)
+  if(_XACRO_REMAP)
+    set(_XACRO_REMAP REMAP ${_XACRO_REMAP})
+  endif()
+  # prepare DEPENDS args (prepending DEPENDS)
+  if(_XACRO_DEPENDS)
+    set(_XACRO_DEPENDS DEPENDS ${_XACRO_DEPENDS})
+  endif()
+
+  # have INSTALL option, but no TARGET: fallback to default target
+  if(_XACRO_INSTALL AND NOT _XACRO_TARGET)
+    # message(STATUS "xacro: no TARGET specified, using default")
+    set(_XACRO_TARGET _xacro_auto_generate)
+  endif()
+
+  foreach(input ${_XACRO_UNPARSED_ARGUMENTS})
+    # call to main function
+    xacro_add_xacro_file(${input} ${_XACRO_OUTPUT} ${_XACRO_REMAP} ${_XACRO_DEPENDS})
+    list(APPEND outputs ${XACRO_OUTPUT_FILE})
+  endforeach()
+
+  if(outputs)
+    # link to target
+    add_custom_target(${PROJECT_NAME}_${_XACRO_TARGET} ALL DEPENDS ${outputs})
+
+    # install?
+    if(_XACRO_INSTALL)
+      xacro_install(${_XACRO_TARGET} ${outputs} DESTINATION ${_XACRO_DESTINATION})
+    endif(_XACRO_INSTALL)
+  endif()
+endfunction(xacro_add_files)
--- /dev/null
+++ ros-noetic-xacro-1.14.18/package.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0"?>
+<package>
+  <name>xacro</name>
+  <version>1.14.18</version>
+  <description>Xacro (XML Macros)
+
+    Xacro is an XML macro language. With xacro, you can construct shorter and more readable XML files by using macros that expand to larger XML expressions.
+  </description>
+
+  <maintainer email="rhaschke@techfak.uni-bielefeld.de">Robert Haschke</maintainer>
+  <maintainer email="morgan@osrfoundation.org">Morgan Quigley</maintainer>
+
+  <license>BSD</license>
+
+  <url type="website">http://ros.org/wiki/xacro</url>
+  <url type="repository">https://github.com/ros/xacro</url>
+  <url type="bugtracker">https://github.com/ros/xacro/issues</url>
+
+  <author>Stuart Glaser</author>
+  <author>William Woodall</author>
+  <author>Robert Haschke</author>
+
+  <buildtool_depend version_gte="0.5.68">catkin</buildtool_depend>
+
+  <build_depend>roslint</build_depend>
+
+  <run_depend>roslaunch</run_depend>
+
+  <test_depend>rostest</test_depend>
+
+  <export>
+    <architecture_independent/>
+  </export>
+</package>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/scripts/completion.bash
@@ -0,0 +1,39 @@
+function _file_arg()
+{
+  # search backwards for an existing filename argument
+  for (( i=${cword}-1 ; i > 0 ; i-- )) ; do
+    if [[ ${words[i]} != -* ]] && [ -e ${words[i]} ] ; then
+      echo ${words[i]}
+      return
+    fi
+  done
+}
+
+function _complete_xacro {
+    local cur prev words cword
+    _init_completion || return # this handles default completion (variables, redirection)
+
+    if [[ ${cur} =~ \-.* ]]; then
+        COMPREPLY+=($(compgen -W "--help --deps -q -v --verbosity=" -- ${cur}))
+        [[ $COMPREPLY == *= ]] && compopt -o nospace
+    else
+        local FILE=$(_file_arg)
+        if [[ $FILE == "" ]]; then
+            compopt -o filenames 2>/dev/null
+            COMPREPLY+=($(compgen -o plusdirs -f -X "!*.xacro" -- ${cur}))
+        else
+            # search for <xacro:arg> tags and list corresponding argument names
+            local AWK=$(which awk)
+            if [[ -x ${AWK} ]]; then
+                local _xacro_args=$(${AWK} '{ match($0, /<(xacro:)?arg.*name="([^"]*)"/, results); if(results[2] != "") print results[2] ":="}' $FILE 2> /dev/null)
+                # awk should be very silent about errors and return 0 on success
+                if [[ $? == 0 ]]; then
+                    compopt -o nospace 2>/dev/null
+                    COMPREPLY+=($(compgen -W "${_xacro_args}" -- "${cur}"))
+                fi
+            fi
+        fi
+    fi
+}
+
+complete -F "_complete_xacro" "xacro"
--- /dev/null
+++ ros-noetic-xacro-1.14.18/scripts/xacro
@@ -0,0 +1,33 @@
+#! /usr/bin/env python
+# Copyright (c) 2013, Willow Garage, Inc.
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of the Willow Garage, Inc. nor the names of its
+#       contributors may be used to endorse or promote products derived from
+#       this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+# Author: Stuart Glaser
+# Maintainer: William Woodall <wwoodall@willowgarage.com>
+
+import xacro
+xacro.main()
--- /dev/null
+++ ros-noetic-xacro-1.14.18/setup.py
@@ -0,0 +1,12 @@
+#!/usr/bin/env python
+
+from setuptools import setup
+from catkin_pkg.python_setup import generate_distutils_setup
+
+d = generate_distutils_setup(
+    packages=['xacro'],
+    package_dir={'': 'src'},
+    scripts=['scripts/xacro']
+)
+
+setup(**d)
--- /dev/null
+++ ros-noetic-xacro-1.14.18/src/xacro/__init__.py
@@ -0,0 +1,1180 @@
+# Copyright (c) 2015, Open Source Robotics Foundation, Inc.
+# Copyright (c) 2013, Willow Garage, Inc.
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of the Open Source Robotics Foundation, Inc.
+#       nor the names of its contributors may be used to endorse or promote
+#       products derived from this software without specific prior
+#       written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+# Authors: Stuart Glaser, William Woodall, Robert Haschke
+# Maintainer: Morgan Quigley <morgan@osrfoundation.org>
+
+from __future__ import print_function, division
+
+import ast
+import collections
+import enum
+import glob
+import math
+import os
+import re
+import sys
+import xml.dom.minidom
+
+from copy import deepcopy
+from .cli import process_args
+from .color import error, message, warning
+from .xmlutils import opt_attrs, reqd_attrs, first_child_element, \
+    next_sibling_element, replace_node
+
+
+try:  # python 2
+    _basestr = basestring
+    encoding = {'encoding': 'utf-8'}
+except NameError:  # python 3
+    _basestr = str
+    unicode = str
+    encoding = {}
+
+# Dictionary of substitution args
+substitution_args_context = {}
+
+
+# Stack of currently processed files / macros
+filestack = None
+macrostack = None
+
+
+def init_stacks(file):
+    global filestack
+    global macrostack
+    filestack = [file]
+    macrostack = []
+
+
+def abs_filename_spec(filename_spec):
+    """
+    Prepend the dirname of the currently processed file
+    if filename_spec is not yet absolute
+    """
+    if not os.path.isabs(filename_spec):
+        parent_filename = filestack[-1]
+        basedir = os.path.dirname(parent_filename) if parent_filename else '.'
+        return os.path.join(basedir, filename_spec)
+    return filename_spec
+
+
+class YamlListWrapper(list):
+    """Wrapper class for yaml lists to allow recursive inheritance of wrapper property"""
+    @staticmethod
+    def wrap(item):
+        """This static method, used by both YamlListWrapper and YamlDictWrapper,
+           dispatches to the correct wrapper class depending on the type of yaml item"""
+        if isinstance(item, dict):
+            return YamlDictWrapper(item)
+        elif isinstance(item, list):
+            return YamlListWrapper(item)
+        else:  # scalar
+            return item
+
+    def __getitem__(self, idx):
+        return YamlListWrapper.wrap(super(YamlListWrapper, self).__getitem__(idx))
+
+    def __iter__(self):
+        for item in super(YamlListWrapper, self).__iter__():
+            yield YamlListWrapper.wrap(item)
+
+
+class YamlDictWrapper(dict):
+    """Wrapper class providing dotted access to dict items"""
+    def __getattr__(self, item):
+        try:
+            return YamlListWrapper.wrap(super(YamlDictWrapper, self).__getitem__(item))
+        except KeyError:  # raise AttributeError instead to support hasattr()
+            raise AttributeError("The yaml dictionary has no key '{}'".format(item))
+
+    __getitem__ = __getattr__
+
+
+class ConstructUnits(enum.Enum):
+    """utility enumeration to construct a values with a unit from yaml"""
+    __ConstructUnitsValue = collections.namedtuple('__ConstructUnitsValue', ['tag', 'conversion_constant'])
+    # Angles [base: radians]
+    angle_radians    = __ConstructUnitsValue(u'!radians', 1.0)
+    angle_degrees    = __ConstructUnitsValue(u'!degrees', math.pi/180.0)
+    # Length [base: meters]
+    length_meters      = __ConstructUnitsValue(u'!meters', 1.0)
+    length_millimeters = __ConstructUnitsValue(u'!millimeters', 0.001)
+    length_foot        = __ConstructUnitsValue(u'!foot', 0.3048)
+    length_inches      = __ConstructUnitsValue(u'!inches', 0.0254)
+
+    def constructor(self, loader, node):
+        """utility function to construct a values with a unit from yaml"""
+        value = loader.construct_scalar(node)
+        try:
+            return float(safe_eval(value, _global_symbols))*self.value.conversion_constant
+        except SyntaxError:
+            raise XacroException("invalid expression: %s" % value)
+
+
+def load_yaml(filename):
+    try:
+        import yaml
+        for unit in ConstructUnits:
+            yaml.SafeLoader.add_constructor(unit.value.tag, unit.constructor)
+    except Exception:
+        raise XacroException("yaml support not available; install python-yaml")
+
+    filename = abs_filename_spec(filename)
+    f = open(filename)
+    filestack.append(filename)
+    try:
+        return YamlListWrapper.wrap(yaml.safe_load(f))
+    finally:
+        f.close()
+        filestack.pop()
+        global all_includes
+        all_includes.append(filename)
+
+
+def tokenize(s, sep=',; ', skip_empty=True):
+    results = re.split('[{}]'.format(sep), s)
+    if skip_empty:
+        return [item for item in results if item]
+    else:
+        return results
+
+
+# create global symbols dictionary
+# taking simple security measures to forbid access to __builtins__
+# only the very few symbols explicitly listed are allowed
+# for discussion, see: http://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html
+def create_global_symbols():
+    result = dict()
+
+    def deprecate(f, msg):
+        def wrapper(*args, **kwargs):
+            warning(msg)
+            return f(*args, **kwargs)
+
+        return wrapper if msg else f
+
+    def expose(*args, **kwargs):
+        # Extract args from kwargs
+        source, ns, deprecate_msg = (kwargs.pop(key, None) for key in ['source', 'ns', 'deprecate_msg'])
+
+        addons = dict()
+        if source is not None:
+            addons.update([(key, source[key]) for key in args])  # Add list of symbol names from source
+        else:
+            addons.update(*args)  # Add from list of (key, value) pairs
+        addons.update(**kwargs)  # Add key=value arguments
+
+        if ns is not None:  # Wrap dict into a namespace
+            try:  # Retrieve namespace target dict
+                target = result[ns]
+            except KeyError:  # or create if not existing yet
+                target = NameSpace()
+                result.update([(ns, target)])
+            target.update(addons)  # Populate target dict
+
+            if deprecate_msg is not None:  # Also import directly, but with deprecation warning
+                result.update([(key, deprecate(f, deprecate_msg.format(name=key, ns=ns))) for key, f in addons.items()])
+        else:
+            result.update(addons)  # Import directly
+
+    deprecate_msg = 'Using {name}() directly is deprecated. Use {ns}.{name}() instead.'
+    # This is the list of symbols we have exposed for years now. Continue exposing them directly
+    expose('list', 'dict', 'map', 'len', 'str', 'float', 'int', 'True', 'False', 'min', 'max', 'round',
+           source=__builtins__)
+    # These few were only recently added. The should move into python namespace, but (with a deprecation msg) stay global for now
+    expose('sorted', 'range', source=__builtins__, ns='python', deprecate_msg=deprecate_msg)
+    # Expose all builtin symbols into the python namespace. Thus the stay accessible if the global symbol was overriden
+    expose('list', 'dict', 'map', 'len', 'str', 'float', 'int', 'True', 'False', 'min', 'max', 'round',
+           'abs', 'all', 'any', 'complex', 'divmod', 'enumerate', 'filter', 'frozenset', 'hash', 'isinstance', 'issubclass',
+           'ord', 'repr', 'reversed', 'slice', 'set', 'sum', 'tuple', 'type', 'zip', source=__builtins__, ns='python')
+
+    # Expose all math symbols and functions into namespace math (and directly for backwards compatibility -- w/o deprecation)
+    expose([(k, v) for k, v in math.__dict__.items() if not k.startswith('_')], ns='math', deprecate_msg='')
+
+    # Expose load_yaml, abs_filename, and dotify into namespace xacro (and directly with deprecation)
+    expose(load_yaml=load_yaml, abs_filename=abs_filename_spec, dotify=YamlDictWrapper,
+           ns='xacro', deprecate_msg=deprecate_msg)
+    expose(arg=lambda name: substitution_args_context['arg'][name], ns='xacro')
+
+    def message_adapter(f):
+        def wrapper(*args, **kwargs):
+            location = kwargs.pop('print_location', f.__name__ in ['warning', 'error'])
+            kwargs.pop('file', None)  # Don't forward a file argument
+            f(*args, **kwargs)
+            if location:
+                print_location()
+            return ''  # Return empty string instead of None
+        return wrapper
+
+    def fatal(*args):
+        raise XacroException(' '.join(map(str, args)))
+
+    # Expose xacro's message functions
+    expose([(f.__name__, message_adapter(f)) for f in [message, warning, error, print_location]], ns='xacro')
+    expose(fatal=fatal, tokenize=tokenize, ns='xacro')
+
+    return result
+
+
+def safe_eval(expr, globals, locals=None):
+    code = compile(expr.strip(), "<expression>", "eval")
+    invalid_names = [n for n in code.co_names if n.startswith("__")]
+    if invalid_names:
+        raise XacroException("Use of invalid name(s): ", ', '.join(invalid_names))
+    globals.update(__builtins__= {})  # disable default builtins
+    return eval(code, globals, locals)
+
+
+class XacroException(Exception):
+    """
+    XacroException allows to wrap another exception (exc) and to augment
+    its error message: prefixing with msg and suffixing with suffix.
+    str(e) finally prints: msg str(exc) suffix
+    """
+
+    def __init__(self, msg=None, suffix=None, exc=None, macro=None):
+        super(XacroException, self).__init__(msg)
+        self.suffix = suffix
+        self.exc = exc
+        self.macros = [] if macro is None else [macro]
+
+    def __str__(self):
+        items = [super(XacroException, self).__str__(), self.exc, self.suffix]
+        return ' '.join([s for s in [unicode(e) for e in items] if s not in ['', 'None']])
+
+
+verbosity = 1
+
+
+def check_attrs(tag, required, optional):
+    """
+    Helper routine to fetch required and optional attributes
+    and complain about any additional attributes.
+    :param tag (xml.dom.Element): DOM element node
+    :param required [str]: list of required attributes
+    :param optional [str]: list of optional attributes
+    """
+    result = reqd_attrs(tag, required)
+    result.extend(opt_attrs(tag, optional))
+    allowed = required + optional
+    extra = [a for a in tag.attributes.keys() if a not in allowed and not a.startswith("xmlns:")]
+    if extra:
+        warning("%s: unknown attribute(s): %s" % (tag.nodeName, ', '.join(extra)))
+        if verbosity > 0:
+            print_location()
+    return result
+
+
+class Macro(object):
+    def __init__(self):
+        self.body = None  # original xml.dom.Node
+        self.params = []  # parsed parameter names
+        self.defaultmap = {}  # default parameter values
+        self.history = []  # definition history
+
+
+def eval_extension(s):
+    if s == '$(cwd)':
+        return os.getcwd()
+    try:
+        from roslaunch.substitution_args import resolve_args, ArgException
+        from rospkg.common import ResourceNotFound
+        return resolve_args(s, context=substitution_args_context, resolve_anon=False)
+    except ImportError as e:
+        raise XacroException("substitution args not supported: ", exc=e)
+    except ArgException as e:
+        raise XacroException("Undefined substitution argument", exc=e)
+    except ResourceNotFound as e:
+        raise XacroException("resource not found:", exc=e)
+
+
+class Table(dict):
+    def __init__(self, parent=None):
+        dict.__init__(self)
+        if parent is None:
+            parent = dict()  # Use empty dict to simplify lookup
+        self.parent = parent
+        try:
+            self.root = parent.root  # short link to root dict / global_symbols
+            self.depth = self.parent.depth + 1  # for debugging only
+        except AttributeError:
+            self.root = parent
+            self.depth = 0
+        self.unevaluated = set()  # set of unevaluated variables
+        self.recursive = []  # list of currently resolved vars (to resolve recursive definitions)
+
+    @staticmethod
+    def _eval_literal(value):
+        if isinstance(value, _basestr):
+            # remove single quotes from escaped string
+            if len(value) >= 2 and value[0] == "'" and value[-1] == "'":
+                return value[1:-1]
+            # Try to evaluate as number literal or boolean.
+            # This is needed to handle numbers in property definitions as numbers, not strings.
+            # python3 ignores/drops underscores in number literals (due to PEP515).
+            # Here, we want to handle literals with underscores as plain strings.
+            if '_' in value:
+                return value
+            for f in [int, float, lambda x: get_boolean_value(x, None)]:  # order of types is important!
+                try:
+                    return f(value)
+                except Exception:
+                    pass
+        return value
+
+    def _resolve_(self, key):
+        # lazy evaluation
+        if key in self.unevaluated:
+            if key in self.recursive:
+                raise XacroException('circular variable definition: {}\n'
+                                     'Consider disabling lazy evaluation via lazy_eval="false"'
+                                     .format(" -> ".join(self.recursive + [key])))
+            self.recursive.append(key)
+            dict.__setitem__(self, key, self._eval_literal(eval_text(dict.__getitem__(self, key), self)))
+            self.unevaluated.remove(key)
+            self.recursive.remove(key)
+
+        # return evaluated result
+        value = dict.__getitem__(self, key)
+        if (verbosity > 2 and self.parent is self.root) or verbosity > 3:
+            print("{indent}use {key}: {value} ({loc})".format(
+                indent=self.depth * ' ', key=key, value=value, loc=filestack[-1]), file=sys.stderr)
+        return value
+
+    def __getitem__(self, key):
+        if dict.__contains__(self, key):
+            return self._resolve_(key)
+        else:
+            return self.parent[key]
+
+    def _setitem(self, key, value, unevaluated):
+        if key in self.root:
+            warning("redefining global symbol: %s" % key)
+            print_location()
+
+        value = self._eval_literal(value)
+        dict.__setitem__(self, key, value)
+        if unevaluated and isinstance(value, _basestr):
+            # literal evaluation failed: re-evaluate lazily at first access
+            self.unevaluated.add(key)
+        elif key in self.unevaluated:
+            # all other types cannot be evaluated
+            self.unevaluated.remove(key)
+        if (verbosity > 2 and self.parent is self.root) or verbosity > 3:
+            print("{indent}set {key}: {value} ({loc})".format(
+                indent=self.depth * ' ', key=key, value=value, loc=filestack[-1]), file=sys.stderr)
+
+    def __setitem__(self, key, value):
+        self._setitem(key, value, unevaluated=True)
+
+    def __delitem__(self, key):
+        # Remove all items up to root
+        p = self
+        while p is not self.root:
+            dict.pop(p, key, None)
+            p = p.parent
+        if key in self.root:
+            warning('Cannot remove global symbol: ' + key)
+
+    def __contains__(self, key):
+        return \
+            dict.__contains__(self, key) or (key in self.parent)
+
+    def __str__(self):
+        s = dict.__str__(self)
+        if self.parent is not None:
+            s += "\n  parent: "
+            s += str(self.parent)
+        return s
+
+    def top(self):
+        p = self
+        while p.parent is not p.root:
+            p = p.parent
+        return p
+
+
+class NameSpace(Table):
+    def __init__(self, parent=None):
+        super(NameSpace, self).__init__(parent)
+
+    # dot access (namespace.property) is forwarded to getitem()
+    def __getattr__(self, item):
+        try:
+            return self.__getitem__(item)
+        except KeyError:
+            raise NameError("name '{}' is not defined".format(item))
+
+
+class QuickLexer(object):
+    def __init__(self, *args, **kwargs):
+        if args:
+            # copy attributes + variables from other instance
+            other = args[0]
+            self.__dict__.update(other.__dict__)
+        else:
+            self.res = []
+            for k, v in kwargs.items():
+                self.__setattr__(k, len(self.res))
+                self.res.append(re.compile(v))
+        self.str = ""
+        self.top = None
+
+    def lex(self, str):
+        self.str = str
+        self.top = None
+        self.next()
+
+    def peek(self):
+        return self.top
+
+    def next(self):
+        result = self.top
+        self.top = None
+        if not self.str:  # empty string
+            return result
+        for i in range(len(self.res)):
+            m = self.res[i].match(self.str)
+            if m:
+                self.top = (i, m.group(0))
+                self.str = self.str[m.end():]
+                return result
+        raise XacroException('invalid expression: ' + self.str)
+
+
+all_includes = []
+include_no_matches_msg = """Include tag's filename spec \"{}\" matched no files."""
+
+
+def get_include_files(filename_spec, symbols):
+    try:
+        filename_spec = abs_filename_spec(eval_text(filename_spec, symbols))
+    except XacroException as e:
+        if e.exc and isinstance(e.exc, NameError) and symbols is None:
+            raise XacroException('variable filename is supported with in-order option only')
+        else:
+            raise
+
+    if re.search('[*[?]+', filename_spec):
+        # Globbing behaviour
+        filenames = sorted(glob.glob(filename_spec))
+        if len(filenames) == 0:
+            warning(include_no_matches_msg.format(filename_spec))
+    else:
+        # Default behaviour
+        filenames = [filename_spec]
+
+    for filename in filenames:
+        global all_includes
+        all_includes.append(filename)
+        yield filename
+
+
+def import_xml_namespaces(parent, attributes):
+    """import all namespace declarations into parent"""
+    for name, value in attributes.items():
+        if name.startswith('xmlns:'):
+            oldAttr = parent.getAttributeNode(name)
+            if oldAttr and oldAttr.value != value:
+                warning("inconsistent namespace redefinitions for {name}:"
+                        "\n old: {old}\n new: {new} ({new_file})".format(
+                            name=name, old=oldAttr.value, new=value,
+                            new_file=filestack[-1]))
+            else:
+                parent.setAttribute(name, value)
+
+
+def process_include(elt, macros, symbols, func):
+    included = []
+    filename_spec, namespace_spec, optional = check_attrs(elt, ['filename'], ['ns', 'optional'])
+    if namespace_spec:
+        try:
+            namespace_spec = eval_text(namespace_spec, symbols)
+            macros[namespace_spec] = ns_macros = NameSpace()
+            symbols[namespace_spec] = ns_symbols = NameSpace(parent=symbols)
+        except TypeError:
+            raise XacroException('namespaces are supported with in-order option only')
+    else:
+        ns_macros = macros
+        ns_symbols = symbols
+
+    optional = get_boolean_value(optional, None)
+
+    if first_child_element(elt):
+        warning("Child elements of a <xacro:include> tag are ignored")
+        if verbosity > 0:
+            print_location()
+
+    for filename in get_include_files(filename_spec, symbols):
+        try:
+            # extend filestack
+            filestack.append(filename)
+            include = parse(None, filename).documentElement
+
+            # recursive call to func
+            func(include, ns_macros, ns_symbols)
+            included.append(include)
+            import_xml_namespaces(elt.parentNode, include.attributes)
+
+            # restore filestack
+            filestack.pop()
+        except XacroException as e:
+            if e.exc and isinstance(e.exc, IOError) and optional is True:
+                continue
+            else:
+                raise
+
+    remove_previous_comments(elt)
+    # replace the include tag with the nodes of the included file(s)
+    replace_node(elt, by=included, content_only=True)
+
+
+def is_valid_name(name):
+    """
+    Checks whether name is a valid property or macro identifier.
+    With python-based evaluation, we need to avoid name clashes with python keywords.
+    """
+    # Resulting AST of simple identifier is <Module [<Expr <Name "foo">>]>
+    try:
+        root = ast.parse(name)
+
+        if isinstance(root, ast.Module) and \
+           len(root.body) == 1 and isinstance(root.body[0], ast.Expr) and \
+           isinstance(root.body[0].value, ast.Name) and root.body[0].value.id == name:
+            return True
+    except SyntaxError:
+        pass
+
+    return False
+
+
+default_value = r'''\$\{.*?\}|\$\(.*?\)|(?:'.*?'|\".*?\"|[^\s'\"]+)+|'''
+re_macro_arg = re.compile(r'^\s*([^\s:=]+?)\s*:?=\s*(\^\|?)?(' + default_value + r')(?:\s+|$)(.*)')
+#                          space(   param )(   :=  )(  ^|  )(        default      )( space )(rest)
+
+
+def parse_macro_arg(s):
+    """
+    parse the first param spec from a macro parameter string s
+    accepting the following syntax: <param>[:=|=][^|]<default>
+    :param s: param spec string
+    :return: param, (forward, default), rest-of-string
+             forward will be either param or None (depending on whether ^ was specified)
+             default will be the default string or None
+             If there is no default spec at all, the middle pair will be replaced by None
+    """
+    m = re_macro_arg.match(s)
+    if m:
+        # there is a default value specified for param
+        param, forward, default, rest = m.groups()
+        if not default:
+            default = None
+        return param, (param if forward else None, default), rest
+    else:
+        # there is no default specified at all
+        result = s.lstrip().split(None, 1)
+        return result[0], None, result[1] if len(result) > 1 else ''
+
+
+def grab_macro(elt, macros):
+    assert(elt.tagName == 'xacro:macro')
+    remove_previous_comments(elt)
+
+    name, params = check_attrs(elt, ['name'], ['params'])
+    if name == 'call':
+        raise XacroException("Invalid use of macro name 'call'")
+    if name.find('.') != -1:
+        raise XacroException("macro names must not contain '.' (reserved for namespaces): %s" % name)
+    if name.startswith('xacro:'):
+        warning("macro names must not contain prefix 'xacro:': %s" % name)
+        name = name[6:]  # drop 'xacro:' prefix
+
+    # fetch existing or create new macro definition
+    macro = macros.get(name, Macro())
+    # append current filestack to history
+    macro.history.append(deepcopy(filestack))
+    macro.body = elt
+
+    # parse params and their defaults
+    macro.params = []
+    macro.defaultmap = {}
+    while params:
+        param, value, params = parse_macro_arg(params)
+        macro.params.append(param)
+        if value is not None:
+            macro.defaultmap[param] = value  # parameter with default
+
+    macros[name] = macro
+    replace_node(elt, by=None)
+
+
+def grab_property(elt, table):
+    assert(elt.tagName == 'xacro:property')
+    remove_previous_comments(elt)
+
+    name, value, default, remove, scope, lazy_eval = \
+        check_attrs(elt, ['name'], ['value', 'default', 'remove', 'scope', 'lazy_eval'])
+    name = eval_text(name, table)  # Allow name to be evaluated from expression
+    if not is_valid_name(name):
+        raise XacroException('Property names must be valid python identifiers: ' + name)
+    if name.startswith('__'):
+        raise XacroException('Property names must not start with double underscore:' + name)
+    remove = get_boolean_value(eval_text(remove or 'false', table), remove)
+    if sum([value is not None, default is not None, remove]) > 1:
+        raise XacroException('Property attributes default, value, and remove are mutually exclusive: ' + name)
+
+    if remove and name in table:
+        del table[name]
+        replace_node(elt, by=None)
+        return
+
+    if default is not None:
+        if scope is not None:
+            warning("%s: default property value can only be defined on local scope" % name)
+        if name not in table:
+            value = default
+        else:
+            replace_node(elt, by=None)
+            return
+
+    if value is None:
+        name = '**' + name
+        value = elt  # debug
+
+    replace_node(elt, by=None)
+
+    # We use lazy evaluation by default
+    lazy_eval = get_boolean_value(eval_text(lazy_eval or 'true', table), lazy_eval)
+
+    if scope and scope == 'global':
+        target_table = table.top()
+        lazy_eval = False
+    elif scope and scope == 'parent':
+        if table.parent is not None:
+            target_table = table.parent
+            lazy_eval = False
+            if not isinstance(table, NameSpace):  # in macro scope
+                # ... skip all namespaces to reach caller's scope
+                while isinstance(target_table, NameSpace):
+                    target_table = target_table.parent
+        else:
+            warning("%s: no parent scope at global scope " % name)
+            return  # cannot store the value, no reason to evaluate it
+    else:
+        target_table = table
+
+    if not lazy_eval and isinstance(value, _basestr):
+        value = eval_text(value, table)  # greedily eval value
+
+    target_table._setitem(name, value, unevaluated=lazy_eval)
+
+
+LEXER = QuickLexer(DOLLAR_DOLLAR_BRACE=r"^\$\$+(\{|\()",  # multiple $ in a row, followed by { or (
+                   EXPR=r"^\$\{[^\}]*\}",        # stuff starting with ${
+                   EXTENSION=r"^\$\([^\)]*\)",   # stuff starting with $(
+                   TEXT=r"[^$]+|\$[^{($]+|\$$")  # any text w/o $  or  $ following any chars except {($  or  single $
+
+
+# evaluate text and return typed value
+def eval_text(text, symbols):
+    def handle_expr(s):
+        try:
+            return safe_eval(eval_text(s, symbols), symbols)
+        except Exception as e:
+            # re-raise as XacroException to add more context
+            raise XacroException(exc=e,
+                                 suffix=os.linesep + "when evaluating expression '%s'" % s)
+
+    def handle_extension(s):
+        return eval_extension("$(%s)" % eval_text(s, symbols))
+
+    results = []
+    lex = QuickLexer(LEXER)
+    lex.lex(text)
+    while lex.peek():
+        id = lex.peek()[0]
+        if id == lex.EXPR:
+            results.append(handle_expr(lex.next()[1][2:-1]))
+        elif id == lex.EXTENSION:
+            results.append(handle_extension(lex.next()[1][2:-1]))
+        elif id == lex.TEXT:
+            results.append(lex.next()[1])
+        elif id == lex.DOLLAR_DOLLAR_BRACE:
+            results.append(lex.next()[1][1:])
+    # return single element as is, i.e. typed
+    if len(results) == 1:
+        return results[0]
+    # otherwise join elements to a string
+    else:
+        return ''.join(map(unicode, results))
+
+
+def eval_default_arg(forward_variable, default, symbols, macro):
+    if forward_variable is None:
+        return eval_text(default, symbols)
+    try:
+        return symbols[forward_variable]
+    except KeyError:
+        if default is not None:
+            return eval_text(default, symbols)
+        else:
+            raise XacroException("Undefined property to forward: " + forward_variable, macro=macro)
+
+
+def handle_dynamic_macro_call(node, macros, symbols):
+    name, = reqd_attrs(node, ['macro'])
+    if not name:
+        raise XacroException("xacro:call is missing the 'macro' attribute")
+    name = unicode(eval_text(name, symbols))
+
+    # remove 'macro' attribute and rename tag with resolved macro name
+    node.removeAttribute('macro')
+    node.tagName = 'xacro:' + name
+    # forward to handle_macro_call
+    handle_macro_call(node, macros, symbols)
+    return True
+
+
+def resolve_macro(fullname, macros, symbols):
+    def _resolve(namespaces, name, macros, symbols):
+        # traverse namespaces to actual macros+symbols dicts
+        for ns in namespaces:
+            macros = macros[ns]
+            symbols = symbols[ns]
+        return macros, symbols, macros[name]
+
+    # try fullname and (namespaces, name) in this order
+    try:
+        return _resolve([], fullname, macros, symbols)
+    except KeyError:
+        # split name into namespaces and real name
+        namespaces = fullname.split('.')
+        name = namespaces.pop(-1)
+        if namespaces:
+            return _resolve(namespaces, name, macros, symbols)
+        else:
+            raise
+
+
+def handle_macro_call(node, macros, symbols):
+    if node.tagName == 'xacro:call':
+        return handle_dynamic_macro_call(node, macros, symbols)
+    elif not node.tagName.startswith('xacro:'):
+        return False  # no macro
+
+    name = node.tagName[6:]  # drop 'xacro:' prefix
+    try:
+        macros, symbols, m = resolve_macro(name, macros, symbols)
+        body = m.body.cloneNode(deep=True)
+
+    except KeyError:
+        raise XacroException("unknown macro name: %s" % node.tagName)
+
+    macrostack.append(m)
+
+    # Expand the macro
+    scoped_symbols = Table(symbols)  # new local name space for macro evaluation
+    scoped_macros = Table(macros)
+    params = m.params[:]  # deep copy macro's params list
+    for name, value in node.attributes.items():
+        if name not in params:
+            raise XacroException("Invalid parameter \"%s\"" % unicode(name), macro=m)
+        params.remove(name)
+        scoped_symbols._setitem(name, eval_text(value, symbols), unevaluated=False)
+        node.setAttribute(name, "")  # suppress second evaluation in eval_all()
+
+    # Evaluate block parameters in node
+    eval_all(node, macros, symbols)
+
+    # Fetch block parameters, in order
+    block = first_child_element(node)
+    for param in params[:]:
+        if param[0] == '*':
+            if not block:
+                raise XacroException("Not enough blocks", macro=m)
+            params.remove(param)
+            scoped_symbols[param] = block
+            block = next_sibling_element(block)
+
+    if block is not None:
+        raise XacroException("Unused block \"%s\"" % block.tagName, macro=m)
+
+    # Try to load defaults for any remaining non-block parameters
+    for param in params[:]:
+        # block parameters are not supported for defaults
+        if param[0] == '*':
+            continue
+
+        # get default
+        name, default = m.defaultmap.get(param, (None, None))
+        if name is not None or default is not None:
+            scoped_symbols._setitem(param, eval_default_arg(name, default, symbols, m), unevaluated=False)
+            params.remove(param)
+
+    if params:
+        raise XacroException("Undefined parameters [%s]" % ",".join(params), macro=m)
+
+    eval_all(body, scoped_macros, scoped_symbols)
+
+    # Remove any comments directly before the macro call
+    remove_previous_comments(node)
+    # Lift all namespace attributes from the expanded body node to node's parent
+    import_xml_namespaces(node.parentNode, body.attributes)
+    # Replaces the macro node with the expansion
+    replace_node(node, by=body, content_only=True)
+
+    macrostack.pop()
+    return True
+
+
+def get_boolean_value(value, condition):
+    """
+    Return a boolean value that corresponds to the given Xacro condition value.
+    Values "true", "1" and "1.0" are supposed to be True.
+    Values "false", "0" and "0.0" are supposed to be False.
+    All other values raise an exception.
+
+    :param value: The value to be evaluated. The value has to already be evaluated by Xacro.
+    :param condition: The original condition text in the XML.
+    :return: The corresponding boolean value, or a Python expression that, converted to boolean, corresponds to it.
+    :raises ValueError: If the condition value is incorrect.
+    """
+    try:
+        if isinstance(value, _basestr):
+            if value == 'true' or value == 'True':
+                return True
+            elif value == 'false' or value == 'False':
+                return False
+            else:
+                return bool(int(value))
+        else:
+            return bool(value)
+    except Exception:
+        raise XacroException("Xacro conditional \"%s\" evaluated to \"%s\", "
+                             "which is not a boolean expression." % (condition, value))
+
+
+_empty_text_node = xml.dom.minidom.getDOMImplementation().createDocument(None, "dummy", None).createTextNode('\n\n')
+
+
+def remove_previous_comments(node):
+    """remove consecutive comments in front of the xacro-specific node"""
+    next = node.nextSibling
+    previous = node.previousSibling
+    while previous:
+        if previous.nodeType == xml.dom.Node.TEXT_NODE and \
+                previous.data.isspace() and previous.data.count('\n') <= 1:
+            previous = previous.previousSibling  # skip a single empty text node (max 1 newline)
+
+        if previous and previous.nodeType == xml.dom.Node.COMMENT_NODE:
+            comment = previous
+            previous = previous.previousSibling
+            node.parentNode.removeChild(comment)
+        else:
+            # insert empty text node to stop removing of comments in future calls
+            # actually this moves the singleton instance to the new location
+            if next and _empty_text_node != next:
+                node.parentNode.insertBefore(_empty_text_node, next)
+            return
+
+
+def eval_all(node, macros, symbols):
+    """Recursively evaluate node, expanding macros, replacing properties, and evaluating expressions"""
+    # evaluate the attributes
+    for name, value in node.attributes.items():
+        if name.startswith('xacro:'):  # remove xacro:* attributes
+            node.removeAttribute(name)
+        else:
+            result = unicode(eval_text(value, symbols))
+            node.setAttribute(name, result)
+
+    # remove xacro namespace definition
+    try:
+        node.removeAttribute('xmlns:xacro')
+    except xml.dom.NotFoundErr:
+        pass
+
+    node = node.firstChild
+    eval_comments = False
+    while node:
+        next = node.nextSibling
+        if node.nodeType == xml.dom.Node.ELEMENT_NODE:
+            eval_comments = False  # any tag automatically disables comment evaluation
+            if node.tagName == 'xacro:insert_block':
+                name, = check_attrs(node, ['name'], [])
+
+                if ("**" + name) in symbols:
+                    # Multi-block
+                    block = symbols['**' + name]
+                    content_only = True
+                elif ("*" + name) in symbols:
+                    # Single block
+                    block = symbols['*' + name]
+                    content_only = False
+                else:
+                    raise XacroException("Undefined block \"%s\"" % name)
+
+                # cloning block allows to insert the same block multiple times
+                block = block.cloneNode(deep=True)
+                # recursively evaluate block
+                eval_all(block, macros, symbols)
+                replace_node(node, by=block, content_only=content_only)
+
+            elif node.tagName == 'xacro:include':
+                process_include(node, macros, symbols, eval_all)
+
+            elif node.tagName == 'xacro:property':
+                grab_property(node, symbols)
+
+            elif node.tagName == 'xacro:macro':
+                grab_macro(node, macros)
+
+            elif node.tagName == 'xacro:arg':
+                name, default = check_attrs(node, ['name', 'default'], [])
+                if name not in substitution_args_context['arg']:
+                    substitution_args_context['arg'][name] = unicode(eval_text(default, symbols))
+
+                remove_previous_comments(node)
+                replace_node(node, by=None)
+
+            elif node.tagName == 'xacro:element':
+                name = eval_text(*reqd_attrs(node, ['xacro:name']), symbols=symbols)
+                if not name:
+                    raise XacroException("xacro:element: empty name")
+
+                node.removeAttribute('xacro:name')
+                node.nodeName = node.tagName = name
+                continue  # re-process the node with new tagName
+
+            elif node.tagName == 'xacro:attribute':
+                name, value = [eval_text(a, symbols) for a in reqd_attrs(node, ['name', 'value'])]
+                if not name:
+                    raise XacroException("xacro:attribute: empty name")
+
+                node.parentNode.setAttribute(name, value)
+                replace_node(node, by=None)
+
+            elif node.tagName in ['xacro:if', 'xacro:unless']:
+                remove_previous_comments(node)
+                cond, = check_attrs(node, ['value'], [])
+                keep = get_boolean_value(eval_text(cond, symbols), cond)
+                if node.tagName in ['unless', 'xacro:unless']:
+                    keep = not keep
+
+                if keep:
+                    eval_all(node, macros, symbols)
+                    replace_node(node, by=node, content_only=True)
+                else:
+                    replace_node(node, by=None)
+
+            elif handle_macro_call(node, macros, symbols):
+                pass  # handle_macro_call does all the work of expanding the macro
+
+            else:
+                eval_all(node, macros, symbols)
+
+        elif node.nodeType == xml.dom.Node.TEXT_NODE:
+            node.data = unicode(eval_text(node.data, symbols))
+            if node.data.strip():
+                eval_comments = False # non-empty text disables comment evaluation
+
+        elif node.nodeType == xml.dom.Node.COMMENT_NODE:
+            if "xacro:eval-comments" in node.data:
+                eval_comments = "xacro:eval-comments:off" not in node.data
+                replace_node(node, by=None) # drop this comment
+            elif eval_comments:
+                node.data = unicode(eval_text(node.data, symbols))
+            else:
+                pass # leave comment as is
+
+        node = next
+
+
+def parse(inp, filename=None):
+    """
+    Parse input or filename into a DOM tree.
+    If inp is None, open filename and load from there.
+    Otherwise, parse inp, either as string or file object.
+    If inp is already a DOM tree, this function is a noop.
+    :return:xml.dom.minidom.Document
+    :raise: xml.parsers.expat.ExpatError
+    """
+    f = None
+    if inp is None:
+        try:
+            inp = f = open(filename)
+        except IOError as e:
+            # do not report currently processed file as "in file ..."
+            filestack.pop()
+            raise XacroException(e.strerror + ": " + e.filename, exc=e)
+
+    try:
+        if isinstance(inp, _basestr):
+            return xml.dom.minidom.parseString(inp)
+        elif hasattr(inp, 'read'):
+            return xml.dom.minidom.parse(inp)
+        return inp
+
+    finally:
+        if f:
+            f.close()
+
+
+def process_doc(doc, mappings=None, **kwargs):
+    global verbosity
+    verbosity = kwargs.get('verbosity', verbosity)
+
+    # set substitution args
+    substitution_args_context['arg'] = {} if mappings is None else mappings
+
+    # if not yet defined: initialize filestack
+    if not filestack:
+        init_stacks(None)
+
+    macros = Table()
+    symbols = Table(_global_symbols)
+
+    # apply xacro:targetNamespace as global xmlns (if defined)
+    targetNS = doc.documentElement.getAttribute('xacro:targetNamespace')
+    if targetNS:
+        doc.documentElement.removeAttribute('xacro:targetNamespace')
+        doc.documentElement.setAttribute('xmlns', targetNS)
+
+    eval_all(doc.documentElement, macros, symbols)
+
+    # reset substitution args
+    substitution_args_context['arg'] = {}
+
+
+def open_output(output_filename):
+    if output_filename is None:
+        return sys.stdout
+    else:
+        dir_name = os.path.dirname(output_filename)
+        if dir_name:
+            try:
+                os.makedirs(dir_name)
+            except os.error:
+                # errors occur when dir_name exists or creation failed
+                # ignore error here; opening of file will fail if directory is still missing
+                pass
+
+        try:
+            return open(output_filename, 'w')
+        except IOError as e:
+            raise XacroException("Failed to open output:", exc=e)
+
+
+def print_location():
+    msg = 'when instantiating macro:'
+    for m in reversed(macrostack or []):
+        name = m.body.getAttribute('name')
+        location = '({file})'.format(file = m.history[-1][-1] or '???')
+        print(msg, name, location, file=sys.stderr)
+        msg = 'instantiated from:'
+
+    msg = 'in file:' if macrostack else 'when processing file:'
+    for f in reversed(filestack or []):
+        if f is None:
+            f = 'string'
+        print(msg, f, file=sys.stderr)
+        msg = 'included from:'
+
+
+def process_file(input_file_name, **kwargs):
+    """main processing pipeline"""
+    # initialize file stack for error-reporting
+    init_stacks(input_file_name)
+    # parse the document into a xml.dom tree
+    doc = parse(None, input_file_name)
+    # perform macro replacement
+    process_doc(doc, **kwargs)
+
+    # add xacro auto-generated banner
+    banner = [xml.dom.minidom.Comment(c) for c in
+              [" %s " % ('=' * 83),
+               " |    This document was autogenerated by xacro from %-30s | " % input_file_name,
+               " |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED  %-30s | " % "",
+               " %s " % ('=' * 83)]]
+    first = doc.firstChild
+    for comment in banner:
+        doc.insertBefore(comment, first)
+
+    return doc
+
+
+_global_symbols = create_global_symbols()
+
+
+def main():
+    opts, input_file_name = process_args(sys.argv[1:])
+    try:
+        # open and process file
+        doc = process_file(input_file_name, **vars(opts))
+        # open the output file
+        out = open_output(opts.output)
+
+    # error handling
+    except xml.parsers.expat.ExpatError as e:
+        error("XML parsing error: %s" % unicode(e), alt_text=None)
+        if verbosity > 0:
+            print_location()
+            print(file=sys.stderr)  # add empty separator line before error
+            print("Check that:", file=sys.stderr)
+            print(" - Your XML is well-formed", file=sys.stderr)
+            print(" - You have the xacro xmlns declaration:",
+                  "xmlns:xacro=\"http://www.ros.org/wiki/xacro\"", file=sys.stderr)
+        sys.exit(2)  # indicate failure, but don't print stack trace on XML errors
+
+    except Exception as e:
+        msg = unicode(e)
+        if not msg:
+            msg = repr(e)
+        error(msg)
+        if verbosity > 0:
+            print_location()
+        if verbosity > 1:
+            print(file=sys.stderr)  # add empty separator line before error
+            raise  # create stack trace
+        else:
+            sys.exit(2)  # gracefully exit with error condition
+
+    # special output mode
+    if opts.just_deps:
+        out.write(" ".join(set(all_includes)))
+        print()
+        return
+
+    # write output
+    out.write(doc.toprettyxml(indent='  ', **encoding))
+    print()
+    # only close output file, but not stdout
+    if opts.output:
+        out.close()
--- /dev/null
+++ ros-noetic-xacro-1.14.18/src/xacro/cli.py
@@ -0,0 +1,112 @@
+# Copyright (c) 2015, Open Source Robotics Foundation, Inc.
+# Copyright (c) 2013, Willow Garage, Inc.
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of the Open Source Robotics Foundation, Inc.
+#       nor the names of its contributors may be used to endorse or promote
+#       products derived from this software without specific prior
+#       written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+# Authors: Stuart Glaser, William Woodall, Robert Haschke
+# Maintainer: Morgan Quigley <morgan@osrfoundation.org>
+
+import textwrap
+from optparse import OptionParser, IndentedHelpFormatter
+from .color import colorize, warning, message
+
+
+class ColoredOptionParser(OptionParser):
+    def error(self, message):
+        msg = colorize(message, 'red')
+        OptionParser.error(self, msg)
+
+
+_original_wrap = textwrap.wrap
+
+
+def wrap_with_newlines(text, width, **kwargs):
+    result = []
+    for paragraph in text.split('\n'):
+        result.extend(_original_wrap(paragraph, width, **kwargs))
+    return result
+
+
+class IndentedHelpFormatterWithNL(IndentedHelpFormatter):
+    def __init__(self, *args, **kwargs):
+        IndentedHelpFormatter.__init__(self, *args, **kwargs)
+
+    def format_option(self, text):
+        textwrap.wrap, old = wrap_with_newlines, textwrap.wrap
+        result = IndentedHelpFormatter.format_option(self, text)
+        textwrap.wrap = old
+        return result
+
+
+def process_args(argv, require_input=True):
+    parser = ColoredOptionParser(usage="usage: %prog [options] <input>",
+                                 formatter=IndentedHelpFormatterWithNL())
+    parser.add_option("-o", dest="output", metavar="FILE",
+                      help="write output to FILE instead of stdout")
+    parser.add_option("--deps", action="store_true", dest="just_deps",
+                      help="print file dependencies")
+    parser.add_option("--inorder", "-i", action="store_true", dest="in_order",
+                      help="processing in read order (default, can be omitted)")
+
+    # verbosity options
+    parser.add_option("-q", action="store_const", dest="verbosity", const=0,
+                      help="quiet operation, suppressing warnings")
+    parser.add_option("-v", action="count", dest="verbosity",
+                      help="increase verbosity")
+    parser.add_option("--verbosity", metavar='level', dest="verbosity", type='int',
+                      help=textwrap.dedent("""\
+                      set verbosity level
+                      0: quiet, suppressing warnings
+                      1: default, showing warnings and error locations
+                      2: show stack trace
+                      3: log property definitions and usage on top level
+                      4: log property definitions and usage on all levels"""))
+
+    # process substitution args
+    try:
+        from rosgraph.names import load_mappings, REMAP
+        mappings = load_mappings(argv)
+        filtered_args = [a for a in argv if REMAP not in a]  # filter-out REMAP args
+    except ImportError as e:
+        warning(e)
+        mappings = {}
+        filtered_args = argv
+
+    parser.set_defaults(just_deps=False, just_includes=False, verbosity=1)
+    (options, pos_args) = parser.parse_args(filtered_args)
+    if options.in_order:
+        message("xacro: in-order processing became default in ROS Melodic. You can drop the option.")
+    options.in_order = True
+
+    if len(pos_args) != 1:
+        if require_input:
+            parser.error("expected exactly one input file as argument")
+        else:
+            pos_args = [None]
+
+    options.mappings = mappings
+    return options, pos_args[0]
--- /dev/null
+++ ros-noetic-xacro-1.14.18/src/xacro/color.py
@@ -0,0 +1,71 @@
+# Copyright (c) 2015, Bielefeld University
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of Bielefeld University
+#       nor the names of its contributors may be used to endorse or promote
+#       products derived from this software without specific prior
+#       written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+from __future__ import print_function
+import sys
+
+# bold colors
+_ansi = {'red': 91, 'yellow': 93}
+
+
+def is_tty(stream):  # taken from catkin_tools/common.py
+    """Returns True if the given stream is a tty, else False"""
+    return hasattr(stream, 'isatty') and stream.isatty()
+
+
+def colorize(msg, color, file=sys.stderr, alt_text=None):
+    try:
+        color = _ansi[color]
+    except KeyError:
+        pass
+
+    if color and is_tty(file):
+        return '\033[%dm%s\033[0m' % (color, msg)
+    elif alt_text:
+        return '%s%s' % (alt_text, msg)
+    else:
+        return msg
+
+
+def message(msg, *args, **kwargs):
+    file = kwargs.get('file', sys.stderr)
+    alt_text = kwargs.get('alt_text', None)
+    color = kwargs.get('color', None)
+    print(colorize(msg, color, file, alt_text), *args, file=file)
+
+
+def warning(*args, **kwargs):
+    defaults = dict(file=sys.stderr, alt_text='warning: ', color='yellow')
+    defaults.update(kwargs)
+    message(*args, **defaults)
+
+
+def error(*args, **kwargs):
+    defaults = dict(file=sys.stderr, alt_text='error: ', color='red')
+    defaults.update(kwargs)
+    message(*args, **defaults)
--- /dev/null
+++ ros-noetic-xacro-1.14.18/src/xacro/xmlutils.py
@@ -0,0 +1,145 @@
+# Copyright (c) 2015, Open Source Robotics Foundation, Inc.
+# Copyright (c) 2013, Willow Garage, Inc.
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of the Open Source Robotics Foundation, Inc.
+#       nor the names of its contributors may be used to endorse or promote
+#       products derived from this software without specific prior
+#       written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+# Authors: Stuart Glaser, William Woodall, Robert Haschke
+# Maintainer: Morgan Quigley <morgan@osrfoundation.org>
+
+import xml.dom.minidom
+
+
+def first_child_element(elt):
+    c = elt.firstChild
+    while c and c.nodeType != xml.dom.Node.ELEMENT_NODE:
+        c = c.nextSibling
+    return c
+
+
+def next_sibling_element(node):
+    c = node.nextSibling
+    while c and c.nodeType != xml.dom.Node.ELEMENT_NODE:
+        c = c.nextSibling
+    return c
+
+
+def replace_node(node, by, content_only=False):
+    parent = node.parentNode
+
+    if by is not None:
+        if not isinstance(by, list):
+            by = [by]
+
+        # insert new content before node
+        for doc in by:
+            if content_only:
+                c = doc.firstChild
+                while c:
+                    n = c.nextSibling
+                    parent.insertBefore(c, node)
+                    c = n
+            else:
+                parent.insertBefore(doc, node)
+
+    # remove node
+    parent.removeChild(node)
+
+
+def attribute(tag, a):
+    """
+    Helper function to fetch a single attribute value from tag
+    :param tag (xml.dom.Element): DOM element node
+    :param a (str): attribute name
+    :return: attribute value if present, otherwise None
+    """
+    if tag.hasAttribute(a):
+        # getAttribute returns empty string for non-existent attributes,
+        # which makes it impossible to distinguish with empty values
+        return tag.getAttribute(a)
+    else:
+        return None
+
+
+def opt_attrs(tag, attrs):
+    """
+    Helper routine for fetching optional tag attributes
+    :param tag (xml.dom.Element): DOM element node
+    :param attrs [str]: list of attributes to fetch
+    """
+    return [attribute(tag, a) for a in attrs]
+
+
+def reqd_attrs(tag, attrs):
+    """
+    Helper routine for fetching required tag attributes
+    :param tag (xml.dom.Element): DOM element node
+    :param attrs [str]: list of attributes to fetch
+    :raise RuntimeError: if required attribute is missing
+    """
+    result = opt_attrs(tag, attrs)
+    for (res, name) in zip(result, attrs):
+        if res is None:
+            raise RuntimeError("%s: missing attribute '%s'" % (tag.nodeName, name))
+    return result
+
+
+# Better pretty printing of xml
+# Taken from http://ronrothman.com/public/leftbraned/xml-dom-minidom-toprettyxml-and-silly-whitespace/
+def fixed_writexml(self, writer, indent="", addindent="", newl=""):
+    # indent = current indentation
+    # addindent = indentation to add to higher levels
+    # newl = newline string
+    writer.write(indent + "<" + self.tagName)
+
+    attrs = self._get_attributes()
+    a_names = sorted(attrs.keys())
+
+    for a_name in a_names:
+        writer.write(" %s=\"" % a_name)
+        xml.dom.minidom._write_data(writer, attrs[a_name].value)
+        writer.write("\"")
+    if self.childNodes:
+        if len(self.childNodes) == 1 \
+           and self.childNodes[0].nodeType == xml.dom.minidom.Node.TEXT_NODE:
+            writer.write(">")
+            self.childNodes[0].writexml(writer, "", "", "")
+            writer.write("</%s>%s" % (self.tagName, newl))
+            return
+        writer.write(">%s" % newl)
+        for node in self.childNodes:
+            # skip whitespace-only text nodes
+            if node.nodeType == xml.dom.minidom.Node.TEXT_NODE and \
+                    (not node.data or node.data.isspace()):
+                continue
+            node.writexml(writer, indent + addindent, addindent, newl)
+        writer.write("%s</%s>%s" % (indent, self.tagName, newl))
+    else:
+        writer.write("/>%s" % newl)
+
+
+# replace minidom's function with ours
+xml.dom.minidom.Element.writexml = fixed_writexml
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/A.xacro
@@ -0,0 +1,4 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:include filename="B.xacro" ns="B"/>
+	<A prop="${prop}"/>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/B.xacro
@@ -0,0 +1,7 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:property name="prop" value="b" />
+	<xacro:property name="prop" scope="parent" value="B"/>
+	<xacro:macro name="set" params="">
+		<xacro:property name="prop" scope="parent" value="macro"/>
+	</xacro:macro>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/CMakeLists.txt
@@ -0,0 +1,4 @@
+add_test(NAME xacro_cmake
+  # run test-cmake.sh for subdir test-xacro-cmake
+  COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/test-cmake.sh ${CMAKE_CURRENT_SOURCE_DIR}/test-xacro-cmake
+  )
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/broken.xacro
@@ -0,0 +1 @@
+ahhhhh this is a not an xml file and will create all sorts of errors ahhhh
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/constructors.yaml
@@ -0,0 +1,9 @@
+no_tag: 42
+angles:
+  - !radians pi
+  - !degrees 2*90
+lengths:
+  - !meters 5.0*5.0
+  - !millimeters 25.0*1000.0
+  - !foot 25.0/0.3048
+  - !inches 25.0/0.0254
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/constructors_bad1.yaml
@@ -0,0 +1 @@
+a: !radians os.system('clear')
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/constructors_bad2.yaml
@@ -0,0 +1 @@
+a: !radians __import__('os').system('clear')
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/emoji.xacro
@@ -0,0 +1,5 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+  <xacro:property name="burger" value="🍔" />
+  ${burger}
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/include1.xacro
@@ -0,0 +1,4 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:property name="var" value="1"/>
+	<xacro:macro name="foo"><inc1/></xacro:macro>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/include1.xml
@@ -0,0 +1 @@
+<a><inc1/></a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/include2.xacro
@@ -0,0 +1,7 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:property name="var" value="2"/>
+	<xacro:property name="inner" value="int"/>
+	<xacro:property name="arg" value="default"/>
+	<xacro:macro name="foo"><inc2/></xacro:macro>
+	<xacro:macro name="bar" params="arg"><a arg="${arg}" var="${var}" ext="${ext}"/></xacro:macro>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/include2.xml
@@ -0,0 +1 @@
+<a><inc2/></a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/include3.xacro
@@ -0,0 +1,8 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:include filename="./inner.xacro" />
+	<xacro:property name="var" value="3"/>
+	<xacro:macro name="foo">
+		<xacro:element xacro:name="inc${var}" included="${included}"/>
+		<xacro:included/>
+	</xacro:macro>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/inner.xacro
@@ -0,0 +1,5 @@
+<?xml version="1.0"?>
+<defs xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:property name="included" value="inner" />
+	<xacro:macro name="included"><inner/></xacro:macro>
+</defs>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/list.yaml
@@ -0,0 +1,6 @@
+---
+- - A1
+  - A2
+- - B1
+- a: { A: 1, B: [2, 3] }
+  b: [ 4, 5, 6 ]
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/list2.yaml
@@ -0,0 +1,6 @@
+- name: foo
+  val:
+    x: 1
+- name: bar
+  val:
+    x: 2
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/location.xacro
@@ -0,0 +1 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">${xacro.print_location()}</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/namespace.xml
@@ -0,0 +1 @@
+<a xmlns:xacro="http://www.ros.org/xacro" xmlns:b="http://www.ros.org/b" />
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/raise.xacro
@@ -0,0 +1,4 @@
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+	<xacro:macro name="inner">${undefined}</xacro:macro>
+	<xacro:macro name="outer"><xacro:inner/></xacro:macro>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/README
@@ -0,0 +1,4 @@
+these static imports were grabbed from public repositories on 18 december 2014,
+to try to have larger test cases. The idea is to compare the "golden" macro
+expansions saved here against the proposed changes to xacro, to make sure that
+at least we don't break the behavior of xacro as new features are added.
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/base_v0/base.gazebo.xacro
@@ -0,0 +1,59 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_wheel_gazebo_v0" params="suffix parent">
+    <gazebo reference="${parent}_${suffix}_wheel_link">
+      <mu1 value="100.0" />
+      <mu2 value="100.0" />
+      <kp  value="1000000.0" />
+      <kd  value="1.0" />
+      <maxVel  value="100.0" />
+      <minDepth  value="0.0" />
+    </gazebo>
+  </xacro:macro>
+
+  <xacro:macro name="pr2_caster_gazebo_v0" params="suffix">
+    <gazebo reference="${suffix}_caster_rotation_link">
+      <material value="PR2/caster_texture" />
+    </gazebo>
+  </xacro:macro>
+
+  <xacro:macro name="pr2_base_gazebo_v0" params="name">
+    <gazebo reference="${name}_link">
+      <selfCollide>false</selfCollide>
+      <sensor type="contact" name="${name}_contact_sensor">
+        <always_on>true</always_on>
+        <update_rate>100.0</update_rate>
+        <contact>
+          <collision>${name}_link_geom</collision>
+        </contact>
+        <plugin name="${name}_gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
+          <alwaysOn>true</alwaysOn>
+          <updateRate>100.0</updateRate>
+          <bumperTopicName>${name}_bumper</bumperTopicName>
+          <frameName>world</frameName>
+        </plugin>
+      </sensor>
+    </gazebo>
+    <gazebo reference="${name}_bellow_link">
+      <material value="PR2/Black" />
+    </gazebo>
+    <gazebo>
+      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bodyName>${name}_link</bodyName>
+        <topicName>${name}_pose_ground_truth</topicName>
+        <gaussianNoise>0.01</gaussianNoise>
+        <frameName>map</frameName>
+        <xyzOffsets>0 0 0</xyzOffsets>
+        <rpyOffsets>0 0 0</rpyOffsets>
+      </plugin>
+    </gazebo>
+  </xacro:macro>
+
+
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/base_v0/base.transmission.xacro
@@ -0,0 +1,24 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!--  Caster wheel transmission   -->
+  <xacro:macro name="pr2_wheel_transmission_v0" params="suffix parent reflect">
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${parent}_${suffix}_wheel_trans">
+      <actuator name="${parent}_${suffix}_wheel_motor" />
+      <joint name="${parent}_${suffix}_wheel_joint" />
+      <mechanicalReduction>${reflect * 624/35 * 80/18}</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+
+  <!-- Hub transmission only -->
+  <xacro:macro name="pr2_caster_transmission_v0" params="suffix">
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${suffix}_rotation_trans">
+      <actuator name="${suffix}_rotation_motor" />
+      <joint name="${suffix}_rotation_joint" />
+      <mechanicalReduction>${-1 * 624/35 * 80/18}</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/base_v0/base.urdf.xacro
@@ -0,0 +1,264 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/hokuyo_lx30_laser.urdf.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/base_v0/base.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/base_v0/base.transmission.xacro" />
+
+  <!-- DATA SOURCES -->
+  <!-- all link offsets, CG, limits are obtained from Function Engineering spreadsheet 090224_link_data.xls unless stated otherwise -->
+  <!-- all link geometry sizes are obtained from Function provided CAD model unless stated otherwise -->
+  <!-- all simplified collision geometry are hand approximated from CAD model, sometimes from respective bounding boxes -->
+
+  <xacro:property name="M_PI" value="3.1415926535897931" />
+
+  <xacro:property name="caster_offset_x" value="0.2246" />
+  <xacro:property name="caster_offset_y" value="0.2246" />
+  <xacro:property name="caster_offset_z" value="0.0282" />
+
+  <xacro:property name="caster_wheel_offset_y" value="0.049" />
+  <xacro:property name="wheel_length" value="0.034" />
+  <xacro:property name="wheel_radius" value="0.074792" />   <!-- This is the 'effective' wheel radius. Wheel radius for uncompressed wheel is 0.079.  mp 20080801 -->
+
+  <xacro:property name="base_cg_x" value="-0.061" />
+  <xacro:property name="base_cg_y" value="0.0" />
+  <xacro:property name="base_cg_z" value="${0.5*0.293}" />
+  <xacro:property name="base_mass" value="116.0" />
+
+  <!-- simplified box collision geometry for base -->
+  <xacro:property name="base_size_x" value="0.65" />
+  <xacro:property name="base_size_y" value="0.65" />
+  <xacro:property name="base_size_z" value="0.23" />
+  <xacro:property name="base_collision_size_z" value="0.04" />
+
+  <!-- simplified box collision geometry for hokuyo laser -->
+  <xacro:property name="base_laser_x" value="0.275" />
+  <xacro:property name="base_laser_y" value="0.0" />
+  <xacro:property name="base_laser_z" value="0.252" />
+  <xacro:property name="base_laser_size_x" value="0.06" />
+  <xacro:property name="base_laser_size_y" value="0.06" />
+  <xacro:property name="base_laser_size_z" value="0.03" />
+  <xacro:property name="base_laser_collision_offset_z" value="0.023" />
+
+  <!--                                                      -->
+  <!--           wheel                                      -->
+  <!--                                                      -->
+  <xacro:macro name="pr2_wheel_v0" params="suffix parent reflect">
+
+    <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
+      <axis xyz="0 1 0" />
+      <limit effort="7" velocity="15"/> <!-- alpha tested effort and velocity limits -->
+      <safety_controller  k_velocity="10" />
+      <dynamics damping="1.0" friction="0.0" />
+      <origin xyz="0 ${reflect*caster_wheel_offset_y} 0" rpy="0 0 0" />
+      <parent link="${parent}_rotation_link"/>
+      <child link="${parent}_${suffix}_wheel_link"/>
+    </joint>
+    <link name="${parent}_${suffix}_wheel_link">
+      <inertial>
+        <mass value="0.44036" />
+        <origin xyz="0 0 0" />
+        <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
+                  iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae" />
+        </geometry>
+
+        <material name="Wheel_${suffix}" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" /> <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+        <geometry>
+          <cylinder radius="${wheel_radius}" length="${wheel_length}" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_wheel_gazebo_v0 parent="${parent}" suffix="${suffix}" />
+    <xacro:pr2_wheel_transmission_v0 parent="${parent}" suffix="${suffix}" reflect="${reflect}" />
+
+  </xacro:macro>
+
+  <!-- Macro for PR2 Caster hub only -->
+  <xacro:macro name="pr2_caster_hub_v0" params="suffix parent *origin ref_position" >
+    <joint name="${suffix}_rotation_joint" type="continuous">
+      <axis xyz="0 0 1" />
+      <limit effort="6.5" velocity="10"/> <!-- alpha tested velocity and effort limits -->
+      <safety_controller  k_velocity="10" />
+      <calibration rising="${ref_position}" />
+      <dynamics damping="1.0" friction="0.0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${suffix}_rotation_link" />
+    </joint>
+    <link name="${suffix}_rotation_link">
+
+      <inertial>
+        <mass value="3.473082"/>
+        <origin xyz="0 0 0.07" />
+        <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
+                  iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/base_v0/caster.stl" />
+        </geometry>
+
+        <material name="Caster" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/base_v0/caster_L.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_caster_transmission_v0 suffix="${suffix}" />
+  </xacro:macro>
+
+  <xacro:macro name="pr2_caster_v0" params="suffix parent *origin ref_position">
+
+    <xacro:pr2_caster_hub_v0 parent="${parent}" suffix="${suffix}_caster"
+                             ref_position="${ref_position}" >
+      <xacro:insert_block name="origin" />
+    </xacro:pr2_caster_hub_v0>
+
+    <!-- wheel macros -->
+    <xacro:pr2_wheel_v0 parent="${suffix}_caster" suffix="l" reflect="1" />
+    <xacro:pr2_wheel_v0 parent="${suffix}_caster" suffix="r" reflect="-1" />
+
+    <!-- extensions -->
+    <xacro:pr2_caster_gazebo_v0 suffix="${suffix}" />
+  </xacro:macro>
+
+
+  <!-- The xacro macro xacro:pr2_base contains: base, casters and wheels -->
+  <xacro:macro name="pr2_base_v0" params="name">
+    <link name="${name}_link">
+
+      <inertial>
+        <mass value="${base_mass}" />
+        <origin xyz="${base_cg_x} ${base_cg_y} ${base_cg_z}" />
+        <inertia ixx="5.652232699207" ixy="-0.009719934438" ixz="1.293988226423"
+                 iyy="5.669473158652" iyz="-0.007379583694" izz="3.683196351726" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/base_v0/base.dae" />
+        </geometry>
+
+        <material name="White" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/base_v0/base_L.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
+         navigation stack dedpends on this frame -->
+    <link name="${name}_footprint">
+      <inertial>
+        <mass value="1.0" />
+        <origin xyz="0 0 0" />
+        <inertia ixx="0.01" ixy="0.0" ixz="0.0"
+                 iyy="0.01" iyz="0.0" izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.01 0.01 0.01" />
+        </geometry>
+
+        <material name="White" />
+      </visual>
+      <collision>
+        <!-- represent base collision with a simple rectangular model, positioned by base_size_z s.t. top
+             surface of the collision box matches the top surface of the PR2 base -->
+        <origin xyz="0 0 ${0.051+base_collision_size_z/2}" rpy="0 0 0" />
+        <geometry>
+          <box size="0.001 0.001 0.001" />
+        </geometry>
+      </collision>
+    </link>
+
+    <joint name="${name}_footprint_joint" type="fixed">
+      <origin xyz="0 0 0.051" rpy="0 0 0" />
+      <child link="${name}_link" />
+      <parent link="${name}_footprint"/>
+    </joint>
+
+    <!-- visualize bellow -->
+    <link name="${name}_bellow_link">
+      <inertial>
+        <mass value="1.0" />
+        <origin xyz="0 0 0" />
+        <inertia ixx="0.01" ixy="0.0" ixz="0.0"
+                 iyy="0.01" iyz="0.0" izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.37 0.3" />
+        </geometry>
+        <material name="Black" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.37 0.3" />
+        </geometry>
+      </collision>
+    </link>
+    <joint name="${name}_bellow_joint" type="fixed">
+      <origin xyz="-0.29 0 0.8" rpy="0 0 0" />
+      <parent link="${name}_link" />
+      <child link="${name}_bellow_link"/>
+    </joint>
+
+    <!-- base laser -->
+    <xacro:hokuyo_lx30_laser_v0 name="${name}_laser" parent="${name}" ros_topic="base_scan" update_rate="20" min_angle="-2.2689" max_angle="2.2689" >
+      <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
+    </xacro:hokuyo_lx30_laser_v0>
+
+    <!-- all four caster macros -->
+    <xacro:pr2_caster_v0 suffix="fl" parent="${name}_link" ref_position="${cal_caster_fl - M_PI/4}" >
+      <origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
+    </xacro:pr2_caster_v0>
+    <xacro:pr2_caster_v0 suffix="fr" parent="${name}_link" ref_position="${cal_caster_fr - M_PI/4}" >
+      <origin xyz="${caster_offset_x} ${-caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
+    </xacro:pr2_caster_v0>
+    <xacro:pr2_caster_v0 suffix="bl" parent="${name}_link" ref_position="${cal_caster_bl - M_PI / 4 + M_PI}" >
+      <origin xyz="${-caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
+    </xacro:pr2_caster_v0>
+    <xacro:pr2_caster_v0 suffix="br" parent="${name}_link" ref_position="${cal_caster_br - M_PI / 4 + M_PI}"  >
+      <origin xyz="${-caster_offset_x} ${-caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
+    </xacro:pr2_caster_v0>
+
+    <!-- gazebo extensions -->
+    <xacro:pr2_base_gazebo_v0 name="${name}" />
+
+  </xacro:macro>
+
+
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/common.xacro
@@ -0,0 +1,71 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:property name="M_PI" value="3.1415926535897931" />
+  <xacro:property name="VELOCITY_LIMIT_SCALE" value="0.6" />
+
+  <!-- Gear Ratio Corrections: Divide transmission reductions by these factors (Nominally 1)-->
+  <xacro:property name="cal_r_shoulder_pan_gearing"   value="1.0" />
+  <xacro:property name="cal_r_shoulder_lift_gearing"  value="1.0" />
+  <xacro:property name="cal_r_upper_arm_roll_gearing" value="1.0" />
+
+  <!-- ********** Right Arm ********** -->
+  <!-- Flag offsets: Add to the optical flag locations (Nominally 0) -->
+  <xacro:property name="cal_r_shoulder_pan_flag"   value="0.0" />
+  <xacro:property name="cal_r_shoulder_lift_flag"  value="0.0" />
+  <xacro:property name="cal_r_upper_arm_roll_flag" value="0.0" />
+  <xacro:property name="cal_r_elbow_flex_flag"     value="0.0" />
+  <xacro:property name="cal_r_forearm_roll_flag"   value="0.0" />
+  <xacro:property name="cal_r_wrist_flex_flag"     value="0.0" />
+  <xacro:property name="cal_r_wrist_roll_flag"     value="0.0" />
+
+  <!-- ********** Head ********** -->
+  <!-- Head Location: Add to the transform from torso to head_pan_link (Nominally 0) -->
+  <xacro:property name="cal_head_x" value="0.0" />
+  <xacro:property name="cal_head_y" value="0.0" />
+  <xacro:property name="cal_head_z" value="0.0" />
+  <xacro:property name="cal_head_roll" value="0.0" />
+  <xacro:property name="cal_head_pitch" value="0.0" />
+  <xacro:property name="cal_head_yaw" value="0.0" />
+
+  <!-- Flag Offsets -->
+  <xacro:property name="cal_head_pan_flag"  value="0.0" />
+  <xacro:property name="cal_head_tilt_flag" value="0.0" />
+
+  <xacro:property name="cal_head_pan_flag" value="0.0"/>
+  <xacro:property name="cal_head_tilt_flag" value="0.0"/>
+
+  <!-- Casters -->
+  <xacro:property name="cal_caster_fl" value="0.0" />
+  <xacro:property name="cal_caster_fr" value="0.0" />
+  <xacro:property name="cal_caster_bl" value="0.0" />
+  <xacro:property name="cal_caster_br" value="0.0" />
+
+  <!-- Stereo Camera Location (Nominally 0) -->
+  <xacro:property name="cal_stereo_x" value="0.0" />
+  <xacro:property name="cal_stereo_y" value="0.0" />
+  <xacro:property name="cal_stereo_z" value="0.0" />
+  <xacro:property name="cal_stereo_roll" value="0.0" />
+  <xacro:property name="cal_stereo_pitch" value="0.0" />
+  <xacro:property name="cal_stereo_yaw" value="0.0" />
+
+  <!-- Kinect Camera Location (Nominally 0) -->
+  <xacro:property name="cal_kinect_x" value="0.0" />
+  <xacro:property name="cal_kinect_y" value="0.0" />
+  <xacro:property name="cal_kinect_z" value="0.0" />
+  <xacro:property name="cal_kinect_roll" value="0.0" />
+  <xacro:property name="cal_kinect_pitch" value="0.0" />
+  <xacro:property name="cal_kinect_yaw" value="0.0" />
+
+  <!-- HighDef Camera Location (Nominally 0) -->
+  <xacro:property name="cal_high_def_x" value="0.0" />
+  <xacro:property name="cal_high_def_y" value="0.0" />
+  <xacro:property name="cal_high_def_z" value="0.0" />
+  <xacro:property name="cal_high_def_roll" value="0.0" />
+  <xacro:property name="cal_high_def_pitch" value="0.0" />
+  <xacro:property name="cal_high_def_yaw" value="0.0" />
+
+  <!-- Throwing in left arm constants to appease the xacro parser -->
+  <xacro:property name="cal_l_shoulder_pan_flag" value="0.000000" />
+  <xacro:property name="cal_l_wrist_roll_flag" value="0.0" />
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/forearm_v0/forearm.gazebo.xacro
@@ -0,0 +1,35 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_forearm_gazebo_v0" params="side">
+
+    <gazebo reference="${side}_forearm_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+
+    <!-- Wrist flex -->
+
+    <gazebo reference="${side}_wrist_flex_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_wrist_flex_joint">
+      <stopKd value="1.0" />
+      <stopKp value="1000000.0" />
+    </gazebo>
+
+    <!-- Wrist roll -->
+
+    <gazebo reference="${side}_wrist_roll_link">
+      <turnGravityOff>true</turnGravityOff>
+      <material value="PR2/RollLinks" />
+    </gazebo>
+    <gazebo reference="${side}_wrist_roll_joint">
+      <fudgeFactor value="0.5" />
+    </gazebo>
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/forearm_v0/forearm.transmission.xacro
@@ -0,0 +1,19 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_forearm_transmission_v0" params="side">
+
+    <!-- Wrist flex , Wrist roll -->
+
+    <transmission type="pr2_mechanism_model/WristTransmission" name="${side}_wrist_trans">
+      <rightActuator name="${side}_wrist_r_motor" mechanicalReduction="${624/35*54/16}"/>
+      <leftActuator name="${side}_wrist_l_motor"  mechanicalReduction="${624/35*54/16}"/>
+      <flexJoint name="${side}_wrist_flex_joint"  mechanicalReduction="-1.0" />
+      <rollJoint name="${side}_wrist_roll_joint"  mechanicalReduction="1.0" />
+    </transmission>
+
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/forearm_v0/forearm.urdf.xacro
@@ -0,0 +1,130 @@
+<?xml version="1.0"?>
+
+<!-- XML namespaces -->
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- Things that are needed only for Gazebo (not the physical robot).  These include
+       sensor and controller plugin specifications -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/forearm_v0/forearm.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/forearm_v0/forearm.transmission.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/common.xacro" />
+
+  <!-- ============================   Forearm   ============================ -->
+
+  <xacro:macro name="pr2_forearm_v0" params="side parent reflect *origin">
+
+    <joint name="${side}_forearm_joint" type="fixed">
+      <xacro:insert_block name="origin" /> <!-- transform from parent link to this joint frame -->
+      <parent link="${parent}"/>
+      <child link="${side}_forearm_link"/>
+    </joint>
+    <link name="${side}_forearm_link">
+
+      <inertial>
+        <mass value="2.57968" />
+        <origin xyz="0.18791 -0.00017 -0.00912" />
+        <inertia ixx="0.00364857222" ixy="0.00005215877" ixz="0.00071534842"
+                 iyy="0.01507736897" iyz="-0.00001310770"
+                 izz="0.01659310749" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.dae" />
+       </geometry>
+
+        <material name="Grey" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Wrist flex -->
+    <joint name="${side}_wrist_flex_joint" type="revolute">
+      <axis xyz="0 1 0" />
+      <limit upper="0.0" lower="-2.18" effort="10" velocity="${VELOCITY_LIMIT_SCALE*5.13}" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_position="20" k_velocity="4" soft_upper_limit="${0.0 - 0.10}" soft_lower_limit="${-2.18 + 0.18}" />
+      <dynamics damping="0.1" />
+      <calibration falling="${-0.5410521 + cal_r_wrist_flex_flag}" />
+      <origin xyz="0.321 0 0" rpy="0 0 0" />
+      <parent link="${side}_forearm_link"/>
+      <child link="${side}_wrist_flex_link"/>
+    </joint>
+    <link name="${side}_wrist_flex_link">
+
+      <inertial>
+        <mass value="0.61402" />
+        <origin xyz="-0.00157 0.0 -0.00075" />
+        <inertia ixx="0.00065165722" ixy="0.00000028864" ixz="0.00000303477"
+                 iyy="0.00019824443" iyz="-0.00000022645"
+                 izz="0.00064450498" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.dae" />
+        </geometry>
+
+        <material name="Grey" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Wrist roll -->
+    <joint name="${side}_wrist_roll_joint" type="continuous">
+      <axis xyz="1 0 0" />
+      <limit effort="10" velocity="${VELOCITY_LIMIT_SCALE*6}" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_velocity="2" />
+      <dynamics damping="0.1" />
+      <calibration rising="${-M_PI / 2 + cal_r_wrist_roll_flag}" />
+      <origin xyz="0 0 0" rpy="0 0 0" />
+      <parent link="${side}_wrist_flex_link"/>
+      <child link="${side}_wrist_roll_link"/>
+    </joint>
+    <link name="${side}_wrist_roll_link">
+      <inertial>
+        <!-- dummy masses, to be removed.  wrist roll masses are on "gripper_palm" -->
+        <mass value="0.1" />
+        <origin xyz="0 0 0" />
+        <inertia ixx="0.01" ixy="0" ixz="0"
+                 iyy="0.01" iyz="0"
+                 izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll.stl" />
+        </geometry>
+
+        <material name="RollLinks" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll_L.stl" />
+        </geometry>
+      </collision>
+    </link>
+    <!-- extensions-->
+    <xacro:pr2_forearm_gazebo_v0 side="${side}" />
+    <xacro:pr2_forearm_transmission_v0 side="${side}" />
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/gazebo/gazebo.urdf.xacro
@@ -0,0 +1,24 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <gazebo>
+    <plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_controller_manager.so">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>1000.0</updateRate>
+    </plugin>
+
+    <plugin name="gazebo_ros_power_monitor_controller" filename="libgazebo_ros_power_monitor.so">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>1.0</updateRate>
+      <timeout>5</timeout>
+      <powerStateTopic>power_state</powerStateTopic>
+      <powerStateRate>10.0</powerStateRate>
+      <fullChargeCapacity>87.78</fullChargeCapacity>
+      <dischargeRate>-474</dischargeRate>
+      <chargeRate>525</chargeRate>
+      <dischargeVoltage>15.52</dischargeVoltage>
+      <chargeVoltage>16.41</chargeVoltage>
+    </plugin>
+  </gazebo>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/gripper_v0/gripper.gazebo.xacro
@@ -0,0 +1,287 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:property name="finger_stop_kd"             value="1.0" />
+  <xacro:property name="finger_stop_kp"             value="10000000.0" />
+  <xacro:property name="finger_fudge_factor"        value="1.0" />
+
+  <xacro:property name="finger_kp"                  value="0.0" />
+  <xacro:property name="finger_kd"                  value="0.0" />
+  <xacro:property name="finger_fm"                  value="0.0" />
+
+  <xacro:property name="finger_tip_kp"              value="0.0" />
+  <xacro:property name="finger_tip_kd"              value="0.0" />
+  <xacro:property name="finger_tip_fm"              value="0.0" />
+
+  <xacro:property name="finger_tip_mu"              value="500.0" />
+  <xacro:property name="finger_mu"                  value="500.0" />
+
+  <xacro:property name="parallel_link_x_offset"     value="-0.018" />
+  <xacro:property name="parallel_link_y_offset"     value="0.021" />
+
+  <xacro:macro name="pr2_finger_gazebo_v0" params="prefix reflect">
+
+    <!-- Finger proximal digit -->
+
+    <gazebo reference="${prefix}_l_finger_link">
+      <turnGravityOff>true</turnGravityOff>
+      <mu1 value="${finger_mu}" />
+      <mu2 value="${finger_mu}" />
+      <kp value="1000000.0" />
+      <kd value="1.0" />
+    </gazebo>
+    <gazebo reference="${prefix}_l_finger_joint">
+      <stopKd value="${finger_stop_kd}" />
+      <stopKp value="${finger_stop_kp}" />
+      <fudgeFactor value="${finger_fudge_factor}" />
+      <provideFeedback value="true"/>
+    </gazebo>
+
+    <!-- Finger proximal digit -->
+
+    <gazebo reference="${prefix}_r_finger_link">
+      <turnGravityOff>true</turnGravityOff>
+      <mu1 value="${finger_mu}" />
+      <mu2 value="${finger_mu}" />
+      <kp value="1000000.0" />
+      <kd value="1.0" />
+    </gazebo>
+    <gazebo reference="${prefix}_r_finger_joint">
+      <stopKd value="${finger_stop_kd}" />
+      <stopKp value="${finger_stop_kp}" />
+      <fudgeFactor value="${finger_fudge_factor}" />
+      <provideFeedback value="true"/>
+    </gazebo>
+
+    <!-- Finger tip -->
+
+    <gazebo reference="${prefix}_l_finger_tip_link">
+      <turnGravityOff>true</turnGravityOff>
+      <selfCollide>false</selfCollide>
+      <sensor type="contact" name="${prefix}_l_finger_tip_contact_sensor">
+        <update_rate>100.0</update_rate>
+        <contact>
+          <collision>${prefix}_l_finger_tip_link_geom</collision>
+        </contact>
+        <plugin name="${prefix}_l_finger_tip_gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
+          <alwaysOn>true</alwaysOn>
+          <frameName>${prefix}_l_finger_tip_link</frameName>
+          <updateRate>100.0</updateRate>
+          <bumperTopicName>${prefix}_l_finger_tip_bumper</bumperTopicName>
+        </plugin>
+      </sensor>
+      <mu1 value="${finger_tip_mu}" />
+      <mu2 value="${finger_tip_mu}" />
+      <kp  value="10000000.0" />
+      <kd  value="1.0" />
+    </gazebo>
+    <gazebo reference="${prefix}_l_finger_tip_joint">
+      <stopKd value="${finger_stop_kd}" />
+      <stopKp value="${finger_stop_kp}" />
+      <fudgeFactor value="${finger_fudge_factor}" />
+      <provideFeedback value="true"/>
+    </gazebo>
+
+    <!-- Finger tip -->
+
+    <gazebo reference="${prefix}_r_finger_tip_link">
+      <turnGravityOff>true</turnGravityOff>
+      <selfCollide>false</selfCollide>
+      <sensor type="contact" name="${prefix}_r_finger_tip_contact_sensor">
+        <update_rate>100.0</update_rate>
+        <contact>
+          <collision>${prefix}_r_finger_tip_link_geom</collision>
+        </contact>
+        <plugin name="${prefix}_r_finger_tip_gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
+          <alwaysOn>true</alwaysOn>
+          <frameName>${prefix}_r_finger_tip_link</frameName>
+          <updateRate>100.0</updateRate>
+          <bumperTopicName>${prefix}_r_finger_tip_bumper</bumperTopicName>
+        </plugin>
+      </sensor>
+      <mu1 value="${finger_tip_mu}" />
+      <mu2 value="${finger_tip_mu}" />
+      <kp  value="10000000.0" />
+      <kd  value="1.0" />
+    </gazebo>
+    <gazebo>
+      <plugin name="p3d_${prefix}_l_finger_controller" filename="libgazebo_ros_p3d.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bodyName>${prefix}_l_finger_link</bodyName>
+        <topicName>${prefix}_l_finger_pose_ground_truth</topicName>
+        <gaussianNoise>0.0</gaussianNoise>
+        <frameName>base_link</frameName>
+      </plugin>
+      <plugin name="f3d_${prefix}_l_finger_controller" filename="libgazebo_ros_f3d.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bodyName>${prefix}_l_finger_link</bodyName>
+        <topicName>${prefix}_l_finger_force_ground_truth</topicName>
+      </plugin>
+    </gazebo>
+    <gazebo reference="${prefix}_r_finger_tip_joint">
+      <stopKd value="${finger_stop_kd}" />
+      <stopKp value="${finger_stop_kp}" />
+      <fudgeFactor value="${finger_fudge_factor}" />
+      <provideFeedback value="true"/>
+    </gazebo>
+
+    <!-- parallel link for simulating gripper constraints -->
+    <gazebo>
+      <link name="${prefix}_l_parallel_link">
+          <inertial>
+            <mass>0.17126</mass>
+            <inertia>
+              <ixx>7.7562e-05</ixx>
+              <ixy>1.49095e-06</ixy>
+              <ixz>-9.83385e-06</ixz>
+              <iyy>0.000197083</iyy>
+              <iyz>-3.06125e-06</iyz>
+              <izz>0.000181054</izz>
+            </inertia>
+            <pose>0.03598 0.0173 -0.00164 0 0 0</pose>
+          </inertial>
+          <pose>0.82991 ${0.188*reflect+0.031} 0.790675 0 -0 0</pose>
+          <gravity>false</gravity>
+      </link>
+      <link name="${prefix}_r_parallel_link">
+          <inertial>
+            <mass>0.17389</mass>
+            <inertia>
+              <ixx>7.73841e-05</ixx>
+              <ixy>-2.09309e-06</ixy>
+              <ixz>-8.36228e-06</ixz>
+              <iyy>0.000198474</iyy>
+              <iyz>2.4611e-06</iyz>
+              <izz>0.00018107</izz>
+            </inertia>
+            <pose>0.03576 -0.01736 -0.00095 0 0 0</pose>
+          </inertial>
+          <pose>0.82991 ${0.188*reflect-0.031} 0.790675 0 0 0</pose>
+          <gravity>false</gravity>
+      </link>
+    </gazebo>
+    <gazebo>
+      <joint type="screw" name="${prefix}_r_screw_screw_joint">
+          <child>${prefix}_motor_screw_link</child>
+          <parent>${prefix}_r_finger_tip_link</parent>
+          <thread_pitch>-3141.6</thread_pitch>
+          <axis>
+            <xyz>0 1 0</xyz>
+          </axis>
+      </joint>
+      <joint type="screw" name="${prefix}_l_screw_screw_joint">
+          <parent>${prefix}_l_finger_tip_link</parent>
+          <child>${prefix}_motor_screw_link</child>
+          <thread_pitch>3141.6</thread_pitch>
+          <axis>
+            <xyz>0 1 0</xyz>
+          </axis>
+      </joint>
+    </gazebo>
+
+
+    <gazebo>
+      <joint type="revolute" name="${prefix}_r_parallel_root_joint">
+          <parent>${prefix}_r_parallel_link</parent>
+          <child>${prefix}_palm_link</child>
+          <axis>
+            <xyz>0 0 -1</xyz>
+            <dynamics>
+              <damping>0.2</damping>
+            </dynamics>
+          </axis>
+          <pose>${0.07691+parallel_link_x_offset} ${-0.01-parallel_link_y_offset} 0 0 0 0</pose>
+      </joint>
+      <joint type="revolute" name="${prefix}_l_parallel_root_joint">
+          <parent>${prefix}_l_parallel_link</parent>
+          <child>${prefix}_palm_link</child>
+          <axis>
+            <xyz>0 0 1</xyz>
+            <dynamics>
+              <damping>0.2</damping>
+            </dynamics>
+          </axis>
+          <pose>${0.07691+parallel_link_x_offset} ${0.01+parallel_link_y_offset} 0 0 0 0</pose>
+      </joint>
+      <joint type="revolute" name="${prefix}_r_parallel_tip_joint">
+          <parent>${prefix}_r_parallel_link</parent>
+          <child>${prefix}_r_finger_tip_link</child>
+          <axis>
+            <xyz>0 0 1</xyz>
+          </axis>
+          <pose>${parallel_link_x_offset} ${-parallel_link_y_offset} 0 0 0 0</pose>
+      </joint>
+      <joint type="revolute" name="${prefix}_l_parallel_tip_joint">
+          <parent>${prefix}_l_parallel_link</parent>
+          <child>${prefix}_l_finger_tip_link</child>
+          <axis>
+            <xyz>0 0 1</xyz>
+          </axis>
+          <pose>${parallel_link_x_offset} ${parallel_link_y_offset} 0 0 0 0</pose>
+      </joint>
+      <joint type="prismatic" name="${prefix}_joint">
+          <parent>${prefix}_r_finger_tip_link</parent>
+          <child>${prefix}_l_finger_tip_link</child>
+          <axis>
+            <xyz>0 1 0</xyz>
+          </axis>
+      </joint>
+    </gazebo>
+    <gazebo reference="${prefix}_motor_slider_link">
+      <turnGravityOff>true</turnGravityOff>
+      <material value="PR2/Red" />
+    </gazebo>
+    <gazebo reference="${prefix}_motor_screw_link">
+      <turnGravityOff>true</turnGravityOff>
+      <material value="PR2/Red" />
+    </gazebo>
+    <gazebo reference="${prefix}_l_parallel_link">
+      <turnGravityOff>true</turnGravityOff>
+      <material value="PR2/Red" />
+    </gazebo>
+    <gazebo reference="${prefix}_r_parallel_link">
+      <turnGravityOff>true</turnGravityOff>
+      <material value="PR2/Red" />
+    </gazebo>
+
+  </xacro:macro>
+
+
+
+  <xacro:macro name="pr2_gripper_gazebo_v0" params="side">
+
+    <gazebo reference="${side}_gripper_palm_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+
+    <gazebo>
+      <plugin name="p3d_${side}_gripper_palm_controller" filename="libgazebo_ros_p3d.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bodyName>${side}_gripper_palm_link</bodyName>
+        <topicName>${side}_gripper_palm_pose_ground_truth</topicName>
+        <xyzOffsets>0 0 0</xyzOffsets>
+        <rpyOffsets>0 0 0</rpyOffsets>
+        <gaussianNoise>0.0</gaussianNoise>
+        <frameName>map</frameName>
+      </plugin>
+
+      <!-- a formal implementation of grasp hack in gazebo with fixed joint -->
+      <gripper name="${side}_grasp_hack">
+        <grasp_check>
+          <attach_steps>20</attach_steps>
+          <detach_steps>40</detach_steps>
+          <min_contact_count>2</min_contact_count>
+        </grasp_check>
+        <gripper_link>${side}_gripper_r_finger_tip_link</gripper_link>
+        <gripper_link>${side}_gripper_l_finger_tip_link</gripper_link>
+        <palm_link>${side}_gripper_palm_link</palm_link>
+      </gripper>
+    </gazebo>
+
+  </xacro:macro>
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/gripper_v0/gripper.transmission.xacro
@@ -0,0 +1,50 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#slider"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_gripper_transmission_v0" params="side screw_reduction gear_ratio theta0 phi0 t0 L0 h a b r">
+    <!-- [lr]_gripper_joint is a fictitious joint, used by transmission for controller gap   -->
+    <!-- [lr]_gripper_joint is not attached to any link                                      -->
+    <!-- [lr]_gripper_joint position is the gap_size                                         -->
+    <!-- [lr]_gripper_joint velocity is the gap linear velocity                              -->
+    <!-- [lr]_gripper_joint effort   is the gap linear force                                 -->
+    <!-- Please refer to function engineering spreadsheet 090224_link_data.xls for           -->
+    <!-- the transmission function.                                                          -->
+    <!-- Please refer to mechanism_model/src/pr2_gripper_transmission.cpp for implementation.-->
+    <!-- gazebo_mimic_pid is for sim only.                                                   -->
+    <transmission type="pr2_mechanism_model/PR2GripperTransmission" name="${side}_gripper_trans" >
+      <actuator       name="${side}_gripper_motor" />
+      <gap_joint      name="${side}_gripper_joint"
+                      mechanical_reduction="1.0"
+                      screw_reduction="${screw_reduction}"
+                      gear_ratio="${gear_ratio}"
+                      theta0="${theta0}"
+                      phi0="${phi0}"
+                      t0="${t0}"
+                      L0="${L0}"
+                      h="${h}"
+                      a="${a}"
+                      b="${b}"
+                      r="${r}"
+                      />
+      <!-- if a gazebo joint exists as [l|r]_gripper_joint, use this tag to have
+           gripper transmission apply torque directly to prismatic joint
+           this should be the default behavior in diamondback, deprecating this flag -->
+      <use_simulated_gripper_joint/>
+      <!-- set passive joint angles so things look nice in rviz -->
+      <passive_joint  name="${side}_gripper_l_finger_joint"     />
+      <passive_joint  name="${side}_gripper_r_finger_joint"     />
+      <passive_joint  name="${side}_gripper_r_finger_tip_joint" />
+      <passive_joint  name="${side}_gripper_l_finger_tip_joint" />
+      <!-- screw joint to capture gripper "dynamics" -->
+      <simulated_actuated_joint name="${side}_gripper_motor_screw_joint"
+                                passive_actuated_joint="${side}_gripper_motor_slider_joint"
+                                simulated_reduction="3141.6"   />
+    </transmission>
+  </xacro:macro>
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/gripper_v0/gripper.urdf.xacro
@@ -0,0 +1,374 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#slider"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/gripper_v0/gripper.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/gripper_v0/gripper.transmission.xacro" />
+
+  <xacro:property name="M_PI" value="3.1415926535897931" />
+
+  <xacro:property name="gripper_upper_angle" value="0.548" />
+  <xacro:property name="gripper_lower_angle" value="0.00" />
+
+  <xacro:property name="finger_damping"             value="0.02" />
+  <xacro:property name="gripper_damping"            value="10.0" />
+  <xacro:property name="finger_tip_damping"         value="0.001" />
+
+  <xacro:property name="finger_joint_effort_limit"  value="1000.0" />
+
+  <xacro:property name="finger_to_finger_tip_x"     value="0.09137" />
+  <xacro:property name="palm_to_finger_x"           value="0.07691" />
+
+  <xacro:macro name="pr2_finger_limits_v0">
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="${finger_joint_effort_limit}" velocity="0.5"
+           lower="${gripper_lower_angle}" upper="${gripper_upper_angle}" />
+  </xacro:macro>
+
+  <xacro:macro name="pr2_finger_v0" params="prefix parent reflect">
+
+    <!-- Finger proximal digit -->
+    <joint name="${prefix}_l_finger_joint" type="revolute">
+      <axis xyz="0 0 1" />
+
+      <xacro:pr2_finger_limits_v0/>
+
+      <dynamics damping="${finger_damping}" />
+      <origin xyz="0.07691 0.01 0" rpy="0 0 0" />
+      <parent link="${parent}"/>
+      <child link="${prefix}_l_finger_link"/>
+    </joint>
+    <link name="${prefix}_l_finger_link">
+
+
+      <inertial>
+        <mass value="0.17126" />
+        <origin xyz="${0.03598} 0.01730 -0.00164" rpy="0 0 0" />
+        <inertia  ixx= "0.00007756198"
+                  ixy= "0.00000149095"
+                  ixz="-0.00000983385"
+                  iyy= "0.00019708305"
+                  iyz="-0.00000306125"
+                  izz= "0.00018105446" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae" />
+        </geometry>
+
+        <material name="Grey" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Finger proximal digit -->
+
+    <joint name="${prefix}_r_finger_joint" type="revolute">
+      <axis xyz="0 0 -1" />
+      <origin xyz="${palm_to_finger_x} -0.01 0" rpy="0 0 0" />
+      <xacro:pr2_finger_limits_v0/>
+      <dynamics damping="${finger_damping}" />
+      <mimic joint="${prefix}_l_finger_joint" multiplier="1" offset="0"/>
+      <parent link="${parent}"/>
+      <child link="${prefix}_r_finger_link"/>
+    </joint>
+    <link name="${prefix}_r_finger_link">
+
+
+      <inertial>
+        <mass value="0.17389" />
+        <origin xyz="${0.03576} -0.01736 -0.00095" rpy="0 0 0" />
+        <inertia  ixx= "0.00007738410"
+                  ixy="-0.00000209309"
+                  ixz="-0.00000836228"
+                  iyy= "0.00019847383"
+                  iyz= "0.00000246110"
+                  izz= "0.00018106988" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="${M_PI} 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae" />
+        </geometry>
+
+        <material name="Grey" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="${M_PI} 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Finger tip -->
+
+    <joint name="${prefix}_l_finger_tip_joint" type="revolute">
+      <axis xyz="0 0 -1" />
+      <origin xyz="${finger_to_finger_tip_x} 0.00495 0" rpy="0 0 0" />
+      <xacro:pr2_finger_limits_v0/>
+      <dynamics damping="${finger_tip_damping}" />
+      <mimic joint="${prefix}_l_finger_joint" multiplier="1" offset="0"/>
+      <parent link="${prefix}_l_finger_link"/>
+      <child link="${prefix}_l_finger_tip_link"/>
+    </joint>
+    <link name="${prefix}_l_finger_tip_link">
+
+
+      <inertial>
+        <mass value="0.04419" />
+        <origin xyz="0.00423 0.00284 0.0" rpy="0 0 0" />
+        <inertia  ixx="0.00000837047" ixy="0.00000583632" ixz="0.0"
+                  iyy="0.00000987067" iyz="0.0"
+                  izz="0.00001541768" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae" />
+        </geometry>
+
+        <material name="Green" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Finger tip -->
+
+    <joint name="${prefix}_r_finger_tip_joint" type="revolute">
+      <axis xyz="0 0 1" />
+      <origin xyz="${0.09137} ${-0.00495} 0" rpy="0 0 0" />
+      <xacro:pr2_finger_limits_v0/>
+      <dynamics damping="${finger_tip_damping}" />
+      <mimic joint="${prefix}_l_finger_joint" multiplier="1" offset="0"/>
+      <parent link="${prefix}_r_finger_link"/>
+      <child link="${prefix}_r_finger_tip_link"/>
+    </joint>
+    <link name="${prefix}_r_finger_tip_link">
+
+
+      <inertial>
+        <mass value="0.04419" />
+        <origin xyz="${0.00423} ${-0.00284} ${0.0}" rpy="0 0 0" />
+        <inertia  ixx="0.00000837047" ixy="-0.00000583632" ixz="0.0"
+                  iyy="0.00000987067" iyz="0.0"
+                  izz="0.00001541768" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="${M_PI} 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae"  />
+        </geometry>
+
+        <material name="Green" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="${M_PI} 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_finger_gazebo_v0 prefix="${prefix}" reflect="${reflect}" />
+  </xacro:macro>
+
+
+
+  <xacro:macro name="pr2_gripper_v0" params="side reflect parent *origin gear_ratio screw_reduction theta0 phi0 t0 L0 h a b r">
+
+    <joint name="${side}_gripper_palm_joint" type="fixed">
+      <xacro:insert_block name="origin"/>
+      <parent link="${parent}"/>
+      <child link="${side}_gripper_palm_link"/>
+    </joint>
+    <link name="${side}_gripper_palm_link">
+      <inertial>
+        <mass value="0.58007" />
+        <origin xyz="0.06623 0.00053 -0.00119" rpy="0 0 0" />
+        <inertia  ixx="0.00035223921" ixy="-0.00001580476" ixz="-0.00000091750"
+                  iyy="0.00067741312" iyz="-0.00000059554"
+                  izz="0.00086563316" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.dae"  />
+        </geometry>
+
+        <material name="Red" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <joint name="${side}_gripper_led_joint" type="fixed">
+      <!--  Need to check if we need a positive or negative Z term -->
+      <origin xyz="0.0513 0.0 .0244"/>
+      <parent link="${side}_gripper_palm_link"/>
+      <child link="${side}_gripper_led_frame"/>
+    </joint>
+    <link name="${side}_gripper_led_frame" />
+
+    <joint name="${side}_gripper_motor_accelerometer_joint" type="fixed">
+      <origin xyz="0 0 0" rpy="0 0 0" />
+      <parent link="${side}_gripper_palm_link"/>
+      <child link="${side}_gripper_motor_accelerometer_link"/>
+    </joint>
+    <link name="${side}_gripper_motor_accelerometer_link">
+      <inertial>
+        <mass value="0.001" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia  ixx="0.001" ixy="0.0" ixz="0.0"
+                  iyy="0.001" iyz="0.0"
+                  izz="0.001" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.001 0.001 0.001" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.001 0.001 0.001" />
+        </geometry>
+      </collision>
+    </link>
+
+    <joint name="${side}_gripper_tool_joint" type="fixed">
+      <origin xyz="0.18 0 0" rpy="0 0 0" />
+      <parent link="${side}_gripper_palm_link"/>
+      <child link="${side}_gripper_tool_frame"/>
+    </joint>
+    <link name="${side}_gripper_tool_frame"/>
+
+    <!-- actuated motor screw joint -->
+    <link name="${side}_gripper_motor_slider_link">
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia  ixx="0.001" ixy="0.0" ixz="0.0"
+                  iyy="0.001" iyz="0.0"
+                  izz="0.001" />
+      </inertial>
+      <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </collision>
+      -->
+    </link>
+    <joint name="${side}_gripper_motor_slider_joint" type="prismatic">
+      <origin xyz="${finger_to_finger_tip_x+palm_to_finger_x} 0 0" rpy="0 0 0" />
+      <axis xyz="1 0 0"/>
+      <parent link="${side}_gripper_palm_link"/>
+      <child link="${side}_gripper_motor_slider_link"/>
+      <limit effort="1000.0" velocity="0.2" lower="-0.1" upper="0.1" />
+    </joint>
+    <link name="${side}_gripper_motor_screw_link">
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia  ixx="0.0001" ixy="0.0" ixz="0.0"
+                  iyy="0.0001" iyz="0.0"
+                  izz="0.0001" />
+      </inertial>
+      <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </collision>
+      -->
+    </link>
+    <joint name="${side}_gripper_motor_screw_joint" type="continuous">
+      <origin xyz="0.0 0 0" rpy="0 0 0" />
+      <axis xyz="0 1 0"/>
+      <parent link="${side}_gripper_motor_slider_link"/>
+      <child link="${side}_gripper_motor_screw_link"/>
+      <dynamics damping="0.0001" />
+    </joint>
+
+    <!-- pr2 fingers macro -->
+    <xacro:pr2_finger_v0 prefix="${side}_gripper" reflect="${reflect}" parent="${side}_gripper_palm_link" />
+
+    <!-- fictitous joint that represents the gripper gap -->
+    <!-- effort is the linear force at the gripper gap
+         velocity limit is the linear velocity limit at the gripper gap
+         try and introduce a very stiff spring
+         The velocity limits are alpha tested.
+         The effort limits are somewhat inflated.
+         k_velocity was recently raised from 500.0 to 5000.0.  Tested on beta
+    -->
+    <joint name="${side}_gripper_joint" type="prismatic">
+      <parent link="${side}_gripper_r_finger_tip_link"/>
+      <child link="${side}_gripper_l_finger_tip_frame"/>
+      <axis xyz="0 1 0" />
+      <dynamics damping="${gripper_damping}" />
+      <limit effort="1000.0" velocity="0.2" lower="0.0" upper="0.09" />
+      <safety_controller k_velocity="5000.0" k_position="20.0" soft_lower_limit="${0.0-0.01}" soft_upper_limit="${0.09-0.002}" />
+    </joint>
+
+    <!-- This link is the same as the l_finger_tip_link,
+	 but because the urdf does not support graph structures,
+	 this link exists twice -->
+    <link name="${side}_gripper_l_finger_tip_frame" />
+
+    <!-- extensions -->
+    <xacro:pr2_gripper_gazebo_v0 side="${side}" />
+    <xacro:pr2_gripper_transmission_v0 side="${side}"
+        screw_reduction="${screw_reduction}"
+        gear_ratio="${gear_ratio}"
+        theta0="${theta0}"
+        phi0="${phi0}"
+        t0="${t0}"
+        L0="${L0}"
+        h="${h}"
+        a="${a}"
+        b="${b}"
+        r="${r}" />
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/head_v0/head.gazebo.xacro
@@ -0,0 +1,16 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_head_gazebo_v0" params="name">
+    <gazebo reference="${name}_plate_frame">
+      <material value="Gazebo/Grey" />
+    </gazebo>
+  </xacro:macro>
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/head_v0/head.transmission.xacro
@@ -0,0 +1,34 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+
+  <xacro:macro name="pr2_head_pan_transmission_v0" params="name">
+
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${name}_trans">
+      <actuator name="${name}_motor" />
+      <joint name="${name}_joint" />
+      <mechanicalReduction>6.0</mechanicalReduction>
+    </transmission>
+
+  </xacro:macro>
+
+
+
+  <xacro:macro name="pr2_head_tilt_transmission_v0" params="name">
+
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${name}_trans">
+      <actuator name="${name}_motor" />
+      <joint name="${name}_joint" />
+      <mechanicalReduction>6.0</mechanicalReduction>
+    </transmission>
+
+  </xacro:macro>
+
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/head_v0/head.urdf.xacro
@@ -0,0 +1,147 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/head_v0/head.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/head_v0/head.transmission.xacro" />
+
+  <xacro:property name="M_PI" value="3.1415926535897931" />
+
+  <xacro:macro name="pr2_head_pan_v0" params="name parent *origin">
+    <joint name="${name}_joint" type="revolute">
+      <axis xyz="0 0 1" />
+      <limit lower="-3.007" upper="3.007" effort="2.645" velocity="6" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_velocity="1.5" soft_lower_limit="${-3.007+0.15}" soft_upper_limit="${3.007-0.15}" k_position="100" />
+      <calibration rising="0.0" />
+      <dynamics damping="0.5" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+      <inertial>
+        <mass value="6.339" /> <!-- mass/cog/moi updated per 100505_link_data.xls -->
+        <origin xyz="0.010907 0.031693 0.090507" rpy="0 0 0" />
+        <inertia ixx="0.032497592"  ixy="0.00063604088"  ixz="0.0025851534"
+                 iyy="0.046545627"  iyz="-0.0024534295"  izz="0.057652724" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0.0" rpy="0 0 0 " />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/head_v0/head_pan.dae"  />
+        </geometry>
+
+        <material name="Blue" />
+      </visual>
+
+      <collision>
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/head_v0/head_pan_L.stl"  />
+        </geometry>
+      </collision>
+
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_head_pan_transmission_v0 name="${name}" />
+  </xacro:macro>
+
+
+
+  <xacro:macro name="pr2_head_tilt_v0" params="name parent *origin">
+
+    <joint name="${name}_joint" type="revolute">
+      <axis xyz="0 1 0" />
+      <limit lower="-0.471238" upper="1.39626" effort="18" velocity="5" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_velocity="3.0" soft_lower_limit="${-0.4712 + 0.1}" soft_upper_limit="${1.39626 - 0.1}" k_position="100" />
+      <calibration falling="${0.0+cal_head_tilt_flag}" />
+      <dynamics damping="10.0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+      <inertial>
+        <mass value="4.479" /> <!-- mass/cog/moi updated per 100505_link_data.xls -->
+        <origin xyz="0.001716 -0.019556 0.055002" rpy="0 0 0" />
+        <inertia ixx="0.024223222"  ixy="0.00062063507"  ixz="-0.000096909696"
+                 iyy="0.054723086"  iyz="0.00279702400"
+                 izz="0.067306377" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0.0 0.0 0.0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/head_v0/head_tilt.dae"  />
+        </geometry>
+
+        <material name="Green" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0.0 0.0 0.0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/head_v0/head_tilt_L.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_head_tilt_transmission_v0 name="${name}" />
+  </xacro:macro>
+
+
+
+  <xacro:macro name="pr2_head_v0" params="name parent *origin">
+    <xacro:pr2_head_pan_v0 name="${name}_pan" parent="${parent}">
+      <xacro:insert_block name="origin" />
+    </xacro:pr2_head_pan_v0>
+
+    <xacro:pr2_head_tilt_v0 name="${name}_tilt" parent="${name}_pan_link">
+      <origin xyz="0.068 0 0" rpy="0 0 0" />
+    </xacro:pr2_head_tilt_v0>
+
+    <!-- Head plate frame -->
+    <joint name="${name}_plate_frame_joint" type="fixed">
+      <origin xyz="0.0232 0 0.0645" rpy="0 0 0" />
+      <parent link="${name}_tilt_link"/>
+      <child link="${name}_plate_frame"/>
+    </joint>
+    <link name="${name}_plate_frame">
+
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.01 0.01 0.01" />
+        </geometry>
+
+        <material name="Blue" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.01 0.01 0.01" />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_head_gazebo_v0 name="${name}" />
+
+  </xacro:macro>
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/materials.urdf.xacro
@@ -0,0 +1,52 @@
+<?xml version="1.0"?>
+<robot>
+
+  <material name="Blue">
+    <color rgba="0.0 0.0 0.8 1.0"/>
+  </material>
+
+  <material name="Green">
+    <color rgba="0.0 0.8 0.0 1.0"/>
+  </material>
+
+  <material name="Grey">
+    <color rgba="0.7 0.7 0.7 1.0"/>
+  </material>
+
+  <material name="Grey2">
+    <color rgba="0.9 0.9 0.9 1.0"/>
+  </material>
+
+  <material name="Red">
+    <color rgba="0.8 0.0 0.0 1.0"/>
+  </material>
+
+  <material name="White">
+    <color rgba="1.0 1.0 1.0 1.0"/>
+  </material>
+
+  <material name="Black">
+    <color rgba="0.1 0.1 0.1 1.0"/>
+  </material>
+
+  <material name="LightGrey">
+    <color rgba="0.6 0.6 0.6 1.0"/>
+  </material>
+
+  <material name="Caster">
+    <texture filename="package://pr2_description/materials/textures/pr2_caster_texture.png" />
+  </material>
+
+  <material name="Wheel_l">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_left.png" />
+  </material>
+
+  <material name="Wheel_r">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_right.png" />
+  </material>
+
+  <material name="RollLinks">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_left.png" />
+  </material>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/pr2.urdf.xacro
@@ -0,0 +1,157 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro"
+       name="pr2" >
+
+  <!-- The following included files set up definitions of parts of the robot body -->
+  <!-- misc common stuff? -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/common.xacro" />
+  <!-- PR2 Arm -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/shoulder_v0/shoulder.urdf.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/upper_arm_v0/upper_arm.urdf.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/forearm_v0/forearm.urdf.xacro" />
+  <!-- PR2 gripper -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/gripper_v0/gripper.urdf.xacro" />
+  <!-- PR2 head -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/head_v0/head.urdf.xacro" />
+  <!-- PR2 tilting laser mount -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/tilting_laser_v0/tilting_laser.urdf.xacro" />
+  <!-- PR2 torso -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/torso_v0/torso.urdf.xacro" />
+  <!-- PR2 base -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/base_v0/base.urdf.xacro" />
+  <!-- Head sensors -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/head_sensor_package.urdf.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/kinect_prosilica_camera.urdf.xacro" />
+  <!-- Camera sensors -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/wge100_camera.urdf.xacro" />
+  <!-- Texture projector -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/projector_wg6802418.urdf.xacro" />
+  <!-- generic simulator_gazebo plugins for starting mechanism control, ros time, ros battery -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/gazebo/gazebo.urdf.xacro" />
+  <!-- materials for visualization -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/materials.urdf.xacro" />
+
+  <!-- Now we can start using the macros included above to define the actual PR2 -->
+
+  <!-- The first use of a macro.  This one was defined in base.test/robots/pr2.xacro above.
+       A macro like this will expand to a set of link and joint definitions, and to additional
+       Gazebo-related extensions (sensor plugins, etc).  The macro takes an argument, name,
+       that equals "base", and uses it to generate names for its component links and joints
+       (e.g., base_link).  The included origin block is also an argument to the macro.  By convention,
+       the origin block defines where the component is w.r.t its parent (in this case the parent
+       is the world frame). For more, see http://www.ros.org/wiki/xacro -->
+  <xacro:pr2_base_v0 name="base"/>
+
+  <xacro:pr2_torso_v0 name="torso_lift" parent="base_link">
+    <origin xyz="-0.05 0 0.739675" rpy="0 0 0" />
+  </xacro:pr2_torso_v0>
+
+  <!-- The xacro preprocesser will replace the parameters below, such as ${cal_head_x}, with
+       numerical values that were specified in common.xacro which was included above -->
+  <xacro:pr2_head_v0 name="head" parent="torso_lift_link">
+    <origin xyz="-0.01707 0.0 0.38145"
+            rpy="0.0 0.0 0.0" />
+  </xacro:pr2_head_v0>
+
+  <!-- Camera package: double stereo, prosilica -->
+  <xacro:pr2_head_sensor_package_v0 name="sensor_mount" hd_frame_name="high_def"
+         hd_camera_name="prosilica"
+         stereo_name="double_stereo"
+         parent="head_plate_frame">
+    <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
+  </xacro:pr2_head_sensor_package_v0>
+
+  <!-- Projector -->
+  <xacro:projector_wg6802418_v0 name="projector_wg6802418" parent="head_plate_frame" >
+    <!-- Camera is slightly recessed from front, where is camera origin? Lens? -->
+    <origin xyz="0 0.110 0.0546" rpy="0 0 0" />
+  </xacro:projector_wg6802418_v0>
+
+  <!-- Base of Kinect/Prosilica Mount -->
+  <xacro:kinect_prosilica_camera_swept_back_v0 name="head_mount" parent="head_plate_frame" >
+    <origin xyz="-0.137376 0 0.091746" rpy="0 0 0" />
+    <!--
+          Was -0.1 0 0.09225, -0.138 0 0.09225 looks good front back and sheet metal on bolt pattern,
+          -0.138 0 0.06225 is where Prosilica FOV just clears the head.
+          This is 30 mm (!) below the position in SolidWorks.
+          Lowering the Prosilica by this amount in SW makes the FOV hit around the aluminum / plastic junction.
+
+          Turns out that head_plate_frame is in some random position in space.
+          It is [0.0232 0 0.0645 from its parent, head_tilt_link.
+          The distance from head_plate_frame to the head_kinect_prosilica is 137.376 mm X and 91.746 mm Z.
+          So the origin should in fact be -0.137376 0 0.091746.
+          John is changing the Prosilica FOV based on my numbers.
+          Just need to roscd and svn up.
+    -->
+  </xacro:kinect_prosilica_camera_swept_back_v0>
+
+  <xacro:pr2_tilting_laser_v0 name="laser_tilt" parent="torso_lift_link" laser_calib_ref="0.0">
+    <origin xyz="0.09893 0 0.227" rpy="0 0 0" />
+  </xacro:pr2_tilting_laser_v0>
+
+  <!-- This is a common convention, to use a reflect parameter that equals +-1 to distinguish left from right -->
+  <xacro:pr2_shoulder_v0 side="r" reflect="-1" parent="torso_lift_link">
+    <origin xyz="0.0 -0.188 0.0" rpy="0 0 0" />
+  </xacro:pr2_shoulder_v0>
+  <xacro:pr2_upper_arm_v0 side="r" reflect="-1" parent="r_upper_arm_roll_link"/>
+  <xacro:pr2_forearm_v0 side="r" reflect="-1" parent="r_forearm_roll_link">
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:pr2_forearm_v0>
+
+  <xacro:pr2_gripper_v0 reflect="-1.0" side="r" parent="r_wrist_roll_link"
+               screw_reduction="${4.0/1000.0}"
+               gear_ratio="${(729.0/25.0)*(22.0/16.0)}"
+               theta0="${3.6029*M_PI/180.0}"
+               phi0="${29.7089*M_PI/180.0}"
+               t0="${-0.1914/1000.0}"
+               L0="${37.5528/1000.0}"
+               h="${0.0/1000.0}"
+               a="${68.3698/1000.0}"
+               b="${43.3849/1000.0}"
+               r="${91.5/1000.0}" >
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:pr2_gripper_v0>
+
+  <xacro:pr2_shoulder_v0 side="l" reflect="1" parent="torso_lift_link">
+    <origin xyz="0.0 0.188 0.0" rpy="0 0 0" />
+  </xacro:pr2_shoulder_v0>
+  <xacro:pr2_upper_arm_v0 side="l" reflect="1" parent="l_upper_arm_roll_link"/>
+  <xacro:pr2_forearm_v0 side="l" reflect="1" parent="l_forearm_roll_link">
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:pr2_forearm_v0>
+
+  <xacro:pr2_gripper_v0 reflect="1.0" side="l" parent="l_wrist_roll_link"
+               screw_reduction="${4.0/1000.0}"
+               gear_ratio="${(729.0/25.0)*(22.0/16.0)}"
+               theta0="${3.6029*M_PI/180.0}"
+               phi0="${29.7089*M_PI/180.0}"
+               t0="${-0.1914/1000.0}"
+               L0="${37.5528/1000.0}"
+               h="${0.0/1000.0}"
+               a="${68.3698/1000.0}"
+               b="${43.3849/1000.0}"
+               r="${91.5/1000.0}" >
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:pr2_gripper_v0>
+
+  <!-- Forearm cam Position is a guess, based on full robot calibration -->
+  <!-- Forearm cam Orientation is from Function -->
+  <xacro:wge100_camera_v0 name="l_forearm_cam" image_format="R8G8B8" camera_name="l_forearm_cam" image_topic_name="image_raw"
+                          camera_info_topic_name="camera_info"
+                          parent="l_forearm_roll_link" hfov="90" focal_length="320.000105"
+                          frame_id="l_forearm_cam_optical_frame" hack_baseline="0"
+                          image_width="640" image_height="480">
+    <origin xyz=".135 0 .044" rpy="${-M_PI/2} ${-32.25*M_PI/180} 0" />
+  </xacro:wge100_camera_v0>
+  <xacro:wge100_camera_v0 name="r_forearm_cam" image_format="R8G8B8" camera_name="r_forearm_cam" image_topic_name="image_raw"
+                          camera_info_topic_name="camera_info"
+                          parent="r_forearm_roll_link" hfov="90" focal_length="320.000105"
+                          frame_id="r_forearm_cam_optical_frame" hack_baseline="0"
+                          image_width="640" image_height="480">
+    <origin xyz=".135 0 .044" rpy="${M_PI/2} ${-32.25*M_PI/180} 0" />
+  </xacro:wge100_camera_v0>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/pr2_1.11.4.xml
@@ -0,0 +1,3774 @@
+<?xml version="1.0" ?>
+<!-- =================================================================================== -->
+<!-- |    This document was autogenerated by xacro from src/xacro/test/robots/pr2/pr2.urdf.xacro | -->
+<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
+<!-- =================================================================================== -->
+<robot name="pr2" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#slider" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor">
+  <!--TODO Define and give source-->
+  <!-- ============================   Shoulder   ============================ -->
+  <!-- ============================   Upper Arm   ============================ -->
+  <!-- ============================   Forearm   ============================ -->
+  <!-- DATA SOURCES -->
+  <!-- all link offsets, CG, limits are obtained from Function Engineering spreadsheet 090224_link_data.xls unless stated otherwise -->
+  <!-- all link geometry sizes are obtained from Function provided CAD model unless stated otherwise -->
+  <!-- all simplified collision geometry are hand approximated from CAD model, sometimes from respective bounding boxes -->
+  <!-- This is the 'effective' wheel radius. Wheel radius for uncompressed wheel is 0.079.  mp 20080801 -->
+  <!-- FIXME: what is this offset? -->
+  <gazebo>
+    <plugin filename="libgazebo_ros_controller_manager.so" name="gazebo_ros_controller_manager">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>1000.0</updateRate>
+    </plugin>
+    <plugin filename="libgazebo_ros_power_monitor.so" name="gazebo_ros_power_monitor_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>1.0</updateRate>
+      <timeout>5</timeout>
+      <powerStateTopic>power_state</powerStateTopic>
+      <powerStateRate>10.0</powerStateRate>
+      <fullChargeCapacity>87.78</fullChargeCapacity>
+      <dischargeRate>-474</dischargeRate>
+      <chargeRate>525</chargeRate>
+      <dischargeVoltage>15.52</dischargeVoltage>
+      <chargeVoltage>16.41</chargeVoltage>
+    </plugin>
+  </gazebo>
+  <material name="Blue">
+    <color rgba="0.0 0.0 0.8 1.0"/>
+  </material>
+  <material name="Green">
+    <color rgba="0.0 0.8 0.0 1.0"/>
+  </material>
+  <material name="Grey">
+    <color rgba="0.7 0.7 0.7 1.0"/>
+  </material>
+  <material name="Grey2">
+    <color rgba="0.9 0.9 0.9 1.0"/>
+  </material>
+  <material name="Red">
+    <color rgba="0.8 0.0 0.0 1.0"/>
+  </material>
+  <material name="White">
+    <color rgba="1.0 1.0 1.0 1.0"/>
+  </material>
+  <material name="Black">
+    <color rgba="0.1 0.1 0.1 1.0"/>
+  </material>
+  <material name="LightGrey">
+    <color rgba="0.6 0.6 0.6 1.0"/>
+  </material>
+  <material name="Caster">
+    <texture filename="package://pr2_description/materials/textures/pr2_caster_texture.png"/>
+  </material>
+  <material name="Wheel_l">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_left.png"/>
+  </material>
+  <material name="Wheel_r">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_right.png"/>
+  </material>
+  <material name="RollLinks">
+    <texture filename="package://pr2_description/materials/textures/pr2_wheel_left.png"/>
+  </material>
+  <!-- Now we can start using the macros included above to define the actual PR2 -->
+  <link name="base_link">
+    <inertial>
+      <mass value="116.0"/>
+      <origin xyz="-0.061 0.0 0.1465"/>
+      <inertia ixx="5.652232699207" ixy="-0.009719934438" ixz="1.293988226423" iyy="5.669473158652" iyz="-0.007379583694" izz="3.683196351726"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/base.dae"/>
+      </geometry>
+      <material name="White"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/base_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
+         navigation stack dedpends on this frame -->
+  <link name="base_footprint">
+    <inertial>
+      <mass value="1.0"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.01 0.01 0.01"/>
+      </geometry>
+      <material name="White"/>
+    </visual>
+    <collision>
+      <!-- represent base collision with a simple rectangular model, positioned by base_size_z s.t. top
+             surface of the collision box matches the top surface of the PR2 base -->
+      <origin rpy="0 0 0" xyz="0 0 0.071"/>
+      <geometry>
+        <box size="0.001 0.001 0.001"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="base_footprint_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0.051"/>
+    <child link="base_link"/>
+    <parent link="base_footprint"/>
+  </joint>
+  <!-- visualize bellow -->
+  <link name="base_bellow_link">
+    <inertial>
+      <mass value="1.0"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.05 0.37 0.3"/>
+      </geometry>
+      <material name="Black"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.05 0.37 0.3"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="base_bellow_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="-0.29 0 0.8"/>
+    <parent link="base_link"/>
+    <child link="base_bellow_link"/>
+  </joint>
+  <joint name="base_laser_joint" type="fixed">
+    <axis xyz="0 1 0"/>
+    <origin rpy="0 0 0" xyz="0.275 0.0 0.252"/>
+    <parent link="base_link"/>
+    <child link="base_laser_link"/>
+  </joint>
+  <link name="base_laser_link" type="laser">
+    <inertial>
+      <mass value="0.001"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
+    </inertial>
+  </link>
+  <gazebo reference="base_laser_link">
+    <sensor name="base_laser" type="ray">
+      <always_on>true</always_on>
+      <update_rate>20</update_rate>
+      <pose>0 0 0 0 0 0</pose>
+      <visualize>false</visualize>
+      <ray>
+        <scan>
+          <horizontal>
+            <samples>640</samples>
+            <resolution>1</resolution>
+            <min_angle>-2.2689</min_angle>
+            <max_angle>2.2689</max_angle>
+          </horizontal>
+        </scan>
+        <range>
+          <min>0.08</min>
+          <max>10.0</max>
+          <resolution>0.01</resolution>
+        </range>
+      </ray>
+      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_base_laser_controller">
+        <gaussianNoise>0.005</gaussianNoise>
+        <alwaysOn>true</alwaysOn>
+        <updateRate>20</updateRate>
+        <topicName>base_scan</topicName>
+        <frameName>base_laser_link</frameName>
+        <hokuyoMinIntensity>101</hokuyoMinIntensity>
+      </plugin>
+    </sensor>
+  </gazebo>
+  <joint name="fl_caster_rotation_joint" type="continuous">
+    <axis xyz="0 0 1"/>
+    <limit effort="6.5" velocity="10"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="10"/>
+    <calibration rising="-0.785398163397"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0.2246 0.2246 0.0282"/>
+    <parent link="base_link"/>
+    <child link="fl_caster_rotation_link"/>
+  </joint>
+  <link name="fl_caster_rotation_link">
+    <inertial>
+      <mass value="3.473082"/>
+      <origin xyz="0 0 0.07"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster.stl"/>
+      </geometry>
+      <material name="Caster"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="fl_caster_rotation_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fl_caster_rotation_motor"/>
+    <joint name="fl_caster_rotation_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="fl_caster_l_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 0.049 0"/>
+    <parent link="fl_caster_rotation_link"/>
+    <child link="fl_caster_l_wheel_link"/>
+  </joint>
+  <link name="fl_caster_l_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_l"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="fl_caster_l_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="fl_caster_l_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fl_caster_l_wheel_motor"/>
+    <joint name="fl_caster_l_wheel_joint"/>
+    <mechanicalReduction>79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="fl_caster_r_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 -0.049 0"/>
+    <parent link="fl_caster_rotation_link"/>
+    <child link="fl_caster_r_wheel_link"/>
+  </joint>
+  <link name="fl_caster_r_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_r"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="fl_caster_r_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="fl_caster_r_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fl_caster_r_wheel_motor"/>
+    <joint name="fl_caster_r_wheel_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <gazebo reference="fl_caster_rotation_link">
+    <material value="PR2/caster_texture"/>
+  </gazebo>
+  <joint name="fr_caster_rotation_joint" type="continuous">
+    <axis xyz="0 0 1"/>
+    <limit effort="6.5" velocity="10"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="10"/>
+    <calibration rising="-0.785398163397"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0.2246 -0.2246 0.0282"/>
+    <parent link="base_link"/>
+    <child link="fr_caster_rotation_link"/>
+  </joint>
+  <link name="fr_caster_rotation_link">
+    <inertial>
+      <mass value="3.473082"/>
+      <origin xyz="0 0 0.07"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster.stl"/>
+      </geometry>
+      <material name="Caster"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="fr_caster_rotation_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fr_caster_rotation_motor"/>
+    <joint name="fr_caster_rotation_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="fr_caster_l_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 0.049 0"/>
+    <parent link="fr_caster_rotation_link"/>
+    <child link="fr_caster_l_wheel_link"/>
+  </joint>
+  <link name="fr_caster_l_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_l"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="fr_caster_l_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="fr_caster_l_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fr_caster_l_wheel_motor"/>
+    <joint name="fr_caster_l_wheel_joint"/>
+    <mechanicalReduction>79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="fr_caster_r_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 -0.049 0"/>
+    <parent link="fr_caster_rotation_link"/>
+    <child link="fr_caster_r_wheel_link"/>
+  </joint>
+  <link name="fr_caster_r_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_r"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="fr_caster_r_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="fr_caster_r_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="fr_caster_r_wheel_motor"/>
+    <joint name="fr_caster_r_wheel_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <gazebo reference="fr_caster_rotation_link">
+    <material value="PR2/caster_texture"/>
+  </gazebo>
+  <joint name="bl_caster_rotation_joint" type="continuous">
+    <axis xyz="0 0 1"/>
+    <limit effort="6.5" velocity="10"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="10"/>
+    <calibration rising="2.35619449019"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="-0.2246 0.2246 0.0282"/>
+    <parent link="base_link"/>
+    <child link="bl_caster_rotation_link"/>
+  </joint>
+  <link name="bl_caster_rotation_link">
+    <inertial>
+      <mass value="3.473082"/>
+      <origin xyz="0 0 0.07"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster.stl"/>
+      </geometry>
+      <material name="Caster"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="bl_caster_rotation_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="bl_caster_rotation_motor"/>
+    <joint name="bl_caster_rotation_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="bl_caster_l_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 0.049 0"/>
+    <parent link="bl_caster_rotation_link"/>
+    <child link="bl_caster_l_wheel_link"/>
+  </joint>
+  <link name="bl_caster_l_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_l"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="bl_caster_l_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="bl_caster_l_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="bl_caster_l_wheel_motor"/>
+    <joint name="bl_caster_l_wheel_joint"/>
+    <mechanicalReduction>79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="bl_caster_r_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 -0.049 0"/>
+    <parent link="bl_caster_rotation_link"/>
+    <child link="bl_caster_r_wheel_link"/>
+  </joint>
+  <link name="bl_caster_r_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_r"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="bl_caster_r_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="bl_caster_r_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="bl_caster_r_wheel_motor"/>
+    <joint name="bl_caster_r_wheel_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <gazebo reference="bl_caster_rotation_link">
+    <material value="PR2/caster_texture"/>
+  </gazebo>
+  <joint name="br_caster_rotation_joint" type="continuous">
+    <axis xyz="0 0 1"/>
+    <limit effort="6.5" velocity="10"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="10"/>
+    <calibration rising="2.35619449019"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="-0.2246 -0.2246 0.0282"/>
+    <parent link="base_link"/>
+    <child link="br_caster_rotation_link"/>
+  </joint>
+  <link name="br_caster_rotation_link">
+    <inertial>
+      <mass value="3.473082"/>
+      <origin xyz="0 0 0.07"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster.stl"/>
+      </geometry>
+      <material name="Caster"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/caster_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="br_caster_rotation_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="br_caster_rotation_motor"/>
+    <joint name="br_caster_rotation_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="br_caster_l_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 0.049 0"/>
+    <parent link="br_caster_rotation_link"/>
+    <child link="br_caster_l_wheel_link"/>
+  </joint>
+  <link name="br_caster_l_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_l"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="br_caster_l_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="br_caster_l_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="br_caster_l_wheel_motor"/>
+    <joint name="br_caster_l_wheel_joint"/>
+    <mechanicalReduction>79.2380952381</mechanicalReduction>
+  </transmission>
+  <joint name="br_caster_r_wheel_joint" type="continuous">
+    <axis xyz="0 1 0"/>
+    <limit effort="7" velocity="15"/>
+    <!-- alpha tested effort and velocity limits -->
+    <safety_controller k_velocity="10"/>
+    <dynamics damping="1.0" friction="0.0"/>
+    <origin rpy="0 0 0" xyz="0 -0.049 0"/>
+    <parent link="br_caster_rotation_link"/>
+    <child link="br_caster_r_wheel_link"/>
+  </joint>
+  <link name="br_caster_r_wheel_link">
+    <inertial>
+      <mass value="0.44036"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/base_v0/wheel.dae"/>
+      </geometry>
+      <material name="Wheel_r"/>
+    </visual>
+    <collision>
+      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
+      <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
+      <geometry>
+        <cylinder length="0.034" radius="0.074792"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="br_caster_r_wheel_link">
+    <mu1 value="100.0"/>
+    <mu2 value="100.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+    <maxVel value="100.0"/>
+    <minDepth value="0.0"/>
+  </gazebo>
+  <transmission name="br_caster_r_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="br_caster_r_wheel_motor"/>
+    <joint name="br_caster_r_wheel_joint"/>
+    <mechanicalReduction>-79.2380952381</mechanicalReduction>
+  </transmission>
+  <gazebo reference="br_caster_rotation_link">
+    <material value="PR2/caster_texture"/>
+  </gazebo>
+  <gazebo reference="base_link">
+    <selfCollide>false</selfCollide>
+    <sensor name="base_contact_sensor" type="contact">
+      <always_on>true</always_on>
+      <update_rate>100.0</update_rate>
+      <contact>
+        <collision>base_link_geom</collision>
+      </contact>
+      <plugin filename="libgazebo_ros_bumper.so" name="base_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>base_bumper</bumperTopicName>
+        <frameName>world</frameName>
+      </plugin>
+    </sensor>
+  </gazebo>
+  <gazebo reference="base_bellow_link">
+    <material value="PR2/Black"/>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>base_link</bodyName>
+      <topicName>base_pose_ground_truth</topicName>
+      <gaussianNoise>0.01</gaussianNoise>
+      <frameName>map</frameName>
+      <xyzOffsets>0 0 0</xyzOffsets>
+      <rpyOffsets>0 0 0</rpyOffsets>
+    </plugin>
+  </gazebo>
+  <joint name="torso_lift_joint" type="prismatic">
+    <axis xyz="0 0 1"/>
+    <limit effort="10000" lower="0.0" upper="0.33" velocity="0.013"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="2000000" soft_lower_limit="0.0115" soft_upper_limit="0.325"/>
+    <calibration falling="0.00475"/>
+    <dynamics damping="20000.0"/>
+    <origin rpy="0 0 0" xyz="-0.05 0 0.739675"/>
+    <parent link="base_link"/>
+    <child link="torso_lift_link"/>
+  </joint>
+  <link name="torso_lift_link">
+    <inertial>
+      <mass value="36.248046"/>
+      <origin xyz="-0.1 0 -0.0885"/>
+      <inertia ixx="2.771653750257" ixy="0.004284522609" ixz="-0.160418504506" iyy="2.510019507959" iyz="0.029664468704" izz="0.526432355569"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/torso_v0/torso_lift.dae"/>
+      </geometry>
+      <material name="Grey2"/>
+    </visual>
+    <collision name="torso_lift_collision">
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/torso_v0/torso_lift_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="l_torso_lift_side_plate_joint" type="fixed">
+    <origin xyz="0.0535 0.209285 0.176625"/>
+    <!-- location of bottom front bolt hole location -->
+    <parent link="torso_lift_link"/>
+    <child link="l_torso_lift_side_plate_link"/>
+  </joint>
+  <link name="l_torso_lift_side_plate_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin xyz="-0.0625 0.0 0.05"/>
+      <!-- center of the 12.5cm by 10cm bolt hole pattern -->
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="r_torso_lift_side_plate_joint" type="fixed">
+    <origin xyz="0.0535  -0.209285 0.176625"/>
+    <!-- location of bottom front bolt hole location -->
+    <parent link="torso_lift_link"/>
+    <child link="r_torso_lift_side_plate_link"/>
+  </joint>
+  <link name="r_torso_lift_side_plate_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin xyz="-0.0625 0.0 0.05"/>
+      <!-- center of the 12.5cm by 10cm bolt hole pattern -->
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <!-- actuated motor screw joint -->
+  <link name="torso_lift_motor_screw_link">
+    <inertial>
+      <mass value="1.0"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.5 0.7 0.01" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.5 0.7 0.01" />
+        </geometry>
+      </collision>
+      -->
+  </link>
+  <joint name="torso_lift_motor_screw_joint" type="continuous">
+    <origin xyz="-0.15 0.0 0.7"/>
+    <axis xyz="0 0 1"/>
+    <parent link="base_link"/>
+    <child link="torso_lift_motor_screw_link"/>
+    <dynamics damping="0.0001"/>
+  </joint>
+  <gazebo reference="torso_lift_link">
+    <sensor name="torso_lift_contact_sensor" type="contact">
+      <contact>
+        <collision>torso_lift_link_geom</collision>
+      </contact>
+      <update_rate>100.0</update_rate>
+      <plugin filename="libgazebo_ros_bumper.so" name="torso_lift_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>torso_lift_bumper</bumperTopicName>
+        <frameName>world</frameName>
+      </plugin>
+    </sensor>
+  </gazebo>
+  <gazebo>
+    <joint name="torso_lift_screw_torso_lift_joint" type="screw">
+      <parent>torso_lift_link</parent>
+      <child>torso_lift_motor_screw_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+      </axis>
+      <thread_pitch>3141.6</thread_pitch>
+    </joint>
+  </gazebo>
+  <transmission name="torso_lift_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="torso_lift_motor"/>
+    <joint name="torso_lift_joint"/>
+    <mechanicalReduction>-47641.53</mechanicalReduction>
+    <simulated_actuated_joint name="torso_lift_motor_screw_joint" simulated_reduction="3141.6"/>
+  </transmission>
+  <joint name="imu_joint" type="fixed">
+    <axis xyz="0 1 0"/>
+    <origin rpy="0 3.14159265359 0" xyz="-0.02977 -0.1497 0.164"/>
+    <parent link="torso_lift_link"/>
+    <child link="imu_link"/>
+  </joint>
+  <link name="imu_link">
+    <inertial>
+      <mass value="0.001"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
+    </inertial>
+  </link>
+  <gazebo>
+    <plugin filename="libgazebo_ros_imu.so" name="imu_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>imu_link</bodyName>
+      <topicName>torso_lift_imu/data</topicName>
+      <gaussianNoise>2.89e-08</gaussianNoise>
+      <xyzOffset>0 0 0</xyzOffset>
+      <rpyOffset>0 -180.0 0</rpyOffset>
+      <serviceName>/default_imu</serviceName>
+    </plugin>
+  </gazebo>
+  <joint name="head_pan_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <limit effort="2.645" lower="-3.007" upper="3.007" velocity="6"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="1.5" soft_lower_limit="-2.857" soft_upper_limit="2.857"/>
+    <calibration rising="0.0"/>
+    <dynamics damping="0.5"/>
+    <origin rpy="0.0 0.0 0.0" xyz="-0.01707 0.0 0.38145"/>
+    <parent link="torso_lift_link"/>
+    <child link="head_pan_link"/>
+  </joint>
+  <link name="head_pan_link">
+    <inertial>
+      <mass value="6.339"/>
+      <!-- mass/cog/moi updated per 100505_link_data.xls -->
+      <origin rpy="0 0 0" xyz="0.010907 0.031693 0.090507"/>
+      <inertia ixx="0.032497592" ixy="0.00063604088" ixz="0.0025851534" iyy="0.046545627" iyz="-0.0024534295" izz="0.057652724"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0 " xyz="0 0 0.0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/head_v0/head_pan.dae"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+    <collision>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/head_v0/head_pan_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="head_pan_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="head_pan_motor"/>
+    <joint name="head_pan_joint"/>
+    <mechanicalReduction>6.0</mechanicalReduction>
+  </transmission>
+  <joint name="head_tilt_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <limit effort="18" lower="-0.471238" upper="1.39626" velocity="5"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="3.0" soft_lower_limit="-0.3712" soft_upper_limit="1.29626"/>
+    <calibration falling="0.0"/>
+    <dynamics damping="10.0"/>
+    <origin rpy="0 0 0" xyz="0.068 0 0"/>
+    <parent link="head_pan_link"/>
+    <child link="head_tilt_link"/>
+  </joint>
+  <link name="head_tilt_link">
+    <inertial>
+      <mass value="4.479"/>
+      <!-- mass/cog/moi updated per 100505_link_data.xls -->
+      <origin rpy="0 0 0" xyz="0.001716 -0.019556 0.055002"/>
+      <inertia ixx="0.024223222" ixy="0.00062063507" ixz="-0.000096909696" iyy="0.054723086" iyz="0.00279702400" izz="0.067306377"/>
+    </inertial>
+    <visual>
+      <origin rpy="0.0 0.0 0.0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/head_v0/head_tilt.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="0.0 0.0 0.0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/head_v0/head_tilt_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <transmission name="head_tilt_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="head_tilt_motor"/>
+    <joint name="head_tilt_joint"/>
+    <mechanicalReduction>6.0</mechanicalReduction>
+  </transmission>
+  <!-- Head plate frame -->
+  <joint name="head_plate_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.0232 0 0.0645"/>
+    <parent link="head_tilt_link"/>
+    <child link="head_plate_frame"/>
+  </joint>
+  <link name="head_plate_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.01 0.01 0.01"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.01 0.01 0.01"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="head_plate_frame">
+    <material value="Gazebo/Grey"/>
+  </gazebo>
+  <joint name="sensor_mount_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
+    <parent link="head_plate_frame"/>
+    <child link="sensor_mount_link"/>
+  </joint>
+  <link name="sensor_mount_link">
+    <inertial>
+      <!-- Needs verification with CAD -->
+      <mass value="0.05"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <!-- Should probably get real visuals here at some point -->
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.01 0.01 0.01"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+  </link>
+  <joint name="high_def_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.046457 -0.110 0.054600"/>
+    <parent link="sensor_mount_link"/>
+    <child link="high_def_frame"/>
+  </joint>
+  <link name="high_def_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="high_def_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0.0            0.0         0.0"/>
+    <parent link="high_def_frame"/>
+    <child link="high_def_optical_frame"/>
+  </joint>
+  <link name="high_def_optical_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <gazebo reference="high_def_frame">
+    <sensor name="high_def_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>20.0</update_rate>
+      <camera>
+        <horizontal_fov>0.785398163397</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>2448</width>
+          <height>2050</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_prosilica.so" name="high_def_controller">
+        <updateRate>20.0</updateRate>
+        <cameraName>prosilica</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <pollServiceName>request_image</pollServiceName>
+        <frameName>high_def_optical_frame</frameName>
+        <CxPrime>1224.5</CxPrime>
+        <Cx>1224.5</Cx>
+        <Cy>1025.5</Cy>
+        <focalLength>2954.998083</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Black"/>
+  </gazebo>
+  <!-- Define link to stereo cameras, set origin relative to that -->
+  <joint name="double_stereo_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
+    <parent link="sensor_mount_link"/>
+    <child link="double_stereo_link"/>
+  </joint>
+  <link name="double_stereo_link">
+    <inertial>
+      <!-- Needs verification with CAD -->
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <!-- Should probably get real visuals here at some point -->
+    <visual>
+      <origin rpy="0 0 0" xyz="-0.01 0 0.025"/>
+      <geometry>
+        <box size="0.02 0.12 0.05"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+  </link>
+  <joint name="wide_stereo_frame_joint" type="fixed">
+    <origin rpy="0.0   0.0   0.0" xyz="0.045 0.03 0.0501"/>
+    <parent link="double_stereo_link"/>
+    <child link="wide_stereo_link"/>
+  </joint>
+  <!-- camera link is at center of the optical frame, but in x-forward notation -->
+  <link name="wide_stereo_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
+      <!-- this inertia is made up for now. -->
+    </inertial>
+  </link>
+  <!-- attach optical frame to the camera link -->
+  <joint name="wide_stereo_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <!-- rotate frame from x-forward to z-forward camera coords -->
+    <parent link="wide_stereo_link"/>
+    <child link="wide_stereo_optical_frame"/>
+  </joint>
+  <!-- optical frame for the stereo camera, with z-forward notation, this is the frame stereo camera images users should refer to -->
+  <link name="wide_stereo_optical_frame" type="camera"/>
+  <joint name="wide_stereo_l_stereo_camera_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="wide_stereo_link"/>
+    <child link="wide_stereo_l_stereo_camera_frame"/>
+  </joint>
+  <link name="wide_stereo_l_stereo_camera_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="wide_stereo_l_stereo_camera_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="wide_stereo_l_stereo_camera_frame"/>
+    <child link="wide_stereo_l_stereo_camera_optical_frame"/>
+  </joint>
+  <link name="wide_stereo_l_stereo_camera_optical_frame"/>
+  <gazebo reference="wide_stereo_l_stereo_camera_frame">
+    <sensor name="wide_stereo_l_stereo_camera_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>1.57079632679</horizontal_fov>
+        <image>
+          <format>BAYER_BGGR8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="wide_stereo_l_stereo_camera_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>wide_stereo/left</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>wide_stereo_optical_frame</frameName>
+        <hackBaseline>0</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>320.000105</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+  <joint name="wide_stereo_r_stereo_camera_frame_joint" type="fixed">
+    <origin rpy="0.0 0.0 0.0" xyz="0.0 -0.09 0.0"/>
+    <parent link="wide_stereo_l_stereo_camera_frame"/>
+    <child link="wide_stereo_r_stereo_camera_frame"/>
+  </joint>
+  <link name="wide_stereo_r_stereo_camera_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="wide_stereo_r_stereo_camera_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="wide_stereo_r_stereo_camera_frame"/>
+    <child link="wide_stereo_r_stereo_camera_optical_frame"/>
+  </joint>
+  <link name="wide_stereo_r_stereo_camera_optical_frame"/>
+  <gazebo reference="wide_stereo_r_stereo_camera_frame">
+    <sensor name="wide_stereo_r_stereo_camera_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>1.57079632679</horizontal_fov>
+        <image>
+          <format>BAYER_BGGR8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="wide_stereo_r_stereo_camera_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>wide_stereo/right</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>wide_stereo_optical_frame</frameName>
+        <hackBaseline>0.09</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>320.000105</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+  <gazebo reference="wide_stereo_link">
+    <material value="PR2/Blue"/>
+    <turnGravityOff value="true"/>
+  </gazebo>
+  <gazebo reference="wide_stereo_optical_frame">
+    <material value="Gazebo/White"/>
+    <turnGravityOff value="true"/>
+  </gazebo>
+  <joint name="narrow_stereo_frame_joint" type="fixed">
+    <origin rpy="0.0   0.0   0.0" xyz="0.045 0.06 0.0501"/>
+    <parent link="double_stereo_link"/>
+    <child link="narrow_stereo_link"/>
+  </joint>
+  <!-- camera link is at center of the optical frame, but in x-forward notation -->
+  <link name="narrow_stereo_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
+      <!-- this inertia is made up for now. -->
+    </inertial>
+  </link>
+  <!-- attach optical frame to the camera link -->
+  <joint name="narrow_stereo_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <!-- rotate frame from x-forward to z-forward camera coords -->
+    <parent link="narrow_stereo_link"/>
+    <child link="narrow_stereo_optical_frame"/>
+  </joint>
+  <!-- optical frame for the stereo camera, with z-forward notation, this is the frame stereo camera images users should refer to -->
+  <link name="narrow_stereo_optical_frame" type="camera"/>
+  <joint name="narrow_stereo_l_stereo_camera_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="narrow_stereo_link"/>
+    <child link="narrow_stereo_l_stereo_camera_frame"/>
+  </joint>
+  <link name="narrow_stereo_l_stereo_camera_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="narrow_stereo_l_stereo_camera_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="narrow_stereo_l_stereo_camera_frame"/>
+    <child link="narrow_stereo_l_stereo_camera_optical_frame"/>
+  </joint>
+  <link name="narrow_stereo_l_stereo_camera_optical_frame"/>
+  <gazebo reference="narrow_stereo_l_stereo_camera_frame">
+    <sensor name="narrow_stereo_l_stereo_camera_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>0.785398163397</horizontal_fov>
+        <image>
+          <format>L8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="narrow_stereo_l_stereo_camera_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>narrow_stereo/left</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>narrow_stereo_optical_frame</frameName>
+        <hackBaseline>0</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>772.548518</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+  <joint name="narrow_stereo_r_stereo_camera_frame_joint" type="fixed">
+    <origin rpy="0.0 0.0 0.0" xyz="0.0 -0.09 0.0"/>
+    <parent link="narrow_stereo_l_stereo_camera_frame"/>
+    <child link="narrow_stereo_r_stereo_camera_frame"/>
+  </joint>
+  <link name="narrow_stereo_r_stereo_camera_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="narrow_stereo_r_stereo_camera_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="narrow_stereo_r_stereo_camera_frame"/>
+    <child link="narrow_stereo_r_stereo_camera_optical_frame"/>
+  </joint>
+  <link name="narrow_stereo_r_stereo_camera_optical_frame"/>
+  <gazebo reference="narrow_stereo_r_stereo_camera_frame">
+    <sensor name="narrow_stereo_r_stereo_camera_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>0.785398163397</horizontal_fov>
+        <image>
+          <format>L8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="narrow_stereo_r_stereo_camera_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>narrow_stereo/right</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>narrow_stereo_optical_frame</frameName>
+        <hackBaseline>0.09</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>772.548518</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+  <gazebo reference="narrow_stereo_link">
+    <material value="PR2/Blue"/>
+    <turnGravityOff value="true"/>
+  </gazebo>
+  <gazebo reference="narrow_stereo_optical_frame">
+    <material value="Gazebo/White"/>
+    <turnGravityOff value="true"/>
+  </gazebo>
+  <!-- Define link to stereo cameras, set origin relative to that -->
+  <gazebo reference="double_stereo_double_stereo_link">
+    <material value="PR2/Blue"/>
+  </gazebo>
+  <gazebo reference="sensor_mount_sensor_link">
+    <material value="PR2/Blue"/>
+  </gazebo>
+  <joint name="projector_wg6802418_frame_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0.110 0.0546"/>
+    <parent link="head_plate_frame"/>
+    <child link="projector_wg6802418_frame"/>
+  </joint>
+  <link name="projector_wg6802418_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="projector_wg6802418_child_frame_joint" type="fixed">
+    <origin rpy="0 -1.57079632679 0" xyz="0 0 0"/>
+    <parent link="projector_wg6802418_frame"/>
+    <child link="projector_wg6802418_child_frame"/>
+  </joint>
+  <link name="projector_wg6802418_child_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <gazebo reference="projector_wg6802418_child_frame">
+    <projector name="projector_wg6802418_projector_wg6802418">
+      <pose>0 0 0 0 -1.5707 0</pose>
+      <texture>stereo_projection_pattern_high_res_red.png</texture>
+      <fov>0.959931088597</fov>
+      <near_clip>0.1</near_clip>
+      <far_clip>10</far_clip>
+    </projector>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_projector.so" name="projector_wg6802418_controller">
+      <projector>projector_wg6802418_child_frame/projector_wg6802418_projector_wg6802418</projector>
+      <alwaysOn>true</alwaysOn>
+      <updateRate>15.0</updateRate>
+      <textureName>stereo_projection_pattern_high_res_red.png</textureName>
+      <filterTextureName>stereo_projection_pattern_filter.png</filterTextureName>
+      <textureTopicName>projector_wg6802418_controller/image</textureTopicName>
+      <projectorTopicName>projector_wg6802418_controller/projector</projectorTopicName>
+    </plugin>
+  </gazebo>
+  <!-- stl contains structure + kinect + prosilica combo -->
+  <joint name="head_mount_joint" type="fixed">
+    <!-- <limit lower="0.1" upper="0.1" effort="10000" velocity="100.0"/> -->
+    <!-- <insert_block name="origin" /> -->
+    <origin rpy="0 0 0" xyz="-0.138 0 0.091"/>
+    <parent link="head_plate_frame"/>
+    <child link="head_mount_link"/>
+  </joint>
+  <link name="head_mount_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/sensors/kinect_prosilica_v0/115x100_swept_back--coarse.STL" scale="0.001 0.001 0.001"/>
+      </geometry>
+      <material name="gray">
+        <color rgba="0.5 0.5 0.5 1"/>
+      </material>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- kinect ir sensor physical attachment -->
+  <joint name="head_mount_kinect_ir_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="-0.032267 0.0125 0.136453"/>
+    <parent link="head_mount_link"/>
+    <child link="head_mount_kinect_ir_link"/>
+  </joint>
+  <link name="head_mount_kinect_ir_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- kinect ir sensor frame -->
+  <joint name="head_mount_kinect_ir_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0.0            0.01         0.0"/>
+    <parent link="head_mount_kinect_ir_link"/>
+    <child link="head_mount_kinect_ir_optical_frame"/>
+  </joint>
+  <link name="head_mount_kinect_ir_optical_frame"/>
+  <gazebo reference="head_mount_kinect_ir_link">
+    <sensor name="head_mount_ir_sensor" type="depth">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>0.994837673637</horizontal_fov>
+        <image>
+          <format>L8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_openni_kinect.so" name="head_mount_kinect_ir_link_controller">
+        <baseline>0.2</baseline>
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>head_mount_kinect_ir</cameraName>
+        <imageTopicName>/head_mount_kinect/depth/image_raw</imageTopicName>
+        <cameraInfoTopicName>/head_mount_kinect/depth/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>/head_mount_kinect/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>/head_mount_kinect/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>/head_mount_kinect/depth/points</pointCloudTopicName>
+        <frameName>head_mount_kinect_ir_optical_frame</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red"/>
+  </gazebo>
+  <!-- kinect rgb sensor physical attachment -->
+  <joint name="head_mount_kinect_rgb_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 -0.03 0"/>
+    <parent link="head_mount_kinect_ir_link"/>
+    <child link="head_mount_kinect_rgb_link"/>
+  </joint>
+  <link name="head_mount_kinect_rgb_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- kinect rgb sensor frame -->
+  <joint name="head_mount_kinect_rgb_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0.0            0.0         0.0"/>
+    <parent link="head_mount_kinect_rgb_link"/>
+    <child link="head_mount_kinect_rgb_optical_frame"/>
+  </joint>
+  <link name="head_mount_kinect_rgb_optical_frame"/>
+  <gazebo reference="head_mount_kinect_rgb_link">
+    <sensor name="head_mount_rgb_sensor" type="depth">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>0.994837673637</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_openni_kinect.so" name="head_mount_kinect_rgb_link_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>head_mount_kinect_rgb</cameraName>
+        <imageTopicName>/head_mount_kinect/rgb/image_raw</imageTopicName>
+        <cameraInfoTopicName>/head_mount_kinect/rgb/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>/head_mount_kinect/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>/head_mount_kinect/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>/head_mount_kinect/depth_registered/points</pointCloudTopicName>
+        <frameName>head_mount_kinect_rgb_optical_frame</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red"/>
+  </gazebo>
+  <!-- prosilica sensor physical attachment -->
+  <joint name="head_mount_prosilica_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="-0.046457 0.0125 0.088921"/>
+    <parent link="head_mount_link"/>
+    <child link="head_mount_prosilica_link"/>
+  </joint>
+  <link name="head_mount_prosilica_link">
+    <inertial>
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
+      <geometry>
+        <sphere radius="0.0005"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- prosilica sensor frame -->
+  <joint name="head_mount_prosilica_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0.0            0.0         0.0"/>
+    <parent link="head_mount_prosilica_link"/>
+    <child link="head_mount_prosilica_optical_frame"/>
+  </joint>
+  <link name="head_mount_prosilica_optical_frame"/>
+  <gazebo reference="head_mount_prosilica_link">
+    <sensor name="head_mount_prosilica_link_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>1.12050137978</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>320</width>
+          <height>240</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_prosilica.so" name="head_mount_prosilica_link_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>prosilica_camera_1mb</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <depthImageTopicName>depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
+        <pollServiceName>request_image</pollServiceName>
+        <pointCloudTopicName>points</pointCloudTopicName>
+        <frameName>head_mount_prosilica_optical_frame</frameName>
+        <pointCloudCutoff>0.4</pointCloudCutoff>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <sensor name="head_mount_prosilica_link_sim_pcd_sensor" type="depth">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>1.12050137978</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>320</width>
+          <height>240</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_openni_kinect.so" name="head_mount_prosilica_link_sim_pcd_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>prosilica_camera_1mb_sim_pcd</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <depthImageTopicName>depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <pointCloudTopicName>points</pointCloudTopicName>
+        <frameName>head_mount_prosilica_optical_frame</frameName>
+        <pointCloudCutoff>0.4</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red"/>
+  </gazebo>
+  <joint name="laser_tilt_mount_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <limit effort="0.65" lower="-0.7854" upper="1.48353" velocity="10.0"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="0.05" soft_lower_limit="-0.7354" soft_upper_limit="1.43353"/>
+    <calibration falling="0.0"/>
+    <dynamics damping="0.008"/>
+    <origin rpy="0 0 0" xyz="0.09893 0 0.227"/>
+    <parent link="torso_lift_link"/>
+    <child link="laser_tilt_mount_link"/>
+  </joint>
+  <link name="laser_tilt_mount_link">
+    <inertial>
+      <mass value="0.591"/>
+      <origin rpy="0 0 0" xyz="-0.001136 0.00167 -0.00713"/>
+      <inertia ixx="0.001195273" ixy="0.000023087" ixz="0.000037467" iyy="0.001083956" iyz="0.000034906" izz="0.000795014"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/tilting_laser_v0/tilting_hokuyo.dae"/>
+      </geometry>
+      <material name="Red"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/tilting_laser_v0/tilting_hokuyo_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="laser_tilt_joint" type="fixed">
+    <axis xyz="0 1 0"/>
+    <origin rpy="0 0 0" xyz="0 0 0.03"/>
+    <parent link="laser_tilt_mount_link"/>
+    <child link="laser_tilt_link"/>
+  </joint>
+  <link name="laser_tilt_link" type="laser">
+    <inertial>
+      <mass value="0.001"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
+    </inertial>
+  </link>
+  <gazebo reference="laser_tilt_link">
+    <sensor name="laser_tilt" type="ray">
+      <always_on>true</always_on>
+      <update_rate>40</update_rate>
+      <pose>0 0 0 0 0 0</pose>
+      <visualize>false</visualize>
+      <ray>
+        <scan>
+          <horizontal>
+            <samples>640</samples>
+            <resolution>1</resolution>
+            <min_angle>-1.3962634</min_angle>
+            <max_angle>1.3962634</max_angle>
+          </horizontal>
+        </scan>
+        <range>
+          <min>0.08</min>
+          <max>10.0</max>
+          <resolution>0.01</resolution>
+        </range>
+      </ray>
+      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser_tilt_controller">
+        <gaussianNoise>0.005</gaussianNoise>
+        <alwaysOn>true</alwaysOn>
+        <updateRate>40</updateRate>
+        <topicName>tilt_scan</topicName>
+        <frameName>laser_tilt_link</frameName>
+        <hokuyoMinIntensity>101</hokuyoMinIntensity>
+      </plugin>
+    </sensor>
+  </gazebo>
+  <gazebo reference="laser_tilt_mount_link">
+    </gazebo>
+  <transmission name="laser_tilt_mount_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="laser_tilt_mount_motor"/>
+    <joint name="laser_tilt_mount_joint"/>
+    <mechanicalReduction>-6.05</mechanicalReduction>
+  </transmission>
+  <!-- Shoulder pan -->
+  <joint name="r_shoulder_pan_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <origin rpy="0 0 0" xyz="0.0 -0.188 0.0"/>
+    <!-- transform from parent link to this joint frame -->
+    <parent link="torso_lift_link"/>
+    <child link="r_shoulder_pan_link"/>
+    <limit effort="30" lower="-2.2853981634" upper="0.714601836603" velocity="2.088"/>
+    <!-- alpha tested velocity and effort limits -->
+    <dynamics damping="10.0"/>
+    <safety_controller k_position="100" k_velocity="10" soft_lower_limit="-2.1353981634" soft_upper_limit="0.564601836603"/>
+    <!-- joint angle when the rising or the falling flag is activated on PR2 -->
+    <calibration rising="-0.785398163397"/>
+  </joint>
+  <link name="r_shoulder_pan_link">
+    <inertial>
+      <mass value="25.799322"/>
+      <origin rpy="0 0 0" xyz="-0.001201 0.024513 -0.098231"/>
+      <inertia ixx="0.866179142480" ixy="-0.06086507933" ixz="-0.12118061183" iyy="0.87421714893" iyz="-0.05886609911" izz="0.27353821674"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.dae"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0 0.0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Shoulder lift -->
+  <joint name="r_shoulder_lift_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <!-- Limits updated from Function's CAD values as of 2009_02_24 (link_data.xls) -->
+    <limit effort="30" lower="-0.5236" upper="1.3963" velocity="2.082"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="10" soft_lower_limit="-0.3536" soft_upper_limit="1.2963"/>
+    <calibration falling="0.0"/>
+    <dynamics damping="10.0"/>
+    <origin rpy="0 0 0" xyz="0.1 0 0"/>
+    <parent link="r_shoulder_pan_link"/>
+    <child link="r_shoulder_lift_link"/>
+  </joint>
+  <link name="r_shoulder_lift_link">
+    <inertial>
+      <mass value="2.74988"/>
+      <origin rpy="0 0 0" xyz="0.02195 -0.02664 -0.03127"/>
+      <inertia ixx="0.02105584615" ixy="0.00496704022" ixz="-0.00194808955" iyy="0.02127223737" iyz="0.00110425490" izz="0.01975753814"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="r_upper_arm_roll_joint" type="revolute">
+    <axis xyz="1 0 0"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_shoulder_lift_link"/>
+    <child link="r_upper_arm_roll_link"/>
+    <limit effort="30" lower="-3.9" upper="0.8" velocity="3.27"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="2" soft_lower_limit="-3.75" soft_upper_limit="0.65"/>
+    <calibration rising="-1.57079632679"/>
+    <dynamics damping="0.1"/>
+  </joint>
+  <link name="r_upper_arm_roll_link">
+    <inertial>
+      <!-- dummy mass, to be removed -->
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0.0 0 0"/>
+      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
+    </inertial>
+    <visual>
+      <!-- TODO: This component doesn't actually have a mesh -->
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="r_upper_arm_roll_link">
+    <material value="PR2/RollLinks"/>
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_upper_arm_roll_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <!-- Upperarm roll: internal fixed attchment point for upper arm -->
+  <transmission name="r_upper_arm_roll_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="r_upper_arm_roll_motor"/>
+    <joint name="r_upper_arm_roll_joint"/>
+    <mechanicalReduction>32.6525111499</mechanicalReduction>
+  </transmission>
+  <!-- Shoulder pan -->
+  <gazebo reference="r_shoulder_pan_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_shoulder_pan_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Shoulder lift -->
+  <gazebo reference="r_shoulder_lift_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_shoulder_lift_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Shoulder pan -->
+  <transmission name="r_shoulder_pan_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <joint name="r_shoulder_pan_joint"/>
+    <actuator name="r_shoulder_pan_motor"/>
+    <mechanicalReduction>63.1552452977</mechanicalReduction>
+    <compensator k_belt="4000.0" kd_motor="15.0" lambda_combined="0.0" lambda_joint="40.0" lambda_motor="40.0" mass_motor="0.05"/>
+  </transmission>
+  <!-- Shoulder lift -->
+  <transmission name="r_shoulder_lift_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <joint name="r_shoulder_lift_joint"/>
+    <actuator name="r_shoulder_lift_motor"/>
+    <mechanicalReduction>61.8948225713</mechanicalReduction>
+    <compensator k_belt="4000.0" kd_motor="10.0" lambda_combined="0.0" lambda_joint="60.0" lambda_motor="60.0" mass_motor="0.05"/>
+  </transmission>
+  <joint name="r_upper_arm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_upper_arm_roll_link"/>
+    <child link="r_upper_arm_link"/>
+  </joint>
+  <link name="r_upper_arm_link">
+    <inertial>
+      <!-- NOTE:reflect==-1 for right side, reflect==1 for the left side -->
+      <mass value="6.01769"/>
+      <origin xyz="0.21398 -0.01621 -0.0002"/>
+      <inertia ixx="0.01537748957" ixy="0.00375711247" ixz="-0.00070852914" iyy="0.0747367044" iyz="-0.0001793645" izz="0.07608763307"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="r_upper_arm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <!-- Has upperarm link -->
+  <!-- No transmission, since this a fixed joint w/o actuator -->
+  <!-- forearm_roll_link is a fictitious link internal to elbow_flex_link, provides an attachment point for the actual forearm -->
+  <joint name="r_forearm_roll_joint" type="continuous">
+    <axis xyz="1 0 0"/>
+    <limit effort="30" velocity="3.6"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="1"/>
+    <calibration rising="0.0"/>
+    <dynamics damping="0.1"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_elbow_flex_link"/>
+    <child link="r_forearm_roll_link"/>
+  </joint>
+  <!-- TODO: inertial tag should be optional -->
+  <link name="r_forearm_roll_link">
+    <inertial>
+      <!-- dummy masses, to be removed -->
+      <mass value="0.1"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <!-- TODO: collision tag should be optional -->
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="r_forearm_roll_link">
+    <material value="PR2/RollLinks"/>
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_forearm_roll_joint">
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <transmission name="r_forearm_roll_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="r_forearm_roll_motor"/>
+    <joint name="r_forearm_roll_joint"/>
+    <mechanicalReduction>-90.5142857143</mechanicalReduction>
+  </transmission>
+  <!-- Elbow flex -->
+  <joint name="r_elbow_flex_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <!-- Note: Overtravel limits are 140, -7 degrees instead of 133, 0 -->
+    <limit effort="30" lower="-2.3213" upper="0.00" velocity="3.3"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="3" soft_lower_limit="-2.1213" soft_upper_limit="-0.15"/>
+    <calibration falling="-1.1606"/>
+    <dynamics damping="1.0"/>
+    <origin rpy="0 0 0" xyz="0.4 0 0"/>
+    <parent link="r_upper_arm_link"/>
+    <child link="r_elbow_flex_link"/>
+  </joint>
+  <link name="r_elbow_flex_link">
+    <inertial>
+      <mass value="1.90327"/>
+      <origin xyz="0.01014 0.00032 -0.01211"/>
+      <inertia ixx="0.00346541989" ixy="0.00004066825" ixz="0.00043171614" iyy="0.00441606455" iyz="-0.00003968914" izz="0.00359156824"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- testing initial joint position, to be parsed at urdf2gazebo parse time -->
+  <gazebo reference="r_elbow_flex_joint">
+    <initial_joint_position>-1.0</initial_joint_position>
+  </gazebo>
+  <gazebo reference="r_elbow_flex_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_elbow_flex_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Elbow flex -->
+  <transmission name="r_elbow_flex_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="r_elbow_flex_motor"/>
+    <joint name="r_elbow_flex_joint"/>
+    <mechanicalReduction>-36.167452007</mechanicalReduction>
+  </transmission>
+  <joint name="r_forearm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <!-- transform from parent link to this joint frame -->
+    <parent link="r_forearm_roll_link"/>
+    <child link="r_forearm_link"/>
+  </joint>
+  <link name="r_forearm_link">
+    <inertial>
+      <mass value="2.57968"/>
+      <origin xyz="0.18791 -0.00017 -0.00912"/>
+      <inertia ixx="0.00364857222" ixy="0.00005215877" ixz="0.00071534842" iyy="0.01507736897" iyz="-0.00001310770" izz="0.01659310749"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Wrist flex -->
+  <joint name="r_wrist_flex_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <limit effort="10" lower="-2.18" upper="0.0" velocity="3.078"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="20" k_velocity="4" soft_lower_limit="-2.0" soft_upper_limit="-0.1"/>
+    <dynamics damping="0.1"/>
+    <calibration falling="-0.5410521"/>
+    <origin rpy="0 0 0" xyz="0.321 0 0"/>
+    <parent link="r_forearm_link"/>
+    <child link="r_wrist_flex_link"/>
+  </joint>
+  <link name="r_wrist_flex_link">
+    <inertial>
+      <mass value="0.61402"/>
+      <origin xyz="-0.00157 0.0 -0.00075"/>
+      <inertia ixx="0.00065165722" ixy="0.00000028864" ixz="0.00000303477" iyy="0.00019824443" iyz="-0.00000022645" izz="0.00064450498"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Wrist roll -->
+  <joint name="r_wrist_roll_joint" type="continuous">
+    <axis xyz="1 0 0"/>
+    <limit effort="10" velocity="3.6"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="2"/>
+    <dynamics damping="0.1"/>
+    <calibration rising="-1.57079632679"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_wrist_flex_link"/>
+    <child link="r_wrist_roll_link"/>
+  </joint>
+  <link name="r_wrist_roll_link">
+    <inertial>
+      <!-- dummy masses, to be removed.  wrist roll masses are on "gripper_palm" -->
+      <mass value="0.1"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="r_forearm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <!-- Wrist flex -->
+  <gazebo reference="r_wrist_flex_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="r_wrist_flex_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Wrist roll -->
+  <gazebo reference="r_wrist_roll_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/RollLinks"/>
+  </gazebo>
+  <gazebo reference="r_wrist_roll_joint">
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <!-- Wrist flex , Wrist roll -->
+  <transmission name="r_wrist_trans" type="pr2_mechanism_model/WristTransmission">
+    <rightActuator mechanicalReduction="60.1714285714" name="r_wrist_r_motor"/>
+    <leftActuator mechanicalReduction="60.1714285714" name="r_wrist_l_motor"/>
+    <flexJoint mechanicalReduction="-1.0" name="r_wrist_flex_joint"/>
+    <rollJoint mechanicalReduction="1.0" name="r_wrist_roll_joint"/>
+  </transmission>
+  <joint name="r_gripper_palm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_wrist_roll_link"/>
+    <child link="r_gripper_palm_link"/>
+  </joint>
+  <link name="r_gripper_palm_link">
+    <inertial>
+      <mass value="0.58007"/>
+      <origin rpy="0 0 0" xyz="0.06623 0.00053 -0.00119"/>
+      <inertia ixx="0.00035223921" ixy="-0.00001580476" ixz="-0.00000091750" iyy="0.00067741312" iyz="-0.00000059554" izz="0.00086563316"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.dae"/>
+      </geometry>
+      <material name="Red"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="r_gripper_led_joint" type="fixed">
+    <!--  Need to check if we need a positive or negative Z term -->
+    <origin xyz="0.0513 0.0 .0244"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_led_frame"/>
+  </joint>
+  <link name="r_gripper_led_frame"/>
+  <joint name="r_gripper_motor_accelerometer_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_motor_accelerometer_link"/>
+  </joint>
+  <link name="r_gripper_motor_accelerometer_link">
+    <inertial>
+      <mass value="0.001"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.001 0.001 0.001"/>
+      </geometry>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.001 0.001 0.001"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="r_gripper_tool_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.18 0 0"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_tool_frame"/>
+  </joint>
+  <link name="r_gripper_tool_frame"/>
+  <!-- actuated motor screw joint -->
+  <link name="r_gripper_motor_slider_link">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </collision>
+      -->
+  </link>
+  <joint name="r_gripper_motor_slider_joint" type="prismatic">
+    <origin rpy="0 0 0" xyz="0.16828 0 0"/>
+    <axis xyz="1 0 0"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_motor_slider_link"/>
+    <limit effort="1000.0" lower="-0.1" upper="0.1" velocity="0.2"/>
+  </joint>
+  <link name="r_gripper_motor_screw_link">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
+    </inertial>
+    <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </collision>
+      -->
+  </link>
+  <joint name="r_gripper_motor_screw_joint" type="continuous">
+    <origin rpy="0 0 0" xyz="0.0 0 0"/>
+    <axis xyz="0 1 0"/>
+    <parent link="r_gripper_motor_slider_link"/>
+    <child link="r_gripper_motor_screw_link"/>
+    <dynamics damping="0.0001"/>
+  </joint>
+  <!-- Finger proximal digit -->
+  <joint name="r_gripper_l_finger_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.02"/>
+    <origin rpy="0 0 0" xyz="0.07691 0.01 0"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_l_finger_link"/>
+  </joint>
+  <link name="r_gripper_l_finger_link">
+    <inertial>
+      <mass value="0.17126"/>
+      <origin rpy="0 0 0" xyz="0.03598 0.01730 -0.00164"/>
+      <inertia ixx="0.00007756198" ixy="0.00000149095" ixz="-0.00000983385" iyy="0.00019708305" iyz="-0.00000306125" izz="0.00018105446"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger proximal digit -->
+  <joint name="r_gripper_r_finger_joint" type="revolute">
+    <axis xyz="0 0 -1"/>
+    <origin rpy="0 0 0" xyz="0.07691 -0.01 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.02"/>
+    <mimic joint="r_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="r_gripper_palm_link"/>
+    <child link="r_gripper_r_finger_link"/>
+  </joint>
+  <link name="r_gripper_r_finger_link">
+    <inertial>
+      <mass value="0.17389"/>
+      <origin rpy="0 0 0" xyz="0.03576 -0.01736 -0.00095"/>
+      <inertia ixx="0.00007738410" ixy="-0.00000209309" ixz="-0.00000836228" iyy="0.00019847383" iyz="0.00000246110" izz="0.00018106988"/>
+    </inertial>
+    <visual>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger tip -->
+  <joint name="r_gripper_l_finger_tip_joint" type="revolute">
+    <axis xyz="0 0 -1"/>
+    <origin rpy="0 0 0" xyz="0.09137 0.00495 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.001"/>
+    <mimic joint="r_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="r_gripper_l_finger_link"/>
+    <child link="r_gripper_l_finger_tip_link"/>
+  </joint>
+  <link name="r_gripper_l_finger_tip_link">
+    <inertial>
+      <mass value="0.04419"/>
+      <origin rpy="0 0 0" xyz="0.00423 0.00284 0.0"/>
+      <inertia ixx="0.00000837047" ixy="0.00000583632" ixz="0.0" iyy="0.00000987067" iyz="0.0" izz="0.00001541768"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger tip -->
+  <joint name="r_gripper_r_finger_tip_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <origin rpy="0 0 0" xyz="0.09137 -0.00495 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.001"/>
+    <mimic joint="r_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="r_gripper_r_finger_link"/>
+    <child link="r_gripper_r_finger_tip_link"/>
+  </joint>
+  <link name="r_gripper_r_finger_tip_link">
+    <inertial>
+      <mass value="0.04419"/>
+      <origin rpy="0 0 0" xyz="0.00423 -0.00284 0.0"/>
+      <inertia ixx="0.00000837047" ixy="-0.00000583632" ixz="0.0" iyy="0.00000987067" iyz="0.0" izz="0.00001541768"/>
+    </inertial>
+    <visual>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger proximal digit -->
+  <gazebo reference="r_gripper_l_finger_link">
+    <turnGravityOff>true</turnGravityOff>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="r_gripper_l_finger_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger proximal digit -->
+  <gazebo reference="r_gripper_r_finger_link">
+    <turnGravityOff>true</turnGravityOff>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="r_gripper_r_finger_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger tip -->
+  <gazebo reference="r_gripper_l_finger_tip_link">
+    <turnGravityOff>true</turnGravityOff>
+    <selfCollide>false</selfCollide>
+    <sensor name="r_gripper_l_finger_tip_contact_sensor" type="contact">
+      <update_rate>100.0</update_rate>
+      <contact>
+        <collision>r_gripper_l_finger_tip_link_geom</collision>
+      </contact>
+      <plugin filename="libgazebo_ros_bumper.so" name="r_gripper_l_finger_tip_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <frameName>r_gripper_l_finger_tip_link</frameName>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>r_gripper_l_finger_tip_bumper</bumperTopicName>
+      </plugin>
+    </sensor>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="10000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="r_gripper_l_finger_tip_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger tip -->
+  <gazebo reference="r_gripper_r_finger_tip_link">
+    <turnGravityOff>true</turnGravityOff>
+    <selfCollide>false</selfCollide>
+    <sensor name="r_gripper_r_finger_tip_contact_sensor" type="contact">
+      <update_rate>100.0</update_rate>
+      <contact>
+        <collision>r_gripper_r_finger_tip_link_geom</collision>
+      </contact>
+      <plugin filename="libgazebo_ros_bumper.so" name="r_gripper_r_finger_tip_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <frameName>r_gripper_r_finger_tip_link</frameName>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>r_gripper_r_finger_tip_bumper</bumperTopicName>
+      </plugin>
+    </sensor>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="10000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_p3d.so" name="p3d_r_gripper_l_finger_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>r_gripper_l_finger_link</bodyName>
+      <topicName>r_gripper_l_finger_pose_ground_truth</topicName>
+      <gaussianNoise>0.0</gaussianNoise>
+      <frameName>base_link</frameName>
+    </plugin>
+    <plugin filename="libgazebo_ros_f3d.so" name="f3d_r_gripper_l_finger_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>r_gripper_l_finger_link</bodyName>
+      <topicName>r_gripper_l_finger_force_ground_truth</topicName>
+    </plugin>
+  </gazebo>
+  <gazebo reference="r_gripper_r_finger_tip_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- parallel link for simulating gripper constraints -->
+  <gazebo>
+    <link name="r_gripper_l_parallel_link">
+      <inertial>
+        <mass>0.17126</mass>
+        <inertia>
+          <ixx>7.7562e-05</ixx>
+          <ixy>1.49095e-06</ixy>
+          <ixz>-9.83385e-06</ixz>
+          <iyy>0.000197083</iyy>
+          <iyz>-3.06125e-06</iyz>
+          <izz>0.000181054</izz>
+        </inertia>
+        <pose>0.03598 0.0173 -0.00164 0 0 0</pose>
+      </inertial>
+      <pose>0.82991 -0.157 0.790675 0 -0 0</pose>
+      <gravity>false</gravity>
+    </link>
+    <link name="r_gripper_r_parallel_link">
+      <inertial>
+        <mass>0.17389</mass>
+        <inertia>
+          <ixx>7.73841e-05</ixx>
+          <ixy>-2.09309e-06</ixy>
+          <ixz>-8.36228e-06</ixz>
+          <iyy>0.000198474</iyy>
+          <iyz>2.4611e-06</iyz>
+          <izz>0.00018107</izz>
+        </inertia>
+        <pose>0.03576 -0.01736 -0.00095 0 0 0</pose>
+      </inertial>
+      <pose>0.82991 -0.219 0.790675 0 0 0</pose>
+      <gravity>false</gravity>
+    </link>
+  </gazebo>
+  <gazebo>
+    <joint name="r_gripper_r_screw_screw_joint" type="screw">
+      <child>r_gripper_motor_screw_link</child>
+      <parent>r_gripper_r_finger_tip_link</parent>
+      <thread_pitch>-3141.6</thread_pitch>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+    <joint name="r_gripper_l_screw_screw_joint" type="screw">
+      <parent>r_gripper_l_finger_tip_link</parent>
+      <child>r_gripper_motor_screw_link</child>
+      <thread_pitch>3141.6</thread_pitch>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+  </gazebo>
+  <gazebo>
+    <joint name="r_gripper_r_parallel_root_joint" type="revolute">
+      <parent>r_gripper_r_parallel_link</parent>
+      <child>r_gripper_palm_link</child>
+      <axis>
+        <xyz>0 0 -1</xyz>
+        <dynamics>
+          <damping>0.2</damping>
+        </dynamics>
+      </axis>
+      <pose>0.05891 -0.031 0 0 0 0</pose>
+    </joint>
+    <joint name="r_gripper_l_parallel_root_joint" type="revolute">
+      <parent>r_gripper_l_parallel_link</parent>
+      <child>r_gripper_palm_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+        <dynamics>
+          <damping>0.2</damping>
+        </dynamics>
+      </axis>
+      <pose>0.05891 0.031 0 0 0 0</pose>
+    </joint>
+    <joint name="r_gripper_r_parallel_tip_joint" type="revolute">
+      <parent>r_gripper_r_parallel_link</parent>
+      <child>r_gripper_r_finger_tip_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+      </axis>
+      <pose>-0.018 -0.021 0 0 0 0</pose>
+    </joint>
+    <joint name="r_gripper_l_parallel_tip_joint" type="revolute">
+      <parent>r_gripper_l_parallel_link</parent>
+      <child>r_gripper_l_finger_tip_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+      </axis>
+      <pose>-0.018 0.021 0 0 0 0</pose>
+    </joint>
+    <joint name="r_gripper_joint" type="prismatic">
+      <parent>r_gripper_r_finger_tip_link</parent>
+      <child>r_gripper_l_finger_tip_link</child>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+  </gazebo>
+  <gazebo reference="r_gripper_motor_slider_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="r_gripper_motor_screw_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="r_gripper_l_parallel_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="r_gripper_r_parallel_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <!-- fictitous joint that represents the gripper gap -->
+  <!-- effort is the linear force at the gripper gap
+         velocity limit is the linear velocity limit at the gripper gap
+         try and introduce a very stiff spring
+         The velocity limits are alpha tested.
+         The effort limits are somewhat inflated.
+         k_velocity was recently raised from 500.0 to 5000.0.  Tested on beta
+    -->
+  <joint name="r_gripper_joint" type="prismatic">
+    <parent link="r_gripper_r_finger_tip_link"/>
+    <child link="r_gripper_l_finger_tip_frame"/>
+    <axis xyz="0 1 0"/>
+    <dynamics damping="10.0"/>
+    <limit effort="1000.0" lower="0.0" upper="0.09" velocity="0.2"/>
+    <safety_controller k_position="20.0" k_velocity="5000.0" soft_lower_limit="-0.01" soft_upper_limit="0.088"/>
+  </joint>
+  <!-- This link is the same as the l_finger_tip_link,
+	 but because the urdf does not support graph structures,
+	 this link exists twice -->
+  <link name="r_gripper_l_finger_tip_frame"/>
+  <gazebo reference="r_gripper_palm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_p3d.so" name="p3d_r_gripper_palm_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>r_gripper_palm_link</bodyName>
+      <topicName>r_gripper_palm_pose_ground_truth</topicName>
+      <xyzOffsets>0 0 0</xyzOffsets>
+      <rpyOffsets>0 0 0</rpyOffsets>
+      <gaussianNoise>0.0</gaussianNoise>
+      <frameName>map</frameName>
+    </plugin>
+    <!-- a formal implementation of grasp hack in gazebo with fixed joint -->
+    <gripper name="r_grasp_hack">
+      <grasp_check>
+        <attach_steps>20</attach_steps>
+        <detach_steps>40</detach_steps>
+        <min_contact_count>2</min_contact_count>
+      </grasp_check>
+      <gripper_link>r_gripper_r_finger_tip_link</gripper_link>
+      <gripper_link>r_gripper_l_finger_tip_link</gripper_link>
+      <palm_link>r_gripper_palm_link</palm_link>
+    </gripper>
+  </gazebo>
+  <!-- [lr]_gripper_joint is a fictitious joint, used by transmission for controller gap   -->
+  <!-- [lr]_gripper_joint is not attached to any link                                      -->
+  <!-- [lr]_gripper_joint position is the gap_size                                         -->
+  <!-- [lr]_gripper_joint velocity is the gap linear velocity                              -->
+  <!-- [lr]_gripper_joint effort   is the gap linear force                                 -->
+  <!-- Please refer to function engineering spreadsheet 090224_link_data.xls for           -->
+  <!-- the transmission function.                                                          -->
+  <!-- Please refer to mechanism_model/src/pr2_gripper_transmission.cpp for implementation.-->
+  <!-- gazebo_mimic_pid is for sim only.                                                   -->
+  <transmission name="r_gripper_trans" type="pr2_mechanism_model/PR2GripperTransmission">
+    <actuator name="r_gripper_motor"/>
+    <gap_joint L0="0.0375528" a="0.0683698" b="0.0433849" gear_ratio="40.095" h="0.0" mechanical_reduction="1.0" name="r_gripper_joint" phi0="0.518518122146" r="0.0915" screw_reduction="0.004" t0="-0.0001914" theta0="0.0628824676201"/>
+    <!-- if a gazebo joint exists as [l|r]_gripper_joint, use this tag to have
+           gripper transmission apply torque directly to prismatic joint
+           this should be the default behavior in diamondback, deprecating this flag -->
+    <use_simulated_gripper_joint/>
+    <!-- set passive joint angles so things look nice in rviz -->
+    <passive_joint name="r_gripper_l_finger_joint"/>
+    <passive_joint name="r_gripper_r_finger_joint"/>
+    <passive_joint name="r_gripper_r_finger_tip_joint"/>
+    <passive_joint name="r_gripper_l_finger_tip_joint"/>
+    <!-- screw joint to capture gripper "dynamics" -->
+    <simulated_actuated_joint name="r_gripper_motor_screw_joint" passive_actuated_joint="r_gripper_motor_slider_joint" simulated_reduction="3141.6"/>
+  </transmission>
+  <!-- Shoulder pan -->
+  <joint name="l_shoulder_pan_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <origin rpy="0 0 0" xyz="0.0 0.188 0.0"/>
+    <!-- transform from parent link to this joint frame -->
+    <parent link="torso_lift_link"/>
+    <child link="l_shoulder_pan_link"/>
+    <limit effort="30" lower="-0.714601836603" upper="2.2853981634" velocity="2.088"/>
+    <!-- alpha tested velocity and effort limits -->
+    <dynamics damping="10.0"/>
+    <safety_controller k_position="100" k_velocity="10" soft_lower_limit="-0.564601836603" soft_upper_limit="2.1353981634"/>
+    <!-- joint angle when the rising or the falling flag is activated on PR2 -->
+    <calibration rising="0.785398163397"/>
+  </joint>
+  <link name="l_shoulder_pan_link">
+    <inertial>
+      <mass value="25.799322"/>
+      <origin rpy="0 0 0" xyz="-0.001201 0.024513 -0.098231"/>
+      <inertia ixx="0.866179142480" ixy="-0.06086507933" ixz="-0.12118061183" iyy="0.87421714893" iyz="-0.05886609911" izz="0.27353821674"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.dae"/>
+      </geometry>
+      <material name="Blue"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0.0 0 0.0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Shoulder lift -->
+  <joint name="l_shoulder_lift_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <!-- Limits updated from Function's CAD values as of 2009_02_24 (link_data.xls) -->
+    <limit effort="30" lower="-0.5236" upper="1.3963" velocity="2.082"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="10" soft_lower_limit="-0.3536" soft_upper_limit="1.2963"/>
+    <calibration falling="0.0"/>
+    <dynamics damping="10.0"/>
+    <origin rpy="0 0 0" xyz="0.1 0 0"/>
+    <parent link="l_shoulder_pan_link"/>
+    <child link="l_shoulder_lift_link"/>
+  </joint>
+  <link name="l_shoulder_lift_link">
+    <inertial>
+      <mass value="2.74988"/>
+      <origin rpy="0 0 0" xyz="0.02195 -0.02664 -0.03127"/>
+      <inertia ixx="0.02105584615" ixy="0.00496704022" ixz="-0.00194808955" iyy="0.02127223737" iyz="0.00110425490" izz="0.01975753814"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="l_upper_arm_roll_joint" type="revolute">
+    <axis xyz="1 0 0"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_shoulder_lift_link"/>
+    <child link="l_upper_arm_roll_link"/>
+    <limit effort="30" lower="-0.8" upper="3.9" velocity="3.27"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="2" soft_lower_limit="-0.65" soft_upper_limit="3.75"/>
+    <calibration rising="1.57079632679"/>
+    <dynamics damping="0.1"/>
+  </joint>
+  <link name="l_upper_arm_roll_link">
+    <inertial>
+      <!-- dummy mass, to be removed -->
+      <mass value="0.1"/>
+      <origin rpy="0 0 0" xyz="0.0 0 0"/>
+      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
+    </inertial>
+    <visual>
+      <!-- TODO: This component doesn't actually have a mesh -->
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="l_upper_arm_roll_link">
+    <material value="PR2/RollLinks"/>
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_upper_arm_roll_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <!-- Upperarm roll: internal fixed attchment point for upper arm -->
+  <transmission name="l_upper_arm_roll_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="l_upper_arm_roll_motor"/>
+    <joint name="l_upper_arm_roll_joint"/>
+    <mechanicalReduction>32.6525111499</mechanicalReduction>
+  </transmission>
+  <!-- Shoulder pan -->
+  <gazebo reference="l_shoulder_pan_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_shoulder_pan_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Shoulder lift -->
+  <gazebo reference="l_shoulder_lift_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_shoulder_lift_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Shoulder pan -->
+  <transmission name="l_shoulder_pan_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <joint name="l_shoulder_pan_joint"/>
+    <actuator name="l_shoulder_pan_motor"/>
+    <mechanicalReduction>63.1552452977</mechanicalReduction>
+    <compensator k_belt="4000.0" kd_motor="15.0" lambda_combined="0.0" lambda_joint="40.0" lambda_motor="40.0" mass_motor="0.05"/>
+  </transmission>
+  <!-- Shoulder lift -->
+  <transmission name="l_shoulder_lift_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <joint name="l_shoulder_lift_joint"/>
+    <actuator name="l_shoulder_lift_motor"/>
+    <mechanicalReduction>61.8948225713</mechanicalReduction>
+    <compensator k_belt="4000.0" kd_motor="10.0" lambda_combined="0.0" lambda_joint="60.0" lambda_motor="60.0" mass_motor="0.05"/>
+  </transmission>
+  <joint name="l_upper_arm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_upper_arm_roll_link"/>
+    <child link="l_upper_arm_link"/>
+  </joint>
+  <link name="l_upper_arm_link">
+    <inertial>
+      <!-- NOTE:reflect==-1 for right side, reflect==1 for the left side -->
+      <mass value="6.01769"/>
+      <origin xyz="0.21405 0.01658 -0.00057"/>
+      <inertia ixx="0.01530603856" ixy="-0.00339324862" ixz="0.00060765455" iyy="0.07473694455" iyz="-0.00019953729" izz="0.07601594191"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="l_upper_arm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <!-- Has upperarm link -->
+  <!-- No transmission, since this a fixed joint w/o actuator -->
+  <!-- forearm_roll_link is a fictitious link internal to elbow_flex_link, provides an attachment point for the actual forearm -->
+  <joint name="l_forearm_roll_joint" type="continuous">
+    <axis xyz="1 0 0"/>
+    <limit effort="30" velocity="3.6"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="1"/>
+    <calibration rising="0.0"/>
+    <dynamics damping="0.1"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_elbow_flex_link"/>
+    <child link="l_forearm_roll_link"/>
+  </joint>
+  <!-- TODO: inertial tag should be optional -->
+  <link name="l_forearm_roll_link">
+    <inertial>
+      <!-- dummy masses, to be removed -->
+      <mass value="0.1"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <!-- TODO: collision tag should be optional -->
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="l_forearm_roll_link">
+    <material value="PR2/RollLinks"/>
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_forearm_roll_joint">
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <transmission name="l_forearm_roll_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="l_forearm_roll_motor"/>
+    <joint name="l_forearm_roll_joint"/>
+    <mechanicalReduction>-90.5142857143</mechanicalReduction>
+  </transmission>
+  <!-- Elbow flex -->
+  <joint name="l_elbow_flex_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <!-- Note: Overtravel limits are 140, -7 degrees instead of 133, 0 -->
+    <limit effort="30" lower="-2.3213" upper="0.00" velocity="3.3"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="100" k_velocity="3" soft_lower_limit="-2.1213" soft_upper_limit="-0.15"/>
+    <calibration falling="-1.1606"/>
+    <dynamics damping="1.0"/>
+    <origin rpy="0 0 0" xyz="0.4 0 0"/>
+    <parent link="l_upper_arm_link"/>
+    <child link="l_elbow_flex_link"/>
+  </joint>
+  <link name="l_elbow_flex_link">
+    <inertial>
+      <mass value="1.90327"/>
+      <origin xyz="0.01014 0.00032 -0.01211"/>
+      <inertia ixx="0.00346541989" ixy="0.00004066825" ixz="0.00043171614" iyy="0.00441606455" iyz="-0.00003968914" izz="0.00359156824"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- testing initial joint position, to be parsed at urdf2gazebo parse time -->
+  <gazebo reference="l_elbow_flex_joint">
+    <initial_joint_position>-1.0</initial_joint_position>
+  </gazebo>
+  <gazebo reference="l_elbow_flex_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_elbow_flex_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Elbow flex -->
+  <transmission name="l_elbow_flex_trans" type="pr2_mechanism_model/SimpleTransmission">
+    <actuator name="l_elbow_flex_motor"/>
+    <joint name="l_elbow_flex_joint"/>
+    <mechanicalReduction>-36.167452007</mechanicalReduction>
+  </transmission>
+  <joint name="l_forearm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <!-- transform from parent link to this joint frame -->
+    <parent link="l_forearm_roll_link"/>
+    <child link="l_forearm_link"/>
+  </joint>
+  <link name="l_forearm_link">
+    <inertial>
+      <mass value="2.57968"/>
+      <origin xyz="0.18791 -0.00017 -0.00912"/>
+      <inertia ixx="0.00364857222" ixy="0.00005215877" ixz="0.00071534842" iyy="0.01507736897" iyz="-0.00001310770" izz="0.01659310749"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/forearm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Wrist flex -->
+  <joint name="l_wrist_flex_joint" type="revolute">
+    <axis xyz="0 1 0"/>
+    <limit effort="10" lower="-2.18" upper="0.0" velocity="3.078"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_position="20" k_velocity="4" soft_lower_limit="-2.0" soft_upper_limit="-0.1"/>
+    <dynamics damping="0.1"/>
+    <calibration falling="-0.5410521"/>
+    <origin rpy="0 0 0" xyz="0.321 0 0"/>
+    <parent link="l_forearm_link"/>
+    <child link="l_wrist_flex_link"/>
+  </joint>
+  <link name="l_wrist_flex_link">
+    <inertial>
+      <mass value="0.61402"/>
+      <origin xyz="-0.00157 0.0 -0.00075"/>
+      <inertia ixx="0.00065165722" ixy="0.00000028864" ixz="0.00000303477" iyy="0.00019824443" iyz="-0.00000022645" izz="0.00064450498"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_flex.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Wrist roll -->
+  <joint name="l_wrist_roll_joint" type="continuous">
+    <axis xyz="1 0 0"/>
+    <limit effort="10" velocity="3.6"/>
+    <!-- alpha tested velocity and effort limits -->
+    <safety_controller k_velocity="2"/>
+    <dynamics damping="0.1"/>
+    <calibration rising="-1.57079632679"/>
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_wrist_flex_link"/>
+    <child link="l_wrist_roll_link"/>
+  </joint>
+  <link name="l_wrist_roll_link">
+    <inertial>
+      <!-- dummy masses, to be removed.  wrist roll masses are on "gripper_palm" -->
+      <mass value="0.1"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll.stl"/>
+      </geometry>
+      <material name="RollLinks"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/forearm_v0/wrist_roll_L.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <gazebo reference="l_forearm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <!-- Wrist flex -->
+  <gazebo reference="l_wrist_flex_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo reference="l_wrist_flex_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="1000000.0"/>
+  </gazebo>
+  <!-- Wrist roll -->
+  <gazebo reference="l_wrist_roll_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/RollLinks"/>
+  </gazebo>
+  <gazebo reference="l_wrist_roll_joint">
+    <fudgeFactor value="0.5"/>
+  </gazebo>
+  <!-- Wrist flex , Wrist roll -->
+  <transmission name="l_wrist_trans" type="pr2_mechanism_model/WristTransmission">
+    <rightActuator mechanicalReduction="60.1714285714" name="l_wrist_r_motor"/>
+    <leftActuator mechanicalReduction="60.1714285714" name="l_wrist_l_motor"/>
+    <flexJoint mechanicalReduction="-1.0" name="l_wrist_flex_joint"/>
+    <rollJoint mechanicalReduction="1.0" name="l_wrist_roll_joint"/>
+  </transmission>
+  <joint name="l_gripper_palm_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_wrist_roll_link"/>
+    <child link="l_gripper_palm_link"/>
+  </joint>
+  <link name="l_gripper_palm_link">
+    <inertial>
+      <mass value="0.58007"/>
+      <origin rpy="0 0 0" xyz="0.06623 0.00053 -0.00119"/>
+      <inertia ixx="0.00035223921" ixy="-0.00001580476" ixz="-0.00000091750" iyy="0.00067741312" iyz="-0.00000059554" izz="0.00086563316"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.dae"/>
+      </geometry>
+      <material name="Red"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/gripper_palm.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="l_gripper_led_joint" type="fixed">
+    <!--  Need to check if we need a positive or negative Z term -->
+    <origin xyz="0.0513 0.0 .0244"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_led_frame"/>
+  </joint>
+  <link name="l_gripper_led_frame"/>
+  <joint name="l_gripper_motor_accelerometer_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_motor_accelerometer_link"/>
+  </joint>
+  <link name="l_gripper_motor_accelerometer_link">
+    <inertial>
+      <mass value="0.001"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.001 0.001 0.001"/>
+      </geometry>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <box size="0.001 0.001 0.001"/>
+      </geometry>
+    </collision>
+  </link>
+  <joint name="l_gripper_tool_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0.18 0 0"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_tool_frame"/>
+  </joint>
+  <link name="l_gripper_tool_frame"/>
+  <!-- actuated motor screw joint -->
+  <link name="l_gripper_motor_slider_link">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+    <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="1.5708 0 0" />
+        <geometry>
+          <cylinder length="0.002" radius="0.025"/>
+        </geometry>
+      </collision>
+      -->
+  </link>
+  <joint name="l_gripper_motor_slider_joint" type="prismatic">
+    <origin rpy="0 0 0" xyz="0.16828 0 0"/>
+    <axis xyz="1 0 0"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_motor_slider_link"/>
+    <limit effort="1000.0" lower="-0.1" upper="0.1" velocity="0.2"/>
+  </joint>
+  <link name="l_gripper_motor_screw_link">
+    <inertial>
+      <mass value="0.01"/>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
+    </inertial>
+    <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.05 0.001 0.05" />
+        </geometry>
+      </collision>
+      -->
+  </link>
+  <joint name="l_gripper_motor_screw_joint" type="continuous">
+    <origin rpy="0 0 0" xyz="0.0 0 0"/>
+    <axis xyz="0 1 0"/>
+    <parent link="l_gripper_motor_slider_link"/>
+    <child link="l_gripper_motor_screw_link"/>
+    <dynamics damping="0.0001"/>
+  </joint>
+  <!-- Finger proximal digit -->
+  <joint name="l_gripper_l_finger_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.02"/>
+    <origin rpy="0 0 0" xyz="0.07691 0.01 0"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_l_finger_link"/>
+  </joint>
+  <link name="l_gripper_l_finger_link">
+    <inertial>
+      <mass value="0.17126"/>
+      <origin rpy="0 0 0" xyz="0.03598 0.01730 -0.00164"/>
+      <inertia ixx="0.00007756198" ixy="0.00000149095" ixz="-0.00000983385" iyy="0.00019708305" iyz="-0.00000306125" izz="0.00018105446"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger proximal digit -->
+  <joint name="l_gripper_r_finger_joint" type="revolute">
+    <axis xyz="0 0 -1"/>
+    <origin rpy="0 0 0" xyz="0.07691 -0.01 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.02"/>
+    <mimic joint="l_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="l_gripper_palm_link"/>
+    <child link="l_gripper_r_finger_link"/>
+  </joint>
+  <link name="l_gripper_r_finger_link">
+    <inertial>
+      <mass value="0.17389"/>
+      <origin rpy="0 0 0" xyz="0.03576 -0.01736 -0.00095"/>
+      <inertia ixx="0.00007738410" ixy="-0.00000209309" ixz="-0.00000836228" iyy="0.00019847383" iyz="0.00000246110" izz="0.00018106988"/>
+    </inertial>
+    <visual>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.dae"/>
+      </geometry>
+      <material name="Grey"/>
+    </visual>
+    <collision>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger tip -->
+  <joint name="l_gripper_l_finger_tip_joint" type="revolute">
+    <axis xyz="0 0 -1"/>
+    <origin rpy="0 0 0" xyz="0.09137 0.00495 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.001"/>
+    <mimic joint="l_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="l_gripper_l_finger_link"/>
+    <child link="l_gripper_l_finger_tip_link"/>
+  </joint>
+  <link name="l_gripper_l_finger_tip_link">
+    <inertial>
+      <mass value="0.04419"/>
+      <origin rpy="0 0 0" xyz="0.00423 0.00284 0.0"/>
+      <inertia ixx="0.00000837047" ixy="0.00000583632" ixz="0.0" iyy="0.00000987067" iyz="0.0" izz="0.00001541768"/>
+    </inertial>
+    <visual>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="0 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger tip -->
+  <joint name="l_gripper_r_finger_tip_joint" type="revolute">
+    <axis xyz="0 0 1"/>
+    <origin rpy="0 0 0" xyz="0.09137 -0.00495 0"/>
+    <!-- limits on passive finger and finger top joints without
+         transmission are not enforced by safety controllers.
+         The lower/upper limits and are enforced in PR2 simulation and
+         effort and velocity limits are ignored. This is also needed because
+         these joints are declared revolute rather than continuous.-->
+    <limit effort="1000.0" lower="0.0" upper="0.548" velocity="0.5"/>
+    <dynamics damping="0.001"/>
+    <mimic joint="l_gripper_l_finger_joint" multiplier="1" offset="0"/>
+    <parent link="l_gripper_r_finger_link"/>
+    <child link="l_gripper_r_finger_tip_link"/>
+  </joint>
+  <link name="l_gripper_r_finger_tip_link">
+    <inertial>
+      <mass value="0.04419"/>
+      <origin rpy="0 0 0" xyz="0.00423 -0.00284 0.0"/>
+      <inertia ixx="0.00000837047" ixy="-0.00000583632" ixz="0.0" iyy="0.00000987067" iyz="0.0" izz="0.00001541768"/>
+    </inertial>
+    <visual>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.dae"/>
+      </geometry>
+      <material name="Green"/>
+    </visual>
+    <collision>
+      <origin rpy="3.14159265359 0 0" xyz="0 0 0"/>
+      <geometry>
+        <mesh filename="package://pr2_description/meshes/gripper_v0/l_finger_tip.stl"/>
+      </geometry>
+    </collision>
+  </link>
+  <!-- Finger proximal digit -->
+  <gazebo reference="l_gripper_l_finger_link">
+    <turnGravityOff>true</turnGravityOff>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="l_gripper_l_finger_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger proximal digit -->
+  <gazebo reference="l_gripper_r_finger_link">
+    <turnGravityOff>true</turnGravityOff>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="1000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="l_gripper_r_finger_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger tip -->
+  <gazebo reference="l_gripper_l_finger_tip_link">
+    <turnGravityOff>true</turnGravityOff>
+    <selfCollide>false</selfCollide>
+    <sensor name="l_gripper_l_finger_tip_contact_sensor" type="contact">
+      <update_rate>100.0</update_rate>
+      <contact>
+        <collision>l_gripper_l_finger_tip_link_geom</collision>
+      </contact>
+      <plugin filename="libgazebo_ros_bumper.so" name="l_gripper_l_finger_tip_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <frameName>l_gripper_l_finger_tip_link</frameName>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>l_gripper_l_finger_tip_bumper</bumperTopicName>
+      </plugin>
+    </sensor>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="10000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo reference="l_gripper_l_finger_tip_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- Finger tip -->
+  <gazebo reference="l_gripper_r_finger_tip_link">
+    <turnGravityOff>true</turnGravityOff>
+    <selfCollide>false</selfCollide>
+    <sensor name="l_gripper_r_finger_tip_contact_sensor" type="contact">
+      <update_rate>100.0</update_rate>
+      <contact>
+        <collision>l_gripper_r_finger_tip_link_geom</collision>
+      </contact>
+      <plugin filename="libgazebo_ros_bumper.so" name="l_gripper_r_finger_tip_gazebo_ros_bumper_controller">
+        <alwaysOn>true</alwaysOn>
+        <frameName>l_gripper_r_finger_tip_link</frameName>
+        <updateRate>100.0</updateRate>
+        <bumperTopicName>l_gripper_r_finger_tip_bumper</bumperTopicName>
+      </plugin>
+    </sensor>
+    <mu1 value="500.0"/>
+    <mu2 value="500.0"/>
+    <kp value="10000000.0"/>
+    <kd value="1.0"/>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_p3d.so" name="p3d_l_gripper_l_finger_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>l_gripper_l_finger_link</bodyName>
+      <topicName>l_gripper_l_finger_pose_ground_truth</topicName>
+      <gaussianNoise>0.0</gaussianNoise>
+      <frameName>base_link</frameName>
+    </plugin>
+    <plugin filename="libgazebo_ros_f3d.so" name="f3d_l_gripper_l_finger_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>l_gripper_l_finger_link</bodyName>
+      <topicName>l_gripper_l_finger_force_ground_truth</topicName>
+    </plugin>
+  </gazebo>
+  <gazebo reference="l_gripper_r_finger_tip_joint">
+    <stopKd value="1.0"/>
+    <stopKp value="10000000.0"/>
+    <fudgeFactor value="1.0"/>
+    <provideFeedback value="true"/>
+  </gazebo>
+  <!-- parallel link for simulating gripper constraints -->
+  <gazebo>
+    <link name="l_gripper_l_parallel_link">
+      <inertial>
+        <mass>0.17126</mass>
+        <inertia>
+          <ixx>7.7562e-05</ixx>
+          <ixy>1.49095e-06</ixy>
+          <ixz>-9.83385e-06</ixz>
+          <iyy>0.000197083</iyy>
+          <iyz>-3.06125e-06</iyz>
+          <izz>0.000181054</izz>
+        </inertia>
+        <pose>0.03598 0.0173 -0.00164 0 0 0</pose>
+      </inertial>
+      <pose>0.82991 0.219 0.790675 0 -0 0</pose>
+      <gravity>false</gravity>
+    </link>
+    <link name="l_gripper_r_parallel_link">
+      <inertial>
+        <mass>0.17389</mass>
+        <inertia>
+          <ixx>7.73841e-05</ixx>
+          <ixy>-2.09309e-06</ixy>
+          <ixz>-8.36228e-06</ixz>
+          <iyy>0.000198474</iyy>
+          <iyz>2.4611e-06</iyz>
+          <izz>0.00018107</izz>
+        </inertia>
+        <pose>0.03576 -0.01736 -0.00095 0 0 0</pose>
+      </inertial>
+      <pose>0.82991 0.157 0.790675 0 0 0</pose>
+      <gravity>false</gravity>
+    </link>
+  </gazebo>
+  <gazebo>
+    <joint name="l_gripper_r_screw_screw_joint" type="screw">
+      <child>l_gripper_motor_screw_link</child>
+      <parent>l_gripper_r_finger_tip_link</parent>
+      <thread_pitch>-3141.6</thread_pitch>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+    <joint name="l_gripper_l_screw_screw_joint" type="screw">
+      <parent>l_gripper_l_finger_tip_link</parent>
+      <child>l_gripper_motor_screw_link</child>
+      <thread_pitch>3141.6</thread_pitch>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+  </gazebo>
+  <gazebo>
+    <joint name="l_gripper_r_parallel_root_joint" type="revolute">
+      <parent>l_gripper_r_parallel_link</parent>
+      <child>l_gripper_palm_link</child>
+      <axis>
+        <xyz>0 0 -1</xyz>
+        <dynamics>
+          <damping>0.2</damping>
+        </dynamics>
+      </axis>
+      <pose>0.05891 -0.031 0 0 0 0</pose>
+    </joint>
+    <joint name="l_gripper_l_parallel_root_joint" type="revolute">
+      <parent>l_gripper_l_parallel_link</parent>
+      <child>l_gripper_palm_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+        <dynamics>
+          <damping>0.2</damping>
+        </dynamics>
+      </axis>
+      <pose>0.05891 0.031 0 0 0 0</pose>
+    </joint>
+    <joint name="l_gripper_r_parallel_tip_joint" type="revolute">
+      <parent>l_gripper_r_parallel_link</parent>
+      <child>l_gripper_r_finger_tip_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+      </axis>
+      <pose>-0.018 -0.021 0 0 0 0</pose>
+    </joint>
+    <joint name="l_gripper_l_parallel_tip_joint" type="revolute">
+      <parent>l_gripper_l_parallel_link</parent>
+      <child>l_gripper_l_finger_tip_link</child>
+      <axis>
+        <xyz>0 0 1</xyz>
+      </axis>
+      <pose>-0.018 0.021 0 0 0 0</pose>
+    </joint>
+    <joint name="l_gripper_joint" type="prismatic">
+      <parent>l_gripper_r_finger_tip_link</parent>
+      <child>l_gripper_l_finger_tip_link</child>
+      <axis>
+        <xyz>0 1 0</xyz>
+      </axis>
+    </joint>
+  </gazebo>
+  <gazebo reference="l_gripper_motor_slider_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="l_gripper_motor_screw_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="l_gripper_l_parallel_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <gazebo reference="l_gripper_r_parallel_link">
+    <turnGravityOff>true</turnGravityOff>
+    <material value="PR2/Red"/>
+  </gazebo>
+  <!-- fictitous joint that represents the gripper gap -->
+  <!-- effort is the linear force at the gripper gap
+         velocity limit is the linear velocity limit at the gripper gap
+         try and introduce a very stiff spring
+         The velocity limits are alpha tested.
+         The effort limits are somewhat inflated.
+         k_velocity was recently raised from 500.0 to 5000.0.  Tested on beta
+    -->
+  <joint name="l_gripper_joint" type="prismatic">
+    <parent link="l_gripper_r_finger_tip_link"/>
+    <child link="l_gripper_l_finger_tip_frame"/>
+    <axis xyz="0 1 0"/>
+    <dynamics damping="10.0"/>
+    <limit effort="1000.0" lower="0.0" upper="0.09" velocity="0.2"/>
+    <safety_controller k_position="20.0" k_velocity="5000.0" soft_lower_limit="-0.01" soft_upper_limit="0.088"/>
+  </joint>
+  <!-- This link is the same as the l_finger_tip_link,
+	 but because the urdf does not support graph structures,
+	 this link exists twice -->
+  <link name="l_gripper_l_finger_tip_frame"/>
+  <gazebo reference="l_gripper_palm_link">
+    <turnGravityOff>true</turnGravityOff>
+  </gazebo>
+  <gazebo>
+    <plugin filename="libgazebo_ros_p3d.so" name="p3d_l_gripper_palm_controller">
+      <alwaysOn>true</alwaysOn>
+      <updateRate>100.0</updateRate>
+      <bodyName>l_gripper_palm_link</bodyName>
+      <topicName>l_gripper_palm_pose_ground_truth</topicName>
+      <xyzOffsets>0 0 0</xyzOffsets>
+      <rpyOffsets>0 0 0</rpyOffsets>
+      <gaussianNoise>0.0</gaussianNoise>
+      <frameName>map</frameName>
+    </plugin>
+    <!-- a formal implementation of grasp hack in gazebo with fixed joint -->
+    <gripper name="l_grasp_hack">
+      <grasp_check>
+        <attach_steps>20</attach_steps>
+        <detach_steps>40</detach_steps>
+        <min_contact_count>2</min_contact_count>
+      </grasp_check>
+      <gripper_link>l_gripper_r_finger_tip_link</gripper_link>
+      <gripper_link>l_gripper_l_finger_tip_link</gripper_link>
+      <palm_link>l_gripper_palm_link</palm_link>
+    </gripper>
+  </gazebo>
+  <!-- [lr]_gripper_joint is a fictitious joint, used by transmission for controller gap   -->
+  <!-- [lr]_gripper_joint is not attached to any link                                      -->
+  <!-- [lr]_gripper_joint position is the gap_size                                         -->
+  <!-- [lr]_gripper_joint velocity is the gap linear velocity                              -->
+  <!-- [lr]_gripper_joint effort   is the gap linear force                                 -->
+  <!-- Please refer to function engineering spreadsheet 090224_link_data.xls for           -->
+  <!-- the transmission function.                                                          -->
+  <!-- Please refer to mechanism_model/src/pr2_gripper_transmission.cpp for implementation.-->
+  <!-- gazebo_mimic_pid is for sim only.                                                   -->
+  <transmission name="l_gripper_trans" type="pr2_mechanism_model/PR2GripperTransmission">
+    <actuator name="l_gripper_motor"/>
+    <gap_joint L0="0.0375528" a="0.0683698" b="0.0433849" gear_ratio="40.095" h="0.0" mechanical_reduction="1.0" name="l_gripper_joint" phi0="0.518518122146" r="0.0915" screw_reduction="0.004" t0="-0.0001914" theta0="0.0628824676201"/>
+    <!-- if a gazebo joint exists as [l|r]_gripper_joint, use this tag to have
+           gripper transmission apply torque directly to prismatic joint
+           this should be the default behavior in diamondback, deprecating this flag -->
+    <use_simulated_gripper_joint/>
+    <!-- set passive joint angles so things look nice in rviz -->
+    <passive_joint name="l_gripper_l_finger_joint"/>
+    <passive_joint name="l_gripper_r_finger_joint"/>
+    <passive_joint name="l_gripper_r_finger_tip_joint"/>
+    <passive_joint name="l_gripper_l_finger_tip_joint"/>
+    <!-- screw joint to capture gripper "dynamics" -->
+    <simulated_actuated_joint name="l_gripper_motor_screw_joint" passive_actuated_joint="l_gripper_motor_slider_joint" simulated_reduction="3141.6"/>
+  </transmission>
+  <joint name="l_forearm_cam_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 -0.562868683768 0" xyz=".135 0 .044"/>
+    <parent link="l_forearm_roll_link"/>
+    <child link="l_forearm_cam_frame"/>
+  </joint>
+  <link name="l_forearm_cam_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="l_forearm_cam_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="l_forearm_cam_frame"/>
+    <child link="l_forearm_cam_optical_frame"/>
+  </joint>
+  <link name="l_forearm_cam_optical_frame"/>
+  <gazebo reference="l_forearm_cam_frame">
+    <sensor name="l_forearm_cam_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>1.57079632679</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="l_forearm_cam_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>l_forearm_cam</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>l_forearm_cam_optical_frame</frameName>
+        <hackBaseline>0</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>320.000105</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+  <joint name="r_forearm_cam_frame_joint" type="fixed">
+    <origin rpy="1.57079632679 -0.562868683768 0" xyz=".135 0 .044"/>
+    <parent link="r_forearm_roll_link"/>
+    <child link="r_forearm_cam_frame"/>
+  </joint>
+  <link name="r_forearm_cam_frame">
+    <inertial>
+      <mass value="0.01"/>
+      <origin xyz="0 0 0"/>
+      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
+    </inertial>
+  </link>
+  <joint name="r_forearm_cam_optical_frame_joint" type="fixed">
+    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
+    <parent link="r_forearm_cam_frame"/>
+    <child link="r_forearm_cam_optical_frame"/>
+  </joint>
+  <link name="r_forearm_cam_optical_frame"/>
+  <gazebo reference="r_forearm_cam_frame">
+    <sensor name="r_forearm_cam_sensor" type="camera">
+      <always_on>true</always_on>
+      <update_rate>25.0</update_rate>
+      <camera>
+        <horizontal_fov>1.57079632679</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin filename="libgazebo_ros_camera.so" name="r_forearm_cam_controller">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>25.0</updateRate>
+        <cameraName>r_forearm_cam</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <frameName>r_forearm_cam_optical_frame</frameName>
+        <hackBaseline>0</hackBaseline>
+        <CxPrime>320.5</CxPrime>
+        <Cx>320.5</Cx>
+        <Cy>240.5</Cy>
+        <!-- image_width / (2*tan(hfov_radian /2)) -->
+        <!-- 320 for wide and 772.55 for narrow stereo camera -->
+        <focalLength>320.000105</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <turnGravityOff>true</turnGravityOff>
+    <material>PR2/Blue</material>
+  </gazebo>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/double_stereo_camera.gazebo.xacro
@@ -0,0 +1,16 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- Made by Kevin for double stereo camera for PR-2 Beta. -->
+  <!-- Needs calibration verification, and CAD check. -->
+  <xacro:macro name="double_stereo_camera_gazebo_v0" params="name">
+    <!-- Define link to stereo cameras, set origin relative to that -->
+    <gazebo reference="${name}_double_stereo_link">
+      <material value="PR2/Blue" />
+    </gazebo>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/double_stereo_camera.urdf.xacro
@@ -0,0 +1,61 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/double_stereo_camera.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/stereo_camera.urdf.xacro" />
+
+  <xacro:property name="stereo_size_x" value="0.02" />
+  <xacro:property name="stereo_size_y" value="0.12" />
+  <xacro:property name="stereo_size_z" value="0.05" />
+  <xacro:property name="stereo_center_box_center_offset_x" value="-0.01" />
+  <xacro:property name="stereo_center_box_center_offset_z" value="0.025" />
+
+  <!-- Made by Kevin for double stereo camera for PR-2 Beta. -->
+  <!-- Needs calibration verification, and CAD check. -->
+  <xacro:macro name="double_stereo_camera_v0" params="name parent *origin">
+    <!-- Define link to stereo cameras, set origin relative to that -->
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+
+      <inertial>
+        <!-- Needs verification with CAD -->
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
+                 iyy="0.001" iyz="0.0" izz="0.01" />
+      </inertial>
+
+      <!-- Should probably get real visuals here at some point -->
+      <visual>
+        <origin xyz="${stereo_center_box_center_offset_x} 0 ${stereo_center_box_center_offset_z}" rpy="0 0 0" />
+        <geometry>
+          <box size="${stereo_size_x} ${stereo_size_y} ${stereo_size_z}" />
+        </geometry>
+        <material name="Blue" />
+      </visual>
+
+    </link>
+
+    <!-- Wide camera is on robot right (hca1), narrow on left (hca2)? -->
+    <!-- 15mm offset from center needs check with CAD -->
+    <xacro:stereo_camera_v0 parent="${name}_link" name="wide_stereo" focal_length="320.000105" hfov="90" image_format="BAYER_BGGR8" image_width="640" image_height="480" >
+      <origin xyz="0.045 ${0.045-0.015} 0.0501" rpy="0.0   0.0   0.0" />
+    </xacro:stereo_camera_v0>
+    <xacro:stereo_camera_v0 parent="${name}_link" name="narrow_stereo" focal_length="772.548518" hfov="45" image_format="L8" image_width="640" image_height="480" >
+      <origin xyz="0.045 ${0.045+0.015} 0.0501" rpy="0.0   0.0   0.0" />
+    </xacro:stereo_camera_v0>
+
+    <!-- extensions -->
+    <xacro:double_stereo_camera_gazebo_v0 name="${name}" />
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/head_sensor_package.gazebo.xacro
@@ -0,0 +1,20 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:property name="M_PI" value="3.1415926535897931" />
+
+
+  <!-- Made by Kevin for A2 sensor package -->
+  <!-- Origin is center mount screw on sensor plate mount -->
+  <!-- When mounted properly, should have same origin as head plate frame -->
+  <xacro:macro name="pr2_head_sensor_package_gazebo_v0" params="name">
+    <gazebo reference="${name}_sensor_link">
+      <material value="PR2/Blue" />
+    </gazebo>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/head_sensor_package.urdf.xacro
@@ -0,0 +1,63 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- This urdf macro defines following sensors:
+       prosilica
+       double stereo camera
+  -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/head_sensor_package.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/double_stereo_camera.urdf.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/prosilica_gc2450_camera.urdf.xacro" />
+
+  <!-- Made by Kevin for A2 sensor package -->
+  <!-- Origin is center mount screw on sensor plate mount -->
+  <!-- When mounted properly, should have same origin as head plate frame -->
+  <xacro:macro name="pr2_head_sensor_package_v0" params="name hd_frame_name hd_camera_name stereo_name parent *origin">
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link" >
+
+      <inertial>
+        <!-- Needs verification with CAD -->
+        <mass value="0.05" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
+                 iyy="0.001" iyz="0.0" izz="0.01" />
+      </inertial>
+
+      <!-- Should probably get real visuals here at some point -->
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.01 0.01 0.01" />
+        </geometry>
+
+        <material name="Blue" />
+      </visual>
+
+    </link>
+
+    <!-- Prosilica Camera -->
+    <xacro:prosilica_cam_v0 frame_name="${hd_frame_name}" camera_name="${hd_camera_name}" parent="${name}_link" >
+      <!-- camera focal point update from S. Stanford (called Kowa from Prosilica) 2011-08-18 -->
+      <origin xyz="0.046457 -0.110 0.054600" rpy="0 0 0" />
+    </xacro:prosilica_cam_v0>
+
+    <!-- construct wide and narrow double stereo camera -->
+    <xacro:double_stereo_camera_v0 name="${stereo_name}" parent="${name}_link" >
+      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
+    </xacro:double_stereo_camera_v0>
+
+    <!-- extensions -->
+    <xacro:pr2_head_sensor_package_gazebo_v0 name="${name}" />
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/hokuyo_lx30_laser.gazebo.xacro
@@ -0,0 +1,39 @@
+<?xml version="1.0"?>
+
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="hokuyo_lx30_laser_gazebo_v0" params="name ros_topic update_rate min_angle max_angle">
+    <gazebo reference="${name}_link">
+      <sensor type="ray" name="${name}">
+        <always_on>true</always_on>
+        <update_rate>${update_rate}</update_rate>
+        <pose>0 0 0 0 0 0</pose>
+        <visualize>false</visualize>
+        <ray>
+          <scan>
+            <horizontal>
+              <samples>640</samples>
+              <resolution>1</resolution>
+              <min_angle>${min_angle}</min_angle>
+              <max_angle>${max_angle}</max_angle>
+            </horizontal>
+          </scan>
+          <range>
+            <min>0.08</min>
+            <max>10.0</max>
+            <resolution>0.01</resolution>
+          </range>
+        </ray>
+        <plugin name="gazebo_ros_${name}_controller" filename="libgazebo_ros_laser.so">
+          <gaussianNoise>0.005</gaussianNoise>
+          <alwaysOn>true</alwaysOn>
+          <updateRate>${update_rate}</updateRate>
+          <topicName>${ros_topic}</topicName>
+          <frameName>${name}_link</frameName>
+          <hokuyoMinIntensity>101</hokuyoMinIntensity>
+        </plugin>
+      </sensor>
+    </gazebo>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/hokuyo_lx30_laser.urdf.xacro
@@ -0,0 +1,27 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/hokuyo_lx30_laser.gazebo.xacro" />
+
+  <xacro:macro name="hokuyo_lx30_laser_v0" params="name parent *origin ros_topic update_rate min_angle max_angle">
+    <joint name="${name}_joint" type="fixed">
+      <axis xyz="0 1 0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}_link"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link" type="laser">
+      <inertial>
+        <mass value="0.001" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001" />
+      </inertial>
+    </link>
+    <!-- gazebo extensions -->
+    <xacro:hokuyo_lx30_laser_gazebo_v0 name="${name}" ros_topic="${ros_topic}" update_rate="${update_rate}" min_angle="${min_angle}" max_angle="${max_angle}" />
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/kinect_camera.gazebo.xacro
@@ -0,0 +1,86 @@
+<?xml version="1.0"?>
+<root xmlns:xacro="http://ros.org/wiki/xacro">
+
+<xacro:macro name="kinect_camera_gazebo_v0" params="name">
+  <gazebo reference="${name}_frame">
+    <sensor type="depth" name="${name}_frame_sensor">
+      <always_on>true</always_on>
+      <update_rate>20.0</update_rate>
+      <camera>
+        <horizontal_fov>${57.0*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin name="${name}_frame_controller" filename="libgazebo_ros_openni_kinect.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>20.0</updateRate>
+        <cameraName>${name}</cameraName>
+        <imageTopicName>${name}/ir/image_raw</imageTopicName>
+        <cameraInfoTopicName>${name}/ir/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>${name}/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>${name}/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>${name}/depth/points</pointCloudTopicName>
+        <frameName>${name}_optical_frame</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <sensor type="depth" name="${name}_frame_sensor">
+      <always_on>true</always_on>
+      <update_rate>20.0</update_rate>
+      <camera>
+        <horizontal_fov>${57.0*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin name="${name}_frame_controller" filename="libgazebo_ros_openni_kinect.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>20.0</updateRate>
+        <cameraName>${name}</cameraName>
+        <imageTopicName>${name}/rgb/image_raw</imageTopicName>
+        <cameraInfoTopicName>${name}/rgb/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>${name}/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>${name}/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>${name}/rgb/points</pointCloudTopicName>
+        <frameName>${name}_optical_frame</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+  </gazebo>
+
+</xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/kinect_camera.urdf.xacro
@@ -0,0 +1,54 @@
+<?xml version="1.0"?>
+<root xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+      xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+      xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+      xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/kinect_camera.gazebo.xacro" />
+
+  <xacro:macro name="kinect_camera_v0" params="name parent *origin">
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_frame"/>
+    </joint>
+    <link name="${name}_frame">
+
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.01"  ixy="0.0"  ixz="0.0"
+                 iyy="0.01"  iyz="0.0"
+                 izz="0.01" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0.0 0.012 0" rpy="0 0 0"/>
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/sensors/kinect_v0/kinect.dae" scale="0.001 0.001 0.001" />
+        </geometry>
+      </visual>
+
+      <collision>
+        <origin xyz="0.0 0.012 0" rpy="0 0 0"/>
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/sensors/kinect_v0/kinect.dae" scale="0.001 0.001 0.001" />
+        </geometry>
+      </collision>
+
+    </link>
+
+    <joint name="${name}_optical_joint" type="fixed">
+      <origin xyz="${cal_kinect_x}            ${cal_kinect_y}         ${cal_kinect_z}"
+                rpy="${-M_PI/2+cal_kinect_roll} ${0.0+cal_kinect_pitch} ${-M_PI/2+cal_kinect_yaw}" />
+      <parent link="${name}_frame"/>
+      <child link="${name}_optical_frame"/>
+    </joint>
+
+    <link name="${name}_optical_frame"/>
+
+    <!-- extensions -->
+    <xacro:kinect_camera_gazebo_v0 name="${name}" />
+  </xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/kinect_prosilica_camera.gazebo.xacro
@@ -0,0 +1,192 @@
+<?xml version="1.0"?>
+<root xmlns:xacro="http://ros.org/wiki/xacro">
+
+<xacro:macro name="kinect_ir_gazebo_v0" params="link_name frame_name camera_name">
+  <gazebo reference="${link_name}">
+    <sensor type="depth" name="${name}_ir_sensor">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>${57.0*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>L8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
+        <baseline>0.2</baseline>
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>${camera_name}_ir</cameraName>
+        <imageTopicName>/${camera_name}/depth/image_raw</imageTopicName>
+        <cameraInfoTopicName>/${camera_name}/depth/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>/${camera_name}/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
+        <frameName>${frame_name}</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red" />
+  </gazebo>
+</xacro:macro>
+
+<xacro:macro name="kinect_rgb_gazebo_v0" params="link_name frame_name camera_name">
+  <gazebo reference="${link_name}">
+    <sensor type="depth" name="${name}_rgb_sensor">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>${57.0*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>640</width>
+          <height>480</height>
+        </image>
+        <clip>
+          <near>0.01</near>
+          <far>5</far>
+        </clip>
+      </camera>
+      <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>${camera_name}_rgb</cameraName>
+        <imageTopicName>/${camera_name}/rgb/image_raw</imageTopicName>
+        <cameraInfoTopicName>/${camera_name}/rgb/camera_info</cameraInfoTopicName>
+        <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>/${camera_name}/depth/camera_info</depthImageCameraInfoTopicName>
+        <pointCloudTopicName>/${camera_name}/depth_registered/points</pointCloudTopicName>
+        <frameName>${frame_name}</frameName>
+        <pointCloudCutoff>0.5</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red" />
+  </gazebo>
+</xacro:macro>
+
+<xacro:macro name="kinect_prosilica_gazebo" params="joint_name link_name">
+  <gazebo>
+    <plugin name="${link_name}_srp_controller" filename="libgazebo_ros_srp.so">
+      <bodyName>${link_name}</bodyName>
+      <jointName>${joint_name}</jointName>
+      <topicName>${link_name}</topicName>
+    </plugin>
+  </gazebo>
+  <!-- also add transmission for this sliding joint -->
+  <transmission type="pr2_mechanism_model/SimpleTransmission" name="${joint_name}_trans">
+    <actuator name="${joint_name}_motor" />
+    <joint name="${joint_name}" />
+    <mechanicalReduction>1</mechanicalReduction>
+  </transmission>
+</xacro:macro>
+
+<xacro:macro name="prosilica_cam_gazebo_v1" params="link_name frame_name camera_name ">
+  <gazebo reference="${link_name}">
+    <sensor type="camera" name="${link_name}_sensor">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>${64.2*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>320</width>
+          <height>240</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin name="${link_name}_controller" filename="libgazebo_ros_prosilica.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>${camera_name}_1mb</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <depthImageTopicName>depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
+        <pollServiceName>request_image</pollServiceName>
+        <pointCloudTopicName>points</pointCloudTopicName>
+        <frameName>${frame_name}</frameName>
+        <pointCloudCutoff>0.4</pointCloudCutoff>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <sensor type="depth" name="${link_name}_sim_pcd_sensor">
+      <always_on>true</always_on>
+      <update_rate>1.0</update_rate>
+      <camera>
+        <horizontal_fov>${64.2*M_PI/180.0}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>320</width>
+          <height>240</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin name="${link_name}_sim_pcd_controller" filename="libgazebo_ros_openni_kinect.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>1.0</updateRate>
+        <cameraName>${camera_name}_1mb_sim_pcd</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <depthImageTopicName>depth/image_raw</depthImageTopicName>
+        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <pointCloudTopicName>points</pointCloudTopicName>
+        <frameName>${frame_name}</frameName>
+        <pointCloudCutoff>0.4</pointCloudCutoff>
+        <distortionK1>0.00000001</distortionK1>
+        <distortionK2>0.00000001</distortionK2>
+        <distortionK3>0.00000001</distortionK3>
+        <distortionT1>0.00000001</distortionT1>
+        <distortionT2>0.00000001</distortionT2>
+        <CxPrime>0</CxPrime>
+        <Cx>0</Cx>
+        <Cy>0</Cy>
+        <focalLength>0</focalLength>
+        <hackBaseline>0</hackBaseline>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Red" />
+  </gazebo>
+</xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/kinect_prosilica_camera.urdf.xacro
@@ -0,0 +1,175 @@
+<?xml version="1.0"?>
+<root xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+      xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+      xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+      xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/kinect_prosilica_camera.gazebo.xacro" />
+
+  <xacro:property name="ir_depth_rgb_offset_y" value="0.01"/> <!-- FIXME: what is this offset? -->
+
+  <!-- kinect and prosilica combo -->
+  <xacro:macro name="kinect_prosilica_camera_swept_back_v0" params="name parent *origin">
+    <!-- stl contains structure + kinect + prosilica combo -->
+    <joint name="${name}_joint" type="fixed">
+      <!-- <limit lower="0.1" upper="0.1" effort="10000" velocity="100.0"/> -->
+      <!-- <insert_block name="origin" /> -->
+      <origin xyz="-0.138 0 0.091" rpy="0 0 0"/>
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.01"  ixy="0.0"  ixz="0.0"
+                 iyy="0.01"  iyz="0.0"
+                 izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/sensors/kinect_prosilica_v0/115x100_swept_back--coarse.STL" scale="0.001 0.001 0.001" />
+        </geometry>
+        <material name="gray">
+          <color rgba="0.5 0.5 0.5 1"/>
+        </material>
+      </visual>
+      <collision>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- kinect ir sensor physical attachment -->
+    <joint name="${name}_kinect_ir_joint" type="fixed">
+      <origin xyz="-0.032267 0.0125 0.136453" rpy="0 0 0"/>
+      <parent link="${name}_link"/>
+      <child link="${name}_kinect_ir_link"/>
+    </joint>
+    <link name="${name}_kinect_ir_link">
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.01"  ixy="0.0"  ixz="0.0"
+                 iyy="0.01"  iyz="0.0"
+                 izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </collision>
+    </link>
+    <!-- kinect ir sensor frame -->
+    <joint name="${name}_kinect_ir_optical_frame_joint" type="fixed">
+      <origin xyz="${cal_kinect_x}            ${cal_kinect_y + ir_depth_rgb_offset_y}         ${cal_kinect_z}"
+                rpy="${-M_PI/2+cal_kinect_roll} ${0.0+cal_kinect_pitch} ${-M_PI/2+cal_kinect_yaw}" />
+      <parent link="${name}_kinect_ir_link"/>
+      <child link="${name}_kinect_ir_optical_frame"/>
+    </joint>
+
+    <link name="${name}_kinect_ir_optical_frame"/>
+    <!-- gazebo extensions -->
+    <xacro:kinect_ir_gazebo_v0 link_name="${name}_kinect_ir_link" frame_name="${name}_kinect_ir_optical_frame" camera_name="head_mount_kinect" />
+
+
+
+
+    <!-- kinect rgb sensor physical attachment -->
+    <joint name="${name}_kinect_rgb_joint" type="fixed">
+      <origin xyz="0 -0.03 0" rpy="0 0 0"/>
+      <parent link="${name}_kinect_ir_link"/>
+      <child link="${name}_kinect_rgb_link"/>
+    </joint>
+
+    <link name="${name}_kinect_rgb_link" >
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.01"  ixy="0.0"  ixz="0.0"
+                 iyy="0.01"  iyz="0.0"
+                 izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- kinect rgb sensor frame -->
+    <joint name="${name}_kinect_rgb_optical_frame_joint" type="fixed">
+      <origin xyz="${cal_kinect_x}            ${cal_kinect_y}         ${cal_kinect_z}"
+                rpy="${-M_PI/2+cal_kinect_roll} ${0.0+cal_kinect_pitch} ${-M_PI/2+cal_kinect_yaw}" />
+      <parent link="${name}_kinect_rgb_link"/>
+      <child link="${name}_kinect_rgb_optical_frame"/>
+    </joint>
+
+    <link name="${name}_kinect_rgb_optical_frame"/>
+    <!-- gazebo extensions -->
+    <xacro:kinect_rgb_gazebo_v0 link_name="${name}_kinect_rgb_link" frame_name="${name}_kinect_rgb_optical_frame" camera_name="head_mount_kinect" />
+
+
+
+
+
+    <!-- prosilica sensor physical attachment -->
+    <joint name="${name}_prosilica_joint" type="fixed">
+      <origin xyz="-0.046457 0.0125 0.088921" rpy="0 0 0"/>
+      <parent link="${name}_link"/>
+      <child link="${name}_prosilica_link"/>
+    </joint>
+    <link name="${name}_prosilica_link">
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.01"  ixy="0.0"  ixz="0.0"
+                 iyy="0.01"  iyz="0.0"
+                 izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
+        <geometry>
+          <sphere radius="0.0005"/>
+        </geometry>
+      </collision>
+    </link>
+    <!-- prosilica sensor frame -->
+    <joint name="${name}_prosilica_optical_frame_joint" type="fixed">
+      <origin xyz="${cal_high_def_x}            ${cal_high_def_y}         ${cal_high_def_z}"
+                rpy="${-M_PI/2+cal_high_def_roll} ${0.0+cal_high_def_pitch} ${-M_PI/2+cal_high_def_yaw}" />
+      <parent link="${name}_prosilica_link"/>
+      <child link="${name}_prosilica_optical_frame"/>
+    </joint>
+
+    <link name="${name}_prosilica_optical_frame"/>
+    <!-- gazebo extensions -->
+    <xacro:prosilica_cam_gazebo_v1 link_name="${name}_prosilica_link" camera_name="prosilica_camera" frame_name="${name}_prosilica_optical_frame" />
+
+  </xacro:macro>
+
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/microstrain_3dmgx2_imu.gazebo.xacro
@@ -0,0 +1,20 @@
+<?xml version="1.0"?>
+
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="microstrain_3dmgx2_imu_gazebo_v0" params="name imu_topic update_rate stdev">
+    <gazebo>
+      <plugin name="imu_controller" filename="libgazebo_ros_imu.so">
+        <alwaysOn>true</alwaysOn>
+        <updateRate>${update_rate}</updateRate>
+        <bodyName>${name}_link</bodyName>
+        <topicName>${imu_topic}</topicName>
+        <gaussianNoise>${stdev*stdev}</gaussianNoise>
+        <xyzOffset>0 0 0</xyzOffset>
+        <rpyOffset>0 -180.0 0</rpyOffset>
+        <serviceName>/default_imu</serviceName>
+      </plugin>
+    </gazebo>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/microstrain_3dmgx2_imu.urdf.xacro
@@ -0,0 +1,24 @@
+<?xml version="1.0"?>
+
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/microstrain_3dmgx2_imu.gazebo.xacro" />
+
+  <xacro:macro name="microstrain_3dmgx2_imu_v0" params="name parent *origin imu_topic update_rate stdev">
+    <joint name="${name}_joint" type="fixed">
+      <axis xyz="0 1 0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}_link"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+      <inertial>
+        <mass value="0.001" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001" />
+      </inertial>
+    </link>
+    <!-- gazebo extensions -->
+    <xacro:microstrain_3dmgx2_imu_gazebo_v0 name="${name}" imu_topic="${imu_topic}" update_rate="${update_rate}" stdev="${stdev}" />
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/projector_wg6802418.gazebo.xacro
@@ -0,0 +1,31 @@
+<?xml version="1.0"?>
+<root xmlns:xacro="http://ros.org/wiki/xacro">
+
+<!-- this controller is pushed into a body scope (previously model scope)
+     this will only work with added r36415 patch in simulator_gazebo stack
+     otherwise projector will not work without removing the reference tag -->
+<xacro:macro name="projector_wg6802418_gazebo_v0" params="name">
+  <gazebo reference="${name}_child_frame">
+    <projector name="${name}_projector_wg6802418">
+      <pose>0 0 0 0 -1.5707 0</pose>
+      <texture>stereo_projection_pattern_high_res_red.png</texture>
+      <fov>${55.0/180.0*M_PI}</fov>
+      <near_clip>0.1</near_clip>
+      <far_clip>10</far_clip>
+    </projector>
+  </gazebo>
+  <gazebo>
+    <plugin name="${name}_controller" filename="libgazebo_ros_projector.so">
+      <projector>${name}_child_frame/${name}_projector_wg6802418</projector>
+      <alwaysOn>true</alwaysOn>
+      <updateRate>15.0</updateRate>
+      <textureName>stereo_projection_pattern_high_res_red.png</textureName>
+      <filterTextureName>stereo_projection_pattern_filter.png</filterTextureName>
+      <textureTopicName>${name}_controller/image</textureTopicName>
+      <projectorTopicName>${name}_controller/projector</projectorTopicName>
+    </plugin>
+  </gazebo>
+
+</xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/projector_wg6802418.urdf.xacro
@@ -0,0 +1,42 @@
+<?xml version="1.0"?>
+<root xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+      xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+      xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+      xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/projector_wg6802418.gazebo.xacro" />
+
+  <xacro:macro name="projector_wg6802418_v0" params="name parent *origin">
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_frame"/>
+    </joint>
+    <link name="${name}_frame">
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+    </link>
+    <joint name="${name}_child_frame_joint" type="fixed">
+      <origin xyz="0 0 0" rpy="0 ${-M_PI/2} 0" />
+      <parent link="${name}_frame"/>
+      <child link="${name}_child_frame"/>
+    </joint>
+    <link name="${name}_child_frame">
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+    </link>
+    <!-- extensions -->
+    <xacro:projector_wg6802418_gazebo_v0 name="${name}"/>
+  </xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/prosilica_gc2450_camera.gazebo.xacro
@@ -0,0 +1,43 @@
+<?xml version="1.0"?>
+<root xmlns:xacro="http://ros.org/wiki/xacro">
+
+<xacro:macro name="prosilica_cam_gazebo_v0" params="camera_name frame_name">
+  <gazebo reference="${frame_name}_frame">
+    <sensor type="camera" name="${frame_name}_sensor">
+      <always_on>true</always_on>
+      <update_rate>20.0</update_rate>
+      <camera>
+        <horizontal_fov>${M_PI/4}</horizontal_fov>
+        <image>
+          <format>R8G8B8</format>
+          <width>2448</width>
+          <height>2050</height>
+        </image>
+        <clip>
+          <near>0.1</near>
+          <far>100</far>
+        </clip>
+      </camera>
+      <plugin name="${frame_name}_controller" filename="libgazebo_ros_prosilica.so">
+        <updateRate>20.0</updateRate>
+        <cameraName>${camera_name}</cameraName>
+        <imageTopicName>image_raw</imageTopicName>
+        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
+        <pollServiceName>request_image</pollServiceName>
+        <frameName>${frame_name}_optical_frame</frameName>
+        <CxPrime>1224.5</CxPrime>
+        <Cx>1224.5</Cx>
+        <Cy>1025.5</Cy>
+        <focalLength>2954.998083</focalLength>
+        <distortionK1>0.0</distortionK1>
+        <distortionK2>0.0</distortionK2>
+        <distortionK3>0.0</distortionK3>
+        <distortionT1>0.0</distortionT1>
+        <distortionT2>0.0</distortionT2>
+      </plugin>
+    </sensor>
+    <material value="Gazebo/Black" />
+  </gazebo>
+</xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/prosilica_gc2450_camera.urdf.xacro
@@ -0,0 +1,49 @@
+<?xml version="1.0"?>
+<root xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+      xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+      xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+      xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/prosilica_gc2450_camera.gazebo.xacro" />
+
+  <xacro:macro name="prosilica_cam_v0" params="frame_name parent *origin camera_name">
+    <joint name="${frame_name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${frame_name}_frame"/>
+    </joint>
+    <link name="${frame_name}_frame">
+
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+
+    </link>
+
+    <joint name="${frame_name}_optical_frame_joint" type="fixed">
+      <origin xyz="${cal_high_def_x}            ${cal_high_def_y}         ${cal_high_def_z}"
+                rpy="${-M_PI/2+cal_high_def_roll} ${0.0+cal_high_def_pitch} ${-M_PI/2+cal_high_def_yaw}" />
+      <parent link="${frame_name}_frame"/>
+      <child link="${frame_name}_optical_frame"/>
+    </joint>
+    <link name="${frame_name}_optical_frame">
+
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" rpy="0 0 0"/>
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+
+    </link>
+
+    <!-- extensions -->
+    <xacro:prosilica_cam_gazebo_v0 camera_name="${camera_name}" frame_name="${frame_name}" />
+  </xacro:macro>
+
+</root>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/stereo_camera.gazebo.xacro
@@ -0,0 +1,23 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- this macro is used for creating wide and narrow double stereo camera in simulation -->
+  <xacro:macro name="stereo_camera_gazebo_v0" params="name focal_length hfov image_width image_height">
+
+    <gazebo reference="${name}_link">
+      <material value="PR2/Blue" />
+      <turnGravityOff value="true" />
+    </gazebo>
+
+    <gazebo reference="${name}_optical_frame">
+      <material value="Gazebo/White" />
+      <turnGravityOff value="true" />
+    </gazebo>
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/stereo_camera.urdf.xacro
@@ -0,0 +1,71 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- stereo camera macro uses wge100_camera macros -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/wge100_camera.urdf.xacro" />
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/stereo_camera.gazebo.xacro" />
+
+  <xacro:property name="stereo_dx" value="0.00" />
+  <xacro:property name="stereo_dy" value="-0.09" /> <!-- +y to the left -->
+  <xacro:property name="stereo_dz" value="0.00" />
+  <xacro:property name="stereo_rx" value="0.00" />
+  <xacro:property name="stereo_ry" value="0.00" />
+  <xacro:property name="stereo_rz" value="0.00" />
+
+  <!-- this macro is used for creating wide and narrow double stereo camera links -->
+  <xacro:macro name="stereo_camera_v0" params="name parent focal_length hfov image_format image_width image_height *origin">
+
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <!-- camera link is at center of the optical frame, but in x-forward notation -->
+    <link name="${name}_link">
+
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01"  iyz="0"  izz="0.01" /> <!-- this inertia is made up for now. -->
+      </inertial>
+
+    </link>
+
+    <!-- attach optical frame to the camera link -->
+    <joint name="${name}_optical_frame_joint" type="fixed">
+      <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" /> <!-- rotate frame from x-forward to z-forward camera coords -->
+      <parent link="${name}_link"/>
+      <child link="${name}_optical_frame"/>
+    </joint>
+    <!-- optical frame for the stereo camera, with z-forward notation, this is the frame stereo camera images users should refer to -->
+    <link name="${name}_optical_frame" type="camera"/>
+
+    <!-- stereo left camera -->
+    <xacro:wge100_camera_v0 name="${name}_l_stereo_camera" camera_name="${name}/left" image_format="${image_format}" image_topic_name="image_raw"
+                            camera_info_topic_name="camera_info" parent="${name}_link"
+                            hfov="${hfov}" focal_length="${focal_length}"
+                            frame_id="${name}_optical_frame" hack_baseline="0"
+                            image_width="${image_width}" image_height="${image_height}">
+      <origin xyz="0 0 0" rpy="0 0 0" />
+    </xacro:wge100_camera_v0>
+
+    <!-- stereo right camera -->
+    <xacro:wge100_camera_v0 name="${name}_r_stereo_camera" camera_name="${name}/right" image_format="${image_format}" image_topic_name="image_raw"
+                            camera_info_topic_name="camera_info" parent="${name}_l_stereo_camera_frame"
+                            hfov="${hfov}" focal_length="${focal_length}"
+                            frame_id="${name}_optical_frame" hack_baseline="${-stereo_dy}"
+                            image_width="${image_width}" image_height="${image_height}">
+      <origin xyz="${stereo_dx} ${stereo_dy} ${stereo_dz}" rpy="${stereo_rx} ${stereo_ry} ${stereo_rz}" />
+    </xacro:wge100_camera_v0>
+
+    <!-- extensions -->
+    <xacro:stereo_camera_gazebo_v0 name="${name}" focal_length="${focal_length}" hfov="${hfov}"
+                                   image_width="${image_width}" image_height="${image_height}"/>
+
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/wge100_camera.gazebo.xacro
@@ -0,0 +1,46 @@
+<?xml version="1.0"?>
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+  <xacro:macro name="wge100_camera_gazebo_v0" params="name camera_name image_format image_topic_name camera_info_topic_name hfov focal_length frame_id hack_baseline image_width image_height">
+    <gazebo reference="${name}_frame">
+      <sensor type="camera" name="${name}_sensor">
+        <always_on>true</always_on>
+        <update_rate>25.0</update_rate>
+        <camera>
+          <horizontal_fov>${hfov*M_PI/180.0}</horizontal_fov>
+          <image>
+            <format>${image_format}</format>
+            <width>${image_width}</width>
+            <height>${image_height}</height>
+          </image>
+          <clip>
+            <near>0.1</near>
+            <far>100</far>
+          </clip>
+        </camera>
+        <plugin name="${name}_controller" filename="libgazebo_ros_camera.so">
+          <alwaysOn>true</alwaysOn>
+          <updateRate>25.0</updateRate>
+          <cameraName>${camera_name}</cameraName>
+          <imageTopicName>${image_topic_name}</imageTopicName>
+          <cameraInfoTopicName>${camera_info_topic_name}</cameraInfoTopicName>
+          <frameName>${frame_id}</frameName>
+          <hackBaseline>${hack_baseline}</hackBaseline>
+          <CxPrime>${(image_width+1)/2}</CxPrime>
+          <Cx>${(image_width+1)/2}</Cx>
+          <Cy>${(image_height+1)/2}</Cy>
+          <!-- image_width / (2*tan(hfov_radian /2)) -->
+          <!-- 320 for wide and 772.55 for narrow stereo camera -->
+          <focalLength>${focal_length}</focalLength>
+          <distortionK1>0.0</distortionK1>
+          <distortionK2>0.0</distortionK2>
+          <distortionK3>0.0</distortionK3>
+          <distortionT1>0.0</distortionT1>
+          <distortionT2>0.0</distortionT2>
+        </plugin>
+      </sensor>
+      <turnGravityOff>true</turnGravityOff>
+      <material>PR2/Blue</material>
+    </gazebo>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/sensors/wge100_camera.urdf.xacro
@@ -0,0 +1,47 @@
+<?xml version="1.0"?>
+<!-- XML namespaces -->
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/wge100_camera.gazebo.xacro" />
+
+  <!-- hack_baseline is used to simulate right stereo camera projection matrix translation to left stereo camera frame, currently on the hardware,
+       custom left stereo camera frame_id is passed to right stereo wge100 camera node at launch time, baseline is stored on the camera. -->
+  <xacro:macro name="wge100_camera_v0" params="name camera_name image_format image_topic_name camera_info_topic_name parent hfov focal_length frame_id hack_baseline image_width image_height *origin">
+
+    <joint name="${name}_frame_joint" type="fixed">
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_frame"/>
+    </joint>
+    <link name="${name}_frame">
+
+      <inertial>
+        <mass value="0.01" />
+        <origin xyz="0 0 0" />
+        <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
+                 iyy="0.001"  iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+
+    </link>
+
+    <joint name="${name}_optical_frame_joint" type="fixed">
+      <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" />
+      <parent link="${name}_frame" />
+      <child link="${name}_optical_frame"/>
+    </joint>
+    <link name="${name}_optical_frame"/>
+
+    <!-- extensions -->
+    <xacro:wge100_camera_gazebo_v0 name="${name}" camera_name="${camera_name}" image_format="${image_format}" image_topic_name="${image_topic_name}"
+                                   camera_info_topic_name="${camera_info_topic_name}"
+                                   hfov="${hfov}" focal_length="${focal_length}"
+                                   frame_id="${frame_id}" hack_baseline="${hack_baseline}"
+                                   image_width="${image_width}" image_height="${image_height}"/>
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/shoulder_v0/shoulder.gazebo.xacro
@@ -0,0 +1,40 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_shoulder_gazebo_v0" params="side">
+
+    <!-- Shoulder pan -->
+    <gazebo reference="${side}_shoulder_pan_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_shoulder_pan_joint">
+      <stopKd value="1.0" />
+      <stopKp value="1000000.0" />
+    </gazebo>
+
+    <!-- Shoulder lift -->
+    <gazebo reference="${side}_shoulder_lift_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_shoulder_lift_joint">
+      <stopKd value="1.0" />
+      <stopKp value="1000000.0" />
+    </gazebo>
+  </xacro:macro>
+
+  <!-- Upperarm roll: internal fixed attchment point for upper arm -->
+  <xacro:macro name="pr2_upper_arm_roll_gazebo_v0" params="side" >
+    <gazebo reference="${side}_upper_arm_roll_link">
+      <material value="PR2/RollLinks" />
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_upper_arm_roll_joint">
+      <stopKd value="1.0" />
+      <stopKp value="1000000.0" />
+      <fudgeFactor value="0.5" />
+    </gazebo>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/shoulder_v0/shoulder.transmission.xacro
@@ -0,0 +1,35 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_shoulder_transmission_v0" params="side">
+
+    <!-- Shoulder pan -->
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${side}_shoulder_pan_trans">
+      <joint name="${side}_shoulder_pan_joint"/>
+      <actuator name="${side}_shoulder_pan_motor"/>
+      <mechanicalReduction>${13/3 * 250.532/17.19 / cal_r_shoulder_pan_gearing}</mechanicalReduction>
+      <compensator k_belt="4000.0" mass_motor="0.05" kd_motor="15.0" lambda_motor="40.0" lambda_joint="40.0" lambda_combined="0.0"/>
+    </transmission>
+
+    <!-- Shoulder lift -->
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${side}_shoulder_lift_trans">
+      <joint name="${side}_shoulder_lift_joint"/>
+      <actuator name="${side}_shoulder_lift_motor"/>
+      <mechanicalReduction>${13/3 * 245.532/17.19 / cal_r_shoulder_lift_gearing}</mechanicalReduction>
+      <compensator k_belt="4000.0" mass_motor="0.05" kd_motor="10.0" lambda_motor="60.0" lambda_joint="60.0" lambda_combined="0.0"/>
+    </transmission>
+
+  </xacro:macro>
+
+  <xacro:macro name="pr2_upper_arm_roll_transmission_v0" params="side" >
+    <!-- Upperarm roll: internal fixed attchment point for upper arm -->
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${side}_upper_arm_roll_trans">
+      <actuator name="${side}_upper_arm_roll_motor" />
+      <joint name="${side}_upper_arm_roll_joint" />
+      <mechanicalReduction>${13/3 * 129.53/17.19 / cal_r_upper_arm_roll_gearing}</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/shoulder_v0/shoulder.urdf.xacro
@@ -0,0 +1,167 @@
+<?xml version="1.0"?>
+
+<!-- XML namespaces -->
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- Things that are needed only for Gazebo (not the physical robot).  These include
+       sensor and controller plugin specifications -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/shoulder_v0/shoulder.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/shoulder_v0/shoulder.transmission.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/common.xacro" />
+
+  <xacro:property name="shoulder_lift_length" value="0.10" />  <!--TODO Define and give source-->
+  <xacro:property name="shoulder_lift_radius" value="0.12" />  <!--TODO Define and give source-->
+
+ <!-- ============================   Shoulder   ============================ -->
+
+  <xacro:macro name="pr2_shoulder_v0" params="side parent reflect *origin">
+
+    <!-- Shoulder pan -->
+    <joint name="${side}_shoulder_pan_joint" type="revolute">
+      <axis xyz="0 0 1" />
+      <xacro:insert_block name="origin" /> <!-- transform from parent link to this joint frame -->
+      <parent link="${parent}"/>
+      <child link="${side}_shoulder_pan_link"/>
+      <limit lower="${reflect*M_PI/4-1.5}"  upper="${reflect*M_PI/4+1.5}"
+             effort="30" velocity="${VELOCITY_LIMIT_SCALE*3.48}" /> <!-- alpha tested velocity and effort limits -->
+
+      <dynamics damping="10.0" />
+
+      <safety_controller k_position="100" k_velocity="10"
+                         soft_lower_limit="${reflect*M_PI/4-1.5+0.15}"
+                         soft_upper_limit="${reflect*M_PI/4+1.5-0.15}" />
+
+      <!-- joint angle when the rising or the falling flag is activated on PR2 -->
+      <calibration  rising="${(reflect*M_PI/4)*cal_r_shoulder_pan_gearing+cal_r_shoulder_pan_flag}" />
+
+    </joint>
+    <link name="${side}_shoulder_pan_link">
+
+
+      <inertial>
+        <mass value="25.799322" />
+        <origin xyz="-0.001201 0.024513 -0.098231" rpy="0 0 0"/>
+        <inertia ixx="0.866179142480"  ixy="-0.06086507933"  ixz="-0.12118061183"
+                 iyy="0.87421714893"  iyz="-0.05886609911"
+                 izz="0.27353821674" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.dae"  />
+        </geometry>
+        <material name="Blue" />
+      </visual>
+
+      <collision>
+        <origin xyz="0.0 0 0.0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_pan.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Shoulder lift -->
+    <joint name="${side}_shoulder_lift_joint" type="revolute">
+      <axis xyz="0 1 0"/>
+
+      <!-- Limits updated from Function's CAD values as of 2009_02_24 (link_data.xls) -->
+      <limit lower="-0.5236" upper="1.3963"
+             effort="30" velocity="${VELOCITY_LIMIT_SCALE*3.47}" /> <!-- alpha tested velocity and effort limits -->
+
+      <safety_controller k_position="100" k_velocity="10"
+                         soft_lower_limit="${-0.5236+0.17}" soft_upper_limit="${1.3963-0.10}" />
+      <calibration falling="${cal_r_shoulder_lift_flag}" />
+      <dynamics damping="10.0" />
+      <origin xyz="0.1 0 0" rpy="0 0 0" />
+      <parent link="${side}_shoulder_pan_link"/>
+      <child link="${side}_shoulder_lift_link"/>
+    </joint>
+    <link name="${side}_shoulder_lift_link">
+
+      <inertial>
+        <mass value="2.74988" />
+        <origin xyz="0.02195 -0.02664 -0.03127" rpy="0 0 0"/>
+        <inertia ixx="0.02105584615" ixy="0.00496704022"  ixz="-0.00194808955"
+                 iyy="0.02127223737" iyz="0.00110425490"
+                 izz="0.01975753814" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.dae"  />
+        </geometry>
+        <material name="Grey" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/shoulder_lift.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- Upper arm roll is separate macro -->
+    <xacro:pr2_upper_arm_roll_v0 side="${side}" parent="${side}_shoulder_lift_link" reflect="${reflect}" >
+      <origin xyz="0 0 0" rpy="0 0 0" />
+    </xacro:pr2_upper_arm_roll_v0>
+
+    <!-- extensions -->
+    <xacro:pr2_shoulder_gazebo_v0 side="${side}" />
+    <xacro:pr2_shoulder_transmission_v0 side="${side}" />
+
+  </xacro:macro>
+
+  <!-- Upperarm roll: internal fixed attchment point for upper arm -->
+  <xacro:macro name="pr2_upper_arm_roll_v0" params="side parent reflect *origin">
+    <joint name="${side}_upper_arm_roll_joint" type="revolute">
+      <axis xyz="1 0 0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}" />
+      <child link="${side}_upper_arm_roll_link"/>
+      <limit lower="${reflect*1.55-2.35}" upper="${reflect*1.55+2.35}" effort="30" velocity="${VELOCITY_LIMIT_SCALE*5.45}" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_position="100" k_velocity="2" soft_lower_limit="${reflect*1.55-2.35+0.15}" soft_upper_limit="${reflect*1.55+2.35-0.15}" />
+      <calibration rising="${(reflect*M_PI/2)*cal_r_upper_arm_roll_gearing + cal_r_upper_arm_roll_flag}" />
+      <dynamics damping="0.1" />
+    </joint>
+    <link name="${side}_upper_arm_roll_link">
+
+
+      <inertial>
+        <!-- dummy mass, to be removed -->
+        <mass value="0.1" />
+        <origin xyz="0.0 0 0" rpy="0 0 0" />
+        <inertia  ixx="0.01" ixy="0.00"  ixz="0.00"
+                  iyy="0.01" iyz="0.00"
+                  izz="0.01" />
+      </inertial>
+      <visual>
+        <!-- TODO: This component doesn't actually have a mesh -->
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll.stl"  />
+        </geometry>
+
+        <material name="RollLinks" />
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/shoulder_v0/upper_arm_roll_L.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <!-- extensions -->
+    <xacro:pr2_upper_arm_roll_gazebo_v0 side="${side}" />
+    <xacro:pr2_upper_arm_roll_transmission_v0 side="${side}" />
+
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/tilting_laser_v0/tilting_laser.gazebo.xacro
@@ -0,0 +1,11 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+  <xacro:macro name="pr2_tilting_laser_gazebo_v0" params="name">
+    <gazebo reference="${name}_mount_link">
+    </gazebo>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/tilting_laser_v0/tilting_laser.transmission.xacro
@@ -0,0 +1,14 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+  <xacro:macro name="pr2_tilting_laser_transmission_v0" params="name">
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${name}_mount_trans">
+      <actuator name="${name}_mount_motor" />
+      <joint name="${name}_mount_joint" />
+      <mechanicalReduction>-6.05</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/tilting_laser_v0/tilting_laser.urdf.xacro
@@ -0,0 +1,60 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/tilting_laser_v0/tilting_laser.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/tilting_laser_v0/tilting_laser.transmission.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/hokuyo_lx30_laser.urdf.xacro" />
+
+  <xacro:macro name="pr2_tilting_laser_v0" params="name parent laser_calib_ref *origin">
+
+    <joint name="${name}_mount_joint" type="revolute">
+      <axis xyz="0 1 0" />
+      <limit lower="-0.7854" upper="1.48353" effort="0.65" velocity="10.0" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_position="100" k_velocity="0.05" soft_lower_limit="${-0.7854+0.05}" soft_upper_limit="${1.48353-0.05}" />
+      <calibration falling="${laser_calib_ref}" />
+      <dynamics damping="0.008" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_mount_link"/>
+    </joint>
+    <link name="${name}_mount_link">
+
+      <inertial>
+        <mass value="0.591" />
+        <origin xyz="-0.001136 0.00167 -0.00713" rpy="0 0 0" />
+        <inertia ixx="0.001195273" ixy="0.000023087" ixz="0.000037467"
+                 iyy="0.001083956" iyz="0.000034906"
+                 izz="0.000795014" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/tilting_laser_v0/tilting_hokuyo.dae" />
+        </geometry>
+
+        <material name="Red" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/tilting_laser_v0/tilting_hokuyo_L.stl" />
+        </geometry>
+      </collision>
+    </link>
+
+    <xacro:hokuyo_lx30_laser_v0 name="${name}" parent="${name}_mount" ros_topic="tilt_scan" update_rate="40" min_angle="-1.3962634" max_angle="1.3962634" >
+      <origin xyz="0 0 0.03" rpy="0 0 0" />
+    </xacro:hokuyo_lx30_laser_v0>
+
+    <!-- extensions -->
+    <xacro:pr2_tilting_laser_gazebo_v0 name="${name}"/>
+    <xacro:pr2_tilting_laser_transmission_v0 name="${name}"/>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/torso_v0/torso.gazebo.xacro
@@ -0,0 +1,37 @@
+<?xml version="1.0"?>
+
+<robot xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_torso_gazebo_v0" params="name">
+
+    <gazebo reference="${name}_link">
+      <sensor type="contact" name="${name}_contact_sensor">
+        <contact>
+          <collision>${name}_link_geom</collision>
+        </contact>
+        <update_rate>100.0</update_rate>
+        <plugin name="${name}_gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
+          <alwaysOn>true</alwaysOn>
+          <updateRate>100.0</updateRate>
+          <bumperTopicName>${name}_bumper</bumperTopicName>
+          <frameName>world</frameName>
+        </plugin>
+      </sensor>
+    </gazebo>
+
+    <gazebo>
+      <joint type="screw" name="${name}_screw_torso_lift_joint">
+          <parent>${name}_link</parent>
+          <child>${name}_motor_screw_link</child>
+          <axis>
+            <xyz>0 0 1</xyz>
+          </axis>
+          <thread_pitch>3141.6</thread_pitch>
+      </joint>
+    </gazebo>
+
+  </xacro:macro>
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/torso_v0/torso.transmission.xacro
@@ -0,0 +1,22 @@
+<?xml version="1.0"?>
+
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_torso_transmission_v0" params="name">
+
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${name}_trans">
+      <actuator name="${name}_motor" />
+      <joint name="${name}_joint" />
+      <mechanicalReduction>-47641.53</mechanicalReduction>
+      <simulated_actuated_joint name="${name}_motor_screw_joint"
+                                simulated_reduction="3141.6" />
+    </transmission>
+
+  </xacro:macro>
+
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/torso_v0/torso.urdf.xacro
@@ -0,0 +1,122 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:include filename="$(find xacro)/test/robots/pr2/torso_v0/torso.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/torso_v0/torso.transmission.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/sensors/microstrain_3dmgx2_imu.urdf.xacro" />
+
+  <xacro:macro name="pr2_torso_v0" params="name parent *origin">
+    <joint name="${name}_joint" type="prismatic">
+      <axis xyz="0 0 1" />
+      <limit lower="0.0" upper="0.33" effort="10000" velocity="0.013"/> <!-- alpha tested velocity and effort limits -->
+      <safety_controller  k_velocity="2000000" soft_lower_limit="${0.0+0.0115}" soft_upper_limit="${0.33-0.005}" k_position="100" />
+      <calibration falling="0.00475" />
+      <dynamics damping="20000.0" />
+      <xacro:insert_block name="origin" />
+      <parent link="${parent}"/>
+      <child link="${name}_link"/>
+    </joint>
+    <link name="${name}_link">
+
+      <inertial>
+        <mass value="36.248046" />
+        <origin xyz="-0.1 0 -0.0885" />
+        <inertia ixx="2.771653750257" ixy="0.004284522609" ixz="-0.160418504506"
+                 iyy="2.510019507959" iyz="0.029664468704" izz="0.526432355569" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/torso_v0/torso_lift.dae"  />
+        </geometry>
+
+        <material name="Grey2" />
+      </visual>
+
+      <collision name="${name}_collision">
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/torso_v0/torso_lift_L.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <joint name="l_${name}_side_plate_joint" type="fixed">
+      <origin xyz="0.0535 0.209285 0.176625" /> <!-- location of bottom front bolt hole location -->
+      <parent link="${name}_link"/>
+      <child link="l_${name}_side_plate_link"/>
+    </joint>
+    <link name="l_${name}_side_plate_link">
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="-0.0625 0.0 0.05" />  <!-- center of the 12.5cm by 10cm bolt hole pattern -->
+        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
+                 iyy="0.001" iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+    </link>
+
+    <joint name="r_${name}_side_plate_joint" type="fixed">
+      <origin xyz="0.0535  -0.209285 0.176625" /> <!-- location of bottom front bolt hole location -->
+      <parent link="${name}_link"/>
+      <child link="r_${name}_side_plate_link"/>
+    </joint>
+    <link name="r_${name}_side_plate_link">
+      <inertial>
+        <mass value="0.1" />
+        <origin xyz="-0.0625 0.0 0.05" />  <!-- center of the 12.5cm by 10cm bolt hole pattern -->
+        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
+                 iyy="0.001" iyz="0.0"
+                 izz="0.001" />
+      </inertial>
+    </link>
+
+    <!-- actuated motor screw joint -->
+    <link name="${name}_motor_screw_link">
+      <inertial>
+        <mass value="1.0" />
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <inertia  ixx="0.001" ixy="0.0" ixz="0.0"
+                  iyy="0.001" iyz="0.0"
+                  izz="0.001" />
+      </inertial>
+      <!-- for debugging only
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.5 0.7 0.01" />
+        </geometry>
+      </visual>
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <box size="0.5 0.7 0.01" />
+        </geometry>
+      </collision>
+      -->
+    </link>
+    <joint name="${name}_motor_screw_joint" type="continuous">
+      <origin xyz="-0.15 0.0 0.7"/>
+      <axis xyz="0 0 1"/>
+      <parent link="${parent}"/>
+      <child link="${name}_motor_screw_link"/>
+      <dynamics damping="0.0001" />
+    </joint>
+
+    <!-- extensions -->
+    <xacro:pr2_torso_gazebo_v0 name="${name}" />
+    <xacro:pr2_torso_transmission_v0 name="${name}" />
+
+    <!-- imu -->
+    <xacro:microstrain_3dmgx2_imu_v0 name="imu" parent="${name}" imu_topic="torso_lift_imu/data" update_rate="100.0" stdev="0.00017" >
+        <origin xyz="-0.02977 -0.1497 0.164" rpy="0 ${M_PI} 0" />
+    </xacro:microstrain_3dmgx2_imu_v0>
+
+  </xacro:macro>
+
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/upper_arm_v0/upper_arm.gazebo.xacro
@@ -0,0 +1,39 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <xacro:macro name="pr2_upper_arm_gazebo_v0" params="side">
+    <gazebo reference="${side}_upper_arm_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+  </xacro:macro>
+
+  <!-- Elbow flex -->
+  <xacro:macro name="pr2_elbow_flex_gazebo_v0" params="side">
+    <!-- testing initial joint position, to be parsed at urdf2gazebo parse time -->
+    <gazebo reference="${side}_elbow_flex_joint">
+      <initial_joint_position>-1.0</initial_joint_position>
+    </gazebo>
+
+    <gazebo reference="${side}_elbow_flex_link">
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_elbow_flex_joint">
+      <stopKd value="1.0" />
+      <stopKp value="1000000.0" />
+    </gazebo>
+  </xacro:macro>
+
+  <!-- Forearm roll -->
+  <xacro:macro name="pr2_forearm_roll_gazebo_v0" params="side" >
+    <gazebo reference="${side}_forearm_roll_link">
+      <material value="PR2/RollLinks" />
+      <turnGravityOff>true</turnGravityOff>
+    </gazebo>
+    <gazebo reference="${side}_forearm_roll_joint">
+      <fudgeFactor value="0.5" />
+    </gazebo>
+  </xacro:macro>
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/upper_arm_v0/upper_arm.transmission.xacro
@@ -0,0 +1,28 @@
+<?xml version="1.0"?>
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- ============================   Upper Arm   ============================ -->
+
+
+  <xacro:macro name="pr2_elbow_flex_transmission_v0" params="side">
+    <!-- Elbow flex -->
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${side}_elbow_flex_trans">
+      <actuator name="${side}_elbow_flex_motor" />
+      <joint name="${side}_elbow_flex_joint" />
+      <mechanicalReduction>${-13/3 * 127.532/15.28}</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+
+  <!-- Forearm roll -->
+  <xacro:macro name="pr2_forearm_roll_transmission_v0" params="side" >
+    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${side}_forearm_roll_trans">
+      <actuator name="${side}_forearm_roll_motor" />
+      <joint name="${side}_forearm_roll_joint" />
+      <mechanicalReduction>${-576/25 * 55/14}</mechanicalReduction>
+    </transmission>
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/robots/pr2/upper_arm_v0/upper_arm.urdf.xacro
@@ -0,0 +1,173 @@
+<?xml version="1.0"?>
+
+<!-- XML namespaces -->
+<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
+       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
+       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
+       xmlns:xacro="http://ros.org/wiki/xacro">
+
+  <!-- Things that are needed only for Gazebo (not the physical robot).  These include
+       sensor and controller plugin specifications -->
+  <xacro:include filename="$(find xacro)/test/robots/pr2/upper_arm_v0/upper_arm.gazebo.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/upper_arm_v0/upper_arm.transmission.xacro" />
+  <xacro:include filename="$(find xacro)/test/robots/pr2/common.xacro" />
+
+  <!-- Inertial properties differ slightly for left vs right arm -->
+  <xacro:property name="uar_xyz1" value= "0.21398" />
+  <xacro:property name="uar_xyz2" value="-0.01621" />
+  <xacro:property name="uar_xyz3" value="-0.00020" />
+  <xacro:property name="uar_ixx"  value= "0.01537748957" />
+  <xacro:property name="uar_ixy"  value= "0.00375711247" />
+  <xacro:property name="uar_ixz"  value="-0.00070852914" />
+  <xacro:property name="uar_iyy"  value= "0.07473670440" />
+  <xacro:property name="uar_iyz"  value="-0.00017936450" />
+  <xacro:property name="uar_izz"  value= "0.07608763307" />
+
+  <xacro:property name="ual_xyz1" value= "0.21405" />
+  <xacro:property name="ual_xyz2" value= "0.01658" />
+  <xacro:property name="ual_xyz3" value="-0.00057" />
+  <xacro:property name="ual_ixx"  value= "0.01530603856" />
+  <xacro:property name="ual_ixy"  value="-0.00339324862" />
+  <xacro:property name="ual_ixz"  value= "0.00060765455" />
+  <xacro:property name="ual_iyy"  value= "0.07473694455" />
+  <xacro:property name="ual_iyz"  value="-0.00019953729" />
+  <xacro:property name="ual_izz"  value= "0.07601594191" />
+
+
+  <!-- ============================   Upper Arm   ============================ -->
+  <!-- Includes elbow flex, FA roll joints in macros below -->
+  <xacro:macro name="pr2_upper_arm_v0" params="side parent reflect">
+    <joint name="${side}_upper_arm_joint" type="fixed">
+      <origin xyz="0 0 0" rpy="0 0 0" />
+      <parent link="${parent}"/>
+      <child link="${side}_upper_arm_link"/>
+    </joint>
+    <link name="${side}_upper_arm_link">
+
+      <inertial>
+        <!-- NOTE:reflect==-1 for right side, reflect==1 for the left side -->
+        <mass value="6.01769" />
+        <origin xyz="${0.5*((reflect+1)*ual_xyz1+(1-reflect)*uar_xyz1)} ${0.5*((reflect+1)*ual_xyz2+(1-reflect)*uar_xyz2)} ${0.5*((reflect+1)*ual_xyz3+(1-reflect)*uar_xyz3)}" />
+        <inertia  ixx="${0.5*((reflect+1)*ual_ixx+(1-reflect)*uar_ixx)}"
+                  ixy="${0.5*((reflect+1)*ual_ixy+(1-reflect)*uar_ixy)}"
+                  ixz="${0.5*((reflect+1)*ual_ixz+(1-reflect)*uar_ixz)}"
+                  iyy="${0.5*((reflect+1)*ual_iyy+(1-reflect)*uar_iyy)}"
+                  iyz="${0.5*((reflect+1)*ual_iyz+(1-reflect)*uar_iyz)}"
+                  izz="${0.5*((reflect+1)*ual_izz+(1-reflect)*uar_izz)}" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.dae"  />
+        </geometry>
+
+        <material name="Green" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/upper_arm.stl"  />
+        </geometry>
+      </collision>
+
+    </link>
+
+    <!-- extensions-->
+    <xacro:pr2_upper_arm_gazebo_v0 side="${side}" /> <!-- Has upperarm link -->
+    <!-- No transmission, since this a fixed joint w/o actuator -->
+
+    <!-- Elbow flex, FA roll macros -->
+    <xacro:pr2_forearm_roll_v0 side="${side}" parent="${side}_elbow_flex_link" reflect="${reflect}" />
+    <xacro:pr2_elbow_flex_v0 side="${side}" parent="${side}_upper_arm_link" reflect="${reflect}" />
+  </xacro:macro>
+
+  <xacro:macro name="pr2_elbow_flex_v0" params="side parent reflect">
+    <!-- Elbow flex -->
+    <joint name="${side}_elbow_flex_joint" type="revolute">
+      <axis xyz="0 1 0" />
+      <!-- Note: Overtravel limits are 140, -7 degrees instead of 133, 0 -->
+      <limit lower="-2.3213" upper="0.00" effort="30" velocity="${VELOCITY_LIMIT_SCALE*5.5}" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_position="100" k_velocity="3" soft_lower_limit="${-2.3213+0.2}" soft_upper_limit="${0.00-0.15}" />
+      <calibration falling="${-1.1606 + cal_r_elbow_flex_flag}"/>
+      <dynamics damping="1.0" />
+      <origin xyz="0.4 0 0" rpy="0 0 0" />
+      <parent link="${parent}"/>
+      <child link="${side}_elbow_flex_link"/>
+    </joint>
+    <link name="${side}_elbow_flex_link">
+      <inertial>
+        <mass value="1.90327" />
+        <origin xyz="0.01014 0.00032 -0.01211" />
+        <inertia  ixx="0.00346541989" ixy="0.00004066825"  ixz="0.00043171614"
+                  iyy="0.00441606455"  iyz="-0.00003968914"
+                  izz="0.00359156824" />
+      </inertial>
+
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.dae"  />
+        </geometry>
+
+        <material name="Grey" />
+      </visual>
+
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/elbow_flex.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <xacro:pr2_elbow_flex_gazebo_v0 side="${side}" />
+    <xacro:pr2_elbow_flex_transmission_v0 side="${side}" />
+  </xacro:macro>
+
+  <!-- FA roll joint only -->
+  <xacro:macro name="pr2_forearm_roll_v0" params="side parent reflect">
+    <!-- forearm_roll_link is a fictitious link internal to elbow_flex_link, provides an attachment point for the actual forearm -->
+    <joint name="${side}_forearm_roll_joint" type="continuous">
+      <axis xyz="1 0 0" />
+      <limit effort="30" velocity="${VELOCITY_LIMIT_SCALE*6}" /> <!-- alpha tested velocity and effort limits -->
+      <safety_controller k_velocity="1" />
+      <calibration rising="${0.0 + cal_r_forearm_roll_flag}" />
+      <dynamics damping="0.1" />
+      <origin xyz="0 0 0" rpy="0 0 0" />
+      <parent link="${parent}"/>
+      <child link="${side}_forearm_roll_link"/>
+    </joint>
+    <!-- TODO: inertial tag should be optional -->
+    <link name="${side}_forearm_roll_link">
+      <inertial>
+        <!-- dummy masses, to be removed -->
+        <mass value="0.1" />
+        <origin xyz="0 0 0" />
+        <inertia  ixx="0.01" ixy="0.00"  ixz="0.00"
+                  iyy="0.01" iyz="0.00"
+                  izz="0.01" />
+      </inertial>
+      <visual>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll.stl"  />
+        </geometry>
+
+        <material name="RollLinks" />
+      </visual>
+      <!-- TODO: collision tag should be optional -->
+      <collision>
+        <origin xyz="0 0 0" rpy="0 0 0" />
+        <geometry>
+          <mesh filename="package://pr2_description/meshes/upper_arm_v0/forearm_roll_L.stl"  />
+        </geometry>
+      </collision>
+    </link>
+
+    <xacro:pr2_forearm_roll_gazebo_v0 side="${side}" />
+    <xacro:pr2_forearm_roll_transmission_v0 side="${side}" />
+  </xacro:macro>
+
+</robot>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/settings.yaml
@@ -0,0 +1,9 @@
+arms:
+  inc1:
+    file:  include1.xacro
+    macro: foo
+  inc2:
+    file:  include2.xacro
+    macro: foo
+    props:
+      port: 4242
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/subdir/foo.xacro
@@ -0,0 +1,3 @@
+<a xmlns:xacro="http://www.ros.org/xacro">
+    <xacro:foo/>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/subdir/include-recursive.xacro
@@ -0,0 +1,5 @@
+<a xmlns:xacro="http://www.ros.org/xacro">
+    <xacro:include filename="include1.xml"/>
+    <xacro:include filename="./include1.xml"/>
+    <xacro:include filename="$(cwd)/include1.xml"/>
+</a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/subdir/include1.xml
@@ -0,0 +1 @@
+<a><subdir_inc1/></a>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-cmake.sh
@@ -0,0 +1,37 @@
+#!/bin/bash
+
+### script for testing cmake build chain ###
+#
+# In order to check correctness of cmake macros defined in
+# cmake/xacro-extras.cmake.em, this script checks for
+# successfully running the cmake toolchain, i.e. cmake, make, make install.
+# Providing different test directories as first argument, this script can check
+# different CMakeLists.txt.
+#
+# Even better would be a unittest framework within cmake, e.g.
+# http://stackoverflow.com/questions/29818725/cmake-how-to-unit-test-your-own-cmake-script-macros-functions
+
+# Is argument $1 a valid cmake source directory?
+test -d $1 || exit 2
+test -r $1/CMakeLists.txt || exit 2
+
+dir=`basename $1`
+
+# redirect stdout and stderr to $dir.log
+exec &> $dir.log 2>&1
+
+# cleanup our build dir
+rm -rf $dir
+mkdir $dir
+cd $dir
+
+echo "*** running cmake ***"
+cmake -DCATKIN_DEVEL_PREFIX=devel -DCMAKE_INSTALL_PREFIX=install $1 || exit $?
+
+echo
+echo "*** running make ***"
+make || exit $?
+
+echo
+echo "*** running make install ***"
+make install || exit $?
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/.pc/.quilt_patches
@@ -0,0 +1 @@
+debian/patches
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/.pc/.quilt_series
@@ -0,0 +1 @@
+series
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/.pc/.version
@@ -0,0 +1 @@
+2
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/.pc/applied-patches
@@ -0,0 +1 @@
+debian-changes-0.0.0-0jammy
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/CMakeLists.txt
@@ -0,0 +1,19 @@
+cmake_minimum_required(VERSION 3.0.2)
+project(xacro-test)
+
+find_package(catkin REQUIRED COMPONENTS xacro)
+
+catkin_package()
+
+## manual usage of eval
+xacro_add_xacro_file(../include1.xml manual1.xml)
+list(APPEND xacro_outputs ${XACRO_OUTPUT_FILE})
+
+xacro_add_xacro_file(../include2.xml manual2.xml OUTPUT MY_OUTPUT_VAR)
+list(APPEND xacro_outputs ${MY_OUTPUT_VAR})
+
+add_custom_target(xacro_target ALL DEPENDS ${xacro_outputs})
+xacro_install(xacro_target ${xacro_outputs} DESTINATION xml)
+
+## convenience function
+xacro_add_files(TARGET xacro test.xacro REMAP bar:=foo foo:=bar INSTALL)
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/changelog
@@ -0,0 +1,7 @@
+ros-noetic-xacro-test (0.0.0-0jammy) jammy; urgency=high
+
+  * Autogenerated, no changelog for this version found in CHANGELOG.rst.
+
+ -- Robert Haschke <rhaschke@techfak.uni-bielefeld.de>  Thu, 15 Aug 2024 12:16:51 -0000
+
+
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/compat
@@ -0,0 +1 @@
+9
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/control
@@ -0,0 +1,12 @@
+Source: ros-noetic-xacro-test
+Section: misc
+Priority: optional
+Maintainer: Robert Haschke <rhaschke@techfak.uni-bielefeld.de>
+Build-Depends: debhelper (>= 9.0.0), ros-noetic-catkin (>= 0.5.68)
+Homepage: 
+Standards-Version: 3.9.2
+
+Package: ros-noetic-xacro-test
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}, 
+Description: test xacro's cmake extension
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/patches/debian-changes-0.0.0-0jammy
@@ -0,0 +1,66 @@
+Description: <short summary of the patch>
+ TODO: Put a short summary on the line above and replace this paragraph
+ with a longer explanation of this change. Complete the meta-information
+ with other relevant fields (see below for details). To make it easier, the
+ information below has been extracted from the changelog. Adjust it or drop
+ it.
+ .
+ ros-noetic-xacro-test (0.0.0-0jammy) jammy; urgency=high
+ .
+   * Autogenerated, no changelog for this version found in CHANGELOG.rst.
+Author: Robert Haschke <rhaschke@techfak.uni-bielefeld.de>
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: <vendor|upstream|other>, <url of original patch>
+Bug: <url in upstream bugtracker>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: <no|not-needed|url proving that it has been forwarded>
+Reviewed-By: <name and email of someone who approved the patch>
+Last-Update: 2024-08-18
+
+--- /dev/null
++++ ros-noetic-xacro-test-0.0.0/CMakeLists.txt
+@@ -0,0 +1,19 @@
++cmake_minimum_required(VERSION 3.0.2)
++project(xacro-test)
++
++find_package(catkin REQUIRED COMPONENTS xacro)
++
++catkin_package()
++
++## manual usage of eval
++xacro_add_xacro_file(../include1.xml manual1.xml)
++list(APPEND xacro_outputs ${XACRO_OUTPUT_FILE})
++
++xacro_add_xacro_file(../include2.xml manual2.xml OUTPUT MY_OUTPUT_VAR)
++list(APPEND xacro_outputs ${MY_OUTPUT_VAR})
++
++add_custom_target(xacro_target ALL DEPENDS ${xacro_outputs})
++xacro_install(xacro_target ${xacro_outputs} DESTINATION xml)
++
++## convenience function
++xacro_add_files(TARGET xacro test.xacro REMAP bar:=foo foo:=bar INSTALL)
+--- /dev/null
++++ ros-noetic-xacro-test-0.0.0/package.xml
+@@ -0,0 +1,12 @@
++<?xml version="1.0"?>
++<package>
++  <name>xacro-test</name>
++  <version>0.0.0</version>
++  <description>test xacro's cmake extension</description>
++
++  <author>Robert Haschke</author>
++  <maintainer email="rhaschke@techfak.uni-bielefeld.de">Robert Haschke</maintainer>
++  <license>BSD</license>
++
++  <buildtool_depend version_gte="0.5.68">catkin</buildtool_depend>
++</package>
+--- /dev/null
++++ ros-noetic-xacro-test-0.0.0/test.xacro
+@@ -0,0 +1 @@
++<a foo="$(arg foo)" bar="$(arg bar)"/>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/patches/series
@@ -0,0 +1 @@
+debian-changes-0.0.0-0jammy
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/rules
@@ -0,0 +1,61 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# This file was originally written by Joey Hess and Craig Small.
+# As a special exception, when this file is copied by dh-make into a
+# dh-make output file, you may use that output file without restriction.
+# This special exception was added by Craig Small in version 0.37 of dh-make.
+
+# Uncomment this to turn on verbose mode.
+export DH_VERBOSE=1
+# TODO: remove the LDFLAGS override.  It's here to avoid esoteric problems
+# of this sort:
+#  https://code.ros.org/trac/ros/ticket/2977
+#  https://code.ros.org/trac/ros/ticket/3842
+export LDFLAGS=
+export PKG_CONFIG_PATH=/opt/ros/noetic/lib/pkgconfig
+# Explicitly enable -DNDEBUG, see:
+# 	https://github.com/ros-infrastructure/bloom/issues/327
+export DEB_CXXFLAGS_MAINT_APPEND=-DNDEBUG
+
+%:
+	dh $@ -v --buildsystem=cmake
+
+override_dh_auto_configure:
+	# In case we're installing to a non-standard location, look for a setup.sh
+	# in the install tree that was dropped by catkin, and source it.  It will
+	# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
+	if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi && \
+	dh_auto_configure -- \
+		-DCATKIN_BUILD_BINARY_PACKAGE="1" \
+		-DCMAKE_INSTALL_PREFIX="/opt/ros/noetic" \
+		-DCMAKE_PREFIX_PATH="/opt/ros/noetic"
+
+override_dh_auto_build:
+	# In case we're installing to a non-standard location, look for a setup.sh
+	# in the install tree that was dropped by catkin, and source it.  It will
+	# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
+	if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi && \
+	dh_auto_build
+
+override_dh_auto_test:
+	# In case we're installing to a non-standard location, look for a setup.sh
+	# in the install tree that was dropped by catkin, and source it.  It will
+	# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
+	echo -- Running tests. Even if one of them fails the build is not canceled.
+	if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi && \
+	dh_auto_test || true
+
+override_dh_shlibdeps:
+	# In case we're installing to a non-standard location, look for a setup.sh
+	# in the install tree that was dropped by catkin, and source it.  It will
+	# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
+	if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi && \
+	dh_shlibdeps -l$(CURDIR)/debian/ros-noetic-xacro-test//opt/ros/noetic/lib/
+
+override_dh_auto_install:
+	# In case we're installing to a non-standard location, look for a setup.sh
+	# in the install tree that was dropped by catkin, and source it.  It will
+	# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
+	if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi && \
+	dh_auto_install
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/source/format
@@ -0,0 +1 @@
+3.0 (quilt)
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/debian/source/options
@@ -0,0 +1,5 @@
+# Automatically add upstream changes to the quilt overlay.
+# http://manpages.ubuntu.com/manpages/trusty/man1/dpkg-source.1.html
+# This supports reusing the orig.tar.gz for debian increments.
+auto-commit
+
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/package.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+<package>
+  <name>xacro-test</name>
+  <version>0.0.0</version>
+  <description>test xacro's cmake extension</description>
+
+  <author>Robert Haschke</author>
+  <maintainer email="rhaschke@techfak.uni-bielefeld.de">Robert Haschke</maintainer>
+  <license>BSD</license>
+
+  <buildtool_depend version_gte="0.5.68">catkin</buildtool_depend>
+</package>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test-xacro-cmake/test.xacro
@@ -0,0 +1 @@
+<a foo="$(arg foo)" bar="$(arg bar)"/>
--- /dev/null
+++ ros-noetic-xacro-1.14.18/test/test_xacro.py
@@ -0,0 +1,1661 @@
+#! /usr/bin/env python
+# -*- coding: utf-8 -*-
+
+# Copyright (c) 2015, Open Source Robotics Foundation, Inc.
+# Copyright (c) 2013, Willow Garage, Inc.
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+#     * Redistributions of source code must retain the above copyright
+#       notice, this list of conditions and the following disclaimer.
+#     * Redistributions in binary form must reproduce the above copyright
+#       notice, this list of conditions and the following disclaimer in the
+#       documentation and/or other materials provided with the distribution.
+#     * Neither the name of the Open Source Robotics Foundation, Inc.
+#       nor the names of its contributors may be used to endorse or promote
+#       products derived from this software without specific prior
+#       written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+
+# Authors: Stuart Glaser, William Woodall, Robert Haschke
+# Maintainer: Robert Haschke <rhaschke@techfak.uni-bielefeld.de>
+
+from __future__ import print_function
+
+import ast
+from contextlib import contextmanager
+import itertools
+import math
+import os.path
+import re
+import shutil
+import subprocess
+import sys
+import tempfile
+import unittest
+import xacro
+import xml.dom
+from xml.dom.minidom import parseString
+
+try:
+    from cStringIO import StringIO  # Python 2.x
+except ImportError:
+    from io import StringIO  # Python 3.x
+
+try:
+    from unittest import subTest
+except ImportError:
+    # subTest was introduced in 3.4 only. Provide a dummy fallback.
+    @contextmanager
+    def subTest(msg):
+        yield None
+
+# regex to match whitespace
+whitespace = re.compile(r'\s+')
+
+
+def text_values_match(a, b):
+    # generic comparison
+    if whitespace.sub(' ', a).strip() == whitespace.sub(' ', b).strip():
+        return True
+
+    try:  # special handling of dicts: ignore order
+        a_dict = ast.literal_eval(a)
+        b_dict = ast.literal_eval(b)
+        if (isinstance(a_dict, dict) and isinstance(b_dict, dict) and a_dict == b_dict):
+            return True
+    except Exception:  # Attribute values aren't dicts
+        pass
+
+    # on failure, try to split a and b at whitespace and compare snippets
+    def match_splits(a_, b_):
+        if len(a_) != len(b_):
+            return False
+        for a, b in zip(a_, b_):
+            if a == b:
+                continue
+            try:  # compare numeric values only up to some accuracy
+                if abs(float(a) - float(b)) > 1.0e-9:
+                    return False
+            except ValueError:  # values aren't numeric and not identical
+                return False
+        return True
+
+    return match_splits(a.split(), b.split())
+
+
+def all_attributes_match(a, b):
+    if len(a.attributes) != len(b.attributes):
+        print('Different number of attributes')
+        return False
+    a_atts = a.attributes.items()
+    b_atts = b.attributes.items()
+    a_atts.sort()
+    b_atts.sort()
+
+    for a, b in zip(a_atts, b_atts):
+        if a[0] != b[0]:
+            print('Different attribute names: %s and %s' % (a[0], b[0]))
+            return False
+        if not text_values_match(a[1], b[1]):
+            print('Different attribute values: %s and %s' % (a[1], b[1]))
+            return False
+    return True
+
+
+def text_matches(a, b):
+    if text_values_match(a, b):
+        return True
+    print("Different text values: '%s' and '%s'" % (a, b))
+    return False
+
+
+def nodes_match(a, b, ignore_nodes):
+    if not a and not b:
+        return True
+    if not a or not b:
+        return False
+
+    if a.nodeType != b.nodeType:
+        print('Different node types: %s and %s' % (a, b))
+        return False
+
+    # compare text-valued nodes
+    if a.nodeType in [xml.dom.Node.TEXT_NODE,
+                      xml.dom.Node.CDATA_SECTION_NODE,
+                      xml.dom.Node.COMMENT_NODE]:
+        return text_matches(a.data, b.data)
+
+    # ignore all other nodes except ELEMENTs
+    if a.nodeType != xml.dom.Node.ELEMENT_NODE:
+        return True
+
+    # compare ELEMENT nodes
+    if a.nodeName != b.nodeName:
+        print('Different element names: %s and %s' % (a.nodeName, b.nodeName))
+        return False
+
+    if not all_attributes_match(a, b):
+        return False
+
+    a = a.firstChild
+    b = b.firstChild
+    while a or b:
+        # ignore whitespace-only text nodes
+        # we could have several text nodes in a row, due to replacements
+        while (a and
+               ((a.nodeType in ignore_nodes) or
+                (a.nodeType == xml.dom.Node.TEXT_NODE and whitespace.sub('', a.data) == ""))):
+            a = a.nextSibling
+        while (b and
+               ((b.nodeType in ignore_nodes) or
+                (b.nodeType == xml.dom.Node.TEXT_NODE and whitespace.sub('', b.data) == ""))):
+            b = b.nextSibling
+
+        if not nodes_match(a, b, ignore_nodes):
+            return False
+
+        if a:
+            a = a.nextSibling
+        if b:
+            b = b.nextSibling
+
+    return True
+
+
+def xml_matches(a, b, ignore_nodes=[]):
+    if isinstance(a, str):
+        return xml_matches(parseString(a).documentElement, b, ignore_nodes)
+    if isinstance(b, str):
+        return xml_matches(a, parseString(b).documentElement, ignore_nodes)
+    if a.nodeType == xml.dom.Node.DOCUMENT_NODE:
+        return xml_matches(a.documentElement, b, ignore_nodes)
+    if b.nodeType == xml.dom.Node.DOCUMENT_NODE:
+        return xml_matches(a, b.documentElement, ignore_nodes)
+
+    if not nodes_match(a, b, ignore_nodes):
+        print('Match failed:')
+        a.writexml(sys.stdout)
+        print()
+        print('=' * 78)
+        b.writexml(sys.stdout)
+        print()
+        return False
+    return True
+
+
+# capture output going to file=sys.stdout | sys.stderr
+@contextmanager
+def capture_stderr(function, *args, **kwargs):
+    old, sys.stderr = sys.stderr, StringIO()  # temporarily replace sys.stderr with StringIO()
+    result = function(*args, **kwargs)
+    sys.stderr.seek(0)
+    yield (result, sys.stderr.read())
+    sys.stderr = old  # restore sys.stderr
+
+
+class TestTable(unittest.TestCase):
+    def test_top(self):
+        top = xacro.Table()
+        self.assertTrue(top.top() is top)
+
+        sub = xacro.Table(top)
+        self.assertTrue(sub.top() is top)
+
+    def test_contains(self):
+        top = xacro.Table(dict(a=1))
+        self.assertTrue('a' in top)
+
+        self.assertFalse('b' in top)
+        top['b'] = 2
+        self.assertTrue('b' in top)
+
+        sub = xacro.Table(top)
+        sub['c'] = 3
+        for key in ['a', 'b', 'c']:
+            self.assertTrue(key in sub)
+
+    def test_get(self):
+        top = xacro.Table(dict(a=1))
+        self.assertEqual(top['a'], 1)
+        top['b'] = 2
+        self.assertEqual(top['b'], 2)
+
+        sub = xacro.Table(top)
+        sub['c'] = 3
+        for i, key in enumerate(['a', 'b', 'c']):
+            self.assertEqual(sub[key], i+1)
+
+    def test_del(self):
+        top = xacro.Table(dict(a=1))
+        top['b'] = 2
+        sub = xacro.Table(top)
+        sub['b'] = 3
+
+        self.assertEqual(sub['b'], 3)
+        self.assertEqual(top['b'], 2)
+
+        del sub['b']
+        self.assertFalse('b' in sub)
+        self.assertFalse('b' in top)
+
+        # redefining global symbol
+        with capture_stderr(xacro.Table.__setitem__, sub, 'a', 42) as (_, output):
+            self.assertTrue('redefining global symbol: a' in output)
+        self.assertEqual(sub['a'], 42)
+        self.assertEqual(sub.parent['a'], 1)
+
+        # removing the redefine stops before globals!
+        with capture_stderr(xacro.Table.__delitem__, sub, 'a') as (_, output):
+            self.assertTrue('Cannot remove global symbol: a' in output)
+        self.assertEqual(sub['a'], 1)
+
+
+class TestUtils(unittest.TestCase):
+    def test_capture_stderr(self, *args, **kwargs):
+        with capture_stderr(xacro.error, 'Hello World', alt_text='') as (result, output):
+            self.assertEqual(output, 'Hello World\n')
+
+
+class TestMatchXML(unittest.TestCase):
+    def test_normalize_whitespace_text(self):
+        self.assertTrue(text_matches("", " \t\n\r"))
+
+    def test_normalize_whitespace_trim(self):
+        self.assertTrue(text_matches(" foo bar ", "foo \t\n\r bar"))
+
+    def test_match_similar_numbers(self):
+        self.assertTrue(text_matches("0.123456789", "0.123456788"))
+
+    def test_mismatch_different_numbers(self):
+        self.assertFalse(text_matches("0.123456789", "0.1234567879"))
+
+    def test_match_unordered_dicts(self):
+        self.assertTrue(text_matches("{'a': 1, 'b': 2, 'c': 3}", "{'c': 3, 'b': 2, 'a': 1}"))
+
+    def test_mismatch_different_dicts(self):
+        self.assertFalse(text_matches("{'a': 1, 'b': 2, 'c': 3}", "{'c': 3, 'b': 2, 'a': 0}"))
+
+    def test_empty_node_vs_whitespace(self):
+        self.assertTrue(xml_matches('''<foo/>''', '''<foo> \t\n\r </foo>'''))
+
+    def test_whitespace_vs_empty_node(self):
+        self.assertTrue(xml_matches('''<foo> \t\n\r </foo>''', '''<foo/>'''))
+
+    def test_normalize_whitespace_nested(self):
+        self.assertTrue(xml_matches('''<a><b/></a>''', '''<a>\n<b> </b> </a>'''))
+
+    def test_ignore_comments(self):
+        self.assertTrue(xml_matches('''<a><b/><!-- foo --> <!-- bar --></a>''',
+                                    '''<a><b/></a>''', [xml.dom.Node.COMMENT_NODE]))
+
+
+class TestXacroFunctions(unittest.TestCase):
+    def test_is_valid_name(self):
+        self.assertTrue(xacro.is_valid_name("_valid_name_123"))
+        self.assertFalse(xacro.is_valid_name('pass'))     # syntactically correct keyword
+        self.assertFalse(xacro.is_valid_name('foo '))     # trailing whitespace
+        self.assertFalse(xacro.is_valid_name(' foo'))     # leading whitespace
+        self.assertFalse(xacro.is_valid_name('1234'))     # number
+        self.assertFalse(xacro.is_valid_name('1234abc'))  # number and letters
+        self.assertFalse(xacro.is_valid_name(''))         # empty string
+        self.assertFalse(xacro.is_valid_name('   '))      # whitespace only
+        self.assertFalse(xacro.is_valid_name('foo bar'))  # several tokens
+        self.assertFalse(xacro.is_valid_name('no-dashed-names-for-you'))
+        self.assertFalse(xacro.is_valid_name('invalid.too'))  # dot separates fields
+
+    def test_resolve_macro(self):
+        # define three nested dicts with the same names (keys)
+        content = {'simple': 'simple'}
+        ns2 = dict({k: v + '2' for k, v in content.items()})
+        ns1 = dict({k: v + '1' for k, v in content.items()})
+        ns1.update(ns2=ns2)
+        ns = dict(content)
+        ns.update(ns1=ns1)
+
+        self.assertEqual(xacro.resolve_macro('simple', ns, ns), (ns, ns, 'simple'))
+        self.assertEqual(xacro.resolve_macro('ns1.simple', ns, ns), (ns1, ns1, 'simple1'))
+        self.assertEqual(xacro.resolve_macro('ns1.ns2.simple', ns, ns), (ns2, ns2, 'simple2'))
+
+    def check_macro_arg(self, s, param, forward, default, rest):
+        p, v, r = xacro.parse_macro_arg(s)
+        self.assertEqual(p, param, msg="'{0}' != '{1}' parsing {2}".format(p, param, s))
+        if forward or default:
+            self.assertTrue(v is not None)
+            self.assertEqual(v[0], forward, msg="'{0}' != '{1}' parsing {2}".format(v[0], forward, s))
+            self.assertEqual(v[1], default, msg="'{0}' != '{1}' parsing {2}".format(v[1], default, s))
+        else:
+            self.assertTrue(v is None)
+        self.assertEqual(r, rest, msg="'{0}' != '{1}' parsing {2}".format(r, rest, s))
+
+    def test_parse_macro_arg(self):
+        for forward in ['', '^', '^|']:
+            defaults = ['', "'single quoted'", '"double quoted"', '${2 * (prop_with_spaces + 1)}', '$(substitution arg)',
+                        "anything~w/o~space-'space allowed in quotes'(\"as here too\")", 'unquoted']
+            if forward == '^':
+                defaults = ['']  # default allowed allowed afer ^|
+            for default in defaults:
+                seps = ['=', ':='] if forward or default else ['']
+                for sep in seps:
+                    for rest in ['', ' ', ' bar', ' bar=42']:
+                        s = 'foo{0}{1}{2}{3}'.format(sep, forward, default, rest)
+                        self.check_macro_arg(s, 'foo', 'foo' if forward else None,
+                                             default if default else None,
+                                             rest.lstrip())
+
+    def test_parse_macro_whitespace(self):
+        for ws in ['  ', ' \t ', ' \n ']:
+            self.check_macro_arg(ws + 'foo' + ws + 'bar=42' + ws, 'foo', None, None, 'bar=42' + ws)
+
+    def test_tokenize(self):
+        tokens = ['ab', 'cd', 'ef']
+        for sep in [' ', ',', ';', ', ']:
+            self.assertEqual(xacro.tokenize(sep.join(tokens)), tokens)
+
+    def test_tokenize_keep_empty(self):
+        tokens = ' '.join(['ab', ' ', 'cd', 'ef'])
+        results = xacro.tokenize(tokens, sep=' ', skip_empty=False)
+        self.assertEqual(len(results), 5)  # intermediate space becomes '   ' split into 2 empty fields
+        self.assertEqual(' '.join(results), tokens)
+
+
+# base class providing some convenience functions
+class TestXacroBase(unittest.TestCase):
+    def __init__(self, *args, **kwargs):
+        super(TestXacroBase, self).__init__(*args, **kwargs)
+        self.ignore_nodes = []
+
+    def assert_matches(self, a, b):
+        self.assertTrue(xml_matches(a, b, self.ignore_nodes))
+
+    def quick_xacro(self, xml, cli=None, **kwargs):
+        args = {}
+        if cli:
+            opts, _ = xacro.cli.process_args(cli, require_input=False)
+            args.update(vars(opts))  # initialize with cli args
+        args.update(kwargs)  # explicit function args have highest priority
+
+        doc = xacro.parse(xml)
+        xacro.filestack = None  # Reset filestack
+        xacro.process_doc(doc, **args)
+        return doc
+
+    def run_xacro(self, input_path, *args):
+        args = list(args)
+        subprocess.call(['xacro', input_path] + args)
+
+
+# class to match XML docs while ignoring any comments
+class TestXacroCommentsIgnored(TestXacroBase):
+    def __init__(self, *args, **kwargs):
+        super(TestXacroCommentsIgnored, self).__init__(*args, **kwargs)
+        self.ignore_nodes = [xml.dom.Node.COMMENT_NODE]
+
+    def test_pr2(self):
+        # run xacro on the pr2 tree snapshot
+        test_dir = os.path.abspath(os.path.dirname(__file__))
+        pr2_xacro_path = os.path.join(test_dir, 'robots', 'pr2', 'pr2.urdf.xacro')
+        pr2_golden_parse_path = os.path.join(test_dir, 'robots', 'pr2', 'pr2_1.11.4.xml')
+        self.assert_matches(
+            xml.dom.minidom.parse(pr2_golden_parse_path),
+            self.quick_xacro(open(pr2_xacro_path)))
+
+
+# standard test class (including the test from TestXacroCommentsIgnored)
+class TestXacro(TestXacroCommentsIgnored):
+    def __init__(self, *args, **kwargs):
+        super(TestXacroCommentsIgnored, self).__init__(*args, **kwargs)
+        self.ignore_nodes = []
+
+    def test_invalid_property_name(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="invalid.name"/></a>'''
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src)
+
+    def test_double_underscore_property_name_raises(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="__hidden"/></a>'''
+        with self.assertRaises(xacro.XacroException) as cm:
+            self.quick_xacro(src)
+        self.assertEqual(str(cm.exception), 'Property names must not start with double underscore:__hidden')
+
+    def test_dynamic_macro_names(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo"><a>foo</a></xacro:macro>
+  <xacro:macro name="bar"><b>bar</b></xacro:macro>
+  <xacro:property name="var" value="%s"/>
+  <xacro:call macro="${var}"/></a>'''
+        res = '''<a>%s</a>'''
+        self.assert_matches(self.quick_xacro(src % "foo"), res % "<a>foo</a>")
+        self.assert_matches(self.quick_xacro(src % "bar"), res % "<b>bar</b>")
+
+    def test_dynamic_macro_name_clash(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo"><a name="foo"/></xacro:macro>
+  <xacro:macro name="call"><a name="bar"/></xacro:macro>
+  <xacro:call macro="foo"/></a>'''
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src)
+
+    def test_dynamic_macro_undefined(self):
+        self.assertRaises(xacro.XacroException,
+                          self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+                          <xacro:call macro="foo"/></a>''')
+
+    def test_macro_undefined(self):
+        self.assertRaises(xacro.XacroException,
+                          self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+                          <xacro:undefined><foo/><bar/></xacro:undefined></a>''')
+
+    def test_xacro_element(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo" params="name"><xacro:element xacro:name="${name}"/></xacro:macro>
+  <xacro:foo name="A"/>
+  <xacro:foo name="B"/>
+</a>'''
+        res = '''<a><A/><B/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_xacro_attribute(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo" params="name value">
+  <tag><xacro:attribute name="${name}" value="${value}"/></tag>
+  </xacro:macro>
+  <xacro:foo name="A" value="foo"/>
+  <xacro:foo name="B" value="bar"/>
+</a>'''
+        res = '''<a><tag A="foo"/><tag B="bar"/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_inorder_processing(self):
+        src = '''
+<xml xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="foo" value="1.0"/>
+  <xacro:macro name="m" params="foo"><a foo="${foo}"/></xacro:macro>
+  <xacro:m foo="1 ${foo}"/>
+  <!-- now redefining the property and macro -->
+  <xacro:property name="foo" value="2.0"/>
+  <xacro:macro name="m" params="foo"><b bar="${foo}"/></xacro:macro>
+  <xacro:m foo="2 ${foo}"/>
+</xml>'''
+        expected = '''
+<xml>
+  <a foo="1 1.0"/>
+  <b bar="2 2.0"/>
+</xml>
+'''
+        self.assert_matches(self.quick_xacro(src), expected)
+
+    def test_should_replace_before_macroexpand(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="inner" params="*the_block">
+  <in_the_inner><xacro:insert_block name="the_block" /></in_the_inner>
+</xacro:macro>
+<xacro:macro name="outer" params="*the_block">
+  <in_the_outer><xacro:inner><xacro:insert_block name="the_block" /></xacro:inner></in_the_outer>
+</xacro:macro>
+<xacro:outer><woot /></xacro:outer></a>'''
+        res = '''<a><in_the_outer><in_the_inner><woot /></in_the_inner></in_the_outer></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_evaluate_macro_params_before_body(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo" params="lst">${lst[-1]}</xacro:macro>
+  <xacro:foo lst="${[1,2,3]}"/></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a>3</a>''')
+
+    def test_macro_params_escaped_string(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+    <xacro:macro name="foo" params="a='1 -2' c=3"><bar a="${a}" c="${c}"/></xacro:macro>
+    <xacro:foo/></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a><bar a="1 -2" c="3"/></a>''')
+
+    def test_property_replacement(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="foo" value="42" />
+  <the_foo result="${foo}" />
+</a>'''
+        res = '''<a><the_foo result="42"/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_property_scope_parent(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo" params="factor">
+  <xacro:property name="foo" value="${21*factor}" scope="parent"/>
+  </xacro:macro>
+  <xacro:foo factor="2"/><a foo="${foo}"/></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a><a foo="42"/></a>''')
+
+    def test_property_scope_global(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="foo" params="factor">
+    <xacro:macro name="bar">
+      <xacro:property name="foo" value="${21*factor}" scope="global"/>
+    </xacro:macro>
+    <xacro:bar/>
+  </xacro:macro>
+  <xacro:foo factor="2"/><a foo="${foo}"/></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a><a foo="42"/></a>''')
+
+    def test_property_in_comprehension(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+          <xacro:property name="abc" value="${[1,2,3]}"/>
+          <xacro:property name="xyz" value="${[abc[i]*abc[i] for i in [0,1,2]]}"/>
+          ${xyz}
+        </a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a>[1, 4, 9]</a>''')
+
+    def test_math_ignores_spaces(self):
+        src = '''<a><f v="${0.9 / 2 - 0.2}" /></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a><f v="0.25" /></a>''')
+
+    def test_substitution_args_find(self):
+        self.assert_matches(self.quick_xacro('''<a><f v="$(find xacro)/test/test_xacro.py" /></a>'''),
+                '''<a><f v="''' + os.path.abspath((__file__).replace(".pyc",".py") + '''" /></a>'''))
+
+    def test_substitution_args_arg(self):
+        res = '''<a><f v="my_arg" /></a>'''
+        self.assert_matches(self.quick_xacro('''<a><f v="$(arg sub_arg)" /></a>''', cli=['sub_arg:=my_arg']), res)
+
+    def test_escaping_dollar_braces(self):
+        src = '''<a b="$${foo}" c="$$${foo}" d="text $${foo}" e="text $$${foo}" f="$$(pwd)" />'''
+        res = '''<a b="${foo}" c="$${foo}" d="text ${foo}" e="text $${foo}" f="$(pwd)" />'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_just_a_dollar_sign(self):
+        src = '''<a b="$" c="text $" d="text $ text"/>'''
+        self.assert_matches(self.quick_xacro(src), src)
+
+    def test_multiple_insert_blocks(self):
+        self.assert_matches(self.quick_xacro('''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="foo" params="*block">
+  <xacro:insert_block name="block" />
+  <xacro:insert_block name="block" />
+</xacro:macro>
+<xacro:foo>
+  <a_block />
+</xacro:foo>
+</a>'''), '''<a>
+  <a_block />
+  <a_block />
+</a>''')
+
+    def test_multiple_blocks(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="foo" params="*block{A} *block{B}">
+  <xacro:insert_block name="block1" />
+  <xacro:insert_block name="block2" />
+</xacro:macro>
+<xacro:foo>
+  <block1/>
+  <block2/>
+</xacro:foo>
+</a>'''
+        res = '''<a>
+<block{A}/>
+<block{B}/>
+</a>'''
+        # test both, reversal and non-reversal of block order
+        for d in [dict(A='1', B='2'), dict(A='2', B='1')]:
+            self.assert_matches(self.quick_xacro(src.format(**d)), res.format(**d))
+
+    def test_integer_stays_integer(self):
+        self.assert_matches(self.quick_xacro('''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="m" params="num">
+  <test number="${num}" />
+</xacro:macro>
+<xacro:m num="100" />
+</a>'''), '''
+<a>
+  <test number="100" />
+</a>''')
+
+    def test_insert_block_property(self):
+        self.assert_matches(self.quick_xacro('''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="bar">bar</xacro:macro>
+<xacro:property name="val" value="2" />
+<xacro:property name="some_block">
+  <some_block attr="${val}"><xacro:bar/></some_block>
+</xacro:property>
+<foo>
+  <xacro:insert_block name="some_block" />
+</foo>
+</a>'''), '''
+<a>
+<foo><some_block attr="2">bar</some_block></foo>
+</a>''')
+
+    def test_include(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/xacro"><xacro:include filename="include1.xml"/></a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a><inc1/></a>''')
+
+    def test_include_glob(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/xacro"><xacro:include filename="include{glob}.xml"/></a>'''
+        res = '<a><inc1/><inc2/></a>'
+        for pattern in ['*', '?', '[1-2]']:
+            self.assert_matches(self.quick_xacro(src.format(glob=pattern)), res)
+
+    def test_include_nonexistent(self):
+        self.assertRaises(xacro.XacroException,
+                          self.quick_xacro, '''<a xmlns:xacro="http://www.ros.org/xacro">
+                             <xacro:include filename="include-nada.xml" /></a>''')
+
+    def test_include_deprecated(self):
+        # <include> tags with some non-trivial content should not issue the deprecation warning
+        src = '''<a><include filename="nada"><tag/></include></a>'''
+        with capture_stderr(self.quick_xacro, src) as (result, output):
+            self.assert_matches(result, src)
+            self.assertEqual(output, '')
+
+    def test_include_from_variable(self):
+        doc = '''<a xmlns:xacro="http://www.ros.org/xacro">
+        <xacro:property name="file" value="include1.xml"/>
+        <xacro:include filename="${file}" /></a>'''
+        self.assert_matches(self.quick_xacro(doc), '''<a><inc1/></a>''')
+
+    def test_include_recursive(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/xacro">
+    <xacro:include filename="include1.xml"/>
+    <xacro:include filename="./include1.xml"/>
+    <xacro:include filename="subdir/include-recursive.xacro"/>
+</a>'''), '''
+<a><inc1/><inc1/><subdir_inc1/><subdir_inc1/><inc1/></a>''')
+
+    def test_include_with_namespace(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="var" value="main"/>
+  <xacro:include filename="include1.xacro" ns="A"/>
+  <xacro:include filename="include2.xacro" ns="B"/>
+  <xacro:A.foo/><xacro:B.foo/>
+  <main var="${var}" A="${2*A.var}" B="${B.var+1}"/>
+</a>'''
+        res = '''
+<a>
+    <inc1/><inc2/><main var="main" A="2" B="3"/>
+</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_macro_has_new_scope(self):
+        src = '''<root xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="prop" value="outer"/>
+  <xacro:macro name="foo">
+    <outer prop="${prop}"/>
+    <xacro:property name="prop" value="inner"/>
+    <xacro:macro name="foo">
+      <inner prop="${prop}"/>
+    </xacro:macro>
+    <xacro:foo/>
+  </xacro:macro>
+  <xacro:foo/>
+  <xacro:foo/>
+</root>'''
+        res = '''<root>
+  <outer prop="outer"/>
+  <inner prop="inner"/>
+  <outer prop="outer"/>
+  <inner prop="inner"/>
+</root>'''
+
+    def test_boolean_if_statement(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:if value="false">
+    <a />
+  </xacro:if>
+  <xacro:if value="true">
+    <b />
+  </xacro:if>
+</robot>'''), '''
+<robot>
+    <b />
+</robot>''')
+
+    def test_invalid_if_statement(self):
+        self.assertRaises(xacro.XacroException,
+                          self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+                          <xacro:if value="nonsense"><foo/></xacro:if></a>''')
+
+    def test_integer_if_statement(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:if value="${0*42}">
+    <a />
+  </xacro:if>
+  <xacro:if value="0">
+    <b />
+  </xacro:if>
+  <xacro:if value="${0}">
+    <c />
+  </xacro:if>
+  <xacro:if value="${1*2+3}">
+    <d />
+  </xacro:if>
+</robot>'''), '''
+<robot>
+    <d />
+</robot>''')
+
+    def test_float_if_statement(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:if value="${3*0.0}">
+    <a />
+  </xacro:if>
+  <xacro:if value="${3*0.1}">
+    <b />
+  </xacro:if>
+</robot>'''), '''
+<robot>
+    <b />
+</robot>''')
+
+    def test_property_if_statement(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="condT" value="${True}"/>
+  <xacro:property name="condF" value="${False}"/>
+  <xacro:if value="${condF}"><a /></xacro:if>
+  <xacro:if value="${condT}"><b /></xacro:if>
+  <xacro:if value="${True}"><c /></xacro:if>
+</robot>'''), '''
+<robot>
+    <b /><c />
+</robot>''')
+
+    def test_consecutive_if(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:if value="1"><xacro:if value="0"><a>bar</a></xacro:if></xacro:if>
+</a>'''), '''<a/>''')
+
+    def test_equality_expression_in_if_statement(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="var" value="useit"/>
+  <xacro:if value="${var == 'useit'}"><foo>bar</foo></xacro:if>
+  <xacro:if value="${'use' in var}"><bar>foo</bar></xacro:if>
+</a>'''), '''
+<a>
+  <foo>bar</foo>
+  <bar>foo</bar>
+</a>''')
+
+    def test_no_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="xyz" value="5 -2"/>
+  <foo>${xyz}</foo>
+</a>'''), '''
+<a>
+  <foo>5 -2</foo>
+</a>''')
+
+    def test_math_expressions(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <foo function="${1. + sin(pi)}"/>
+</a>'''), '''
+<a>
+  <foo function="1.0"/>
+</a>''')
+
+    # https://realpython.com/python-eval-function/#minimizing-the-security-issues-of-eval
+    def test_restricted_builtins(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">${__import__('math')}</a>''')
+
+    def test_restricted_builtins_nested(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="foo" params="arg">
+  <xacro:property name="prop" value="${arg}"/>
+  ${__import__('math')}
+</xacro:macro>
+<xacro:foo/>
+</a>''')
+
+    def test_safe_eval(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro,
+                          '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">${"".__class__.__base__.__subclasses__()}</a>''')
+
+    def test_consider_non_elements_if(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:if value="1"><!-- comment --> text <b>bar</b></xacro:if>
+</a>'''), '''
+<a><!-- comment --> text <b>bar</b></a>''')
+
+    def test_consider_non_elements_block(self):
+        self.assert_matches(
+            self.quick_xacro('''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="foo" params="*block">
+  <!-- comment -->
+  foo
+  <xacro:insert_block name="block" />
+</xacro:macro>
+<xacro:foo>
+  <!-- ignored comment -->
+  ignored text
+  <a_block />
+</xacro:foo>
+</a>'''), '''
+<a>
+  <!-- comment -->
+  foo
+  <a_block />
+</a>''')
+
+    def test_ignore_xacro_comments(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <!-- A -->
+
+  <!-- ignore multiline comments before any xacro tag -->
+  <!-- ignored -->
+  <xacro:property name="foo" value="1"/>
+  <!-- ignored -->
+  <xacro:if value="1"><!-- B --></xacro:if>
+  <!-- ignored -->
+  <xacro:macro name="foo"><!-- C --></xacro:macro>
+  <!-- ignored -->
+  <xacro:foo/>
+</a>'''), '''
+<a><!-- A --><!-- B --><!-- C --></a>''')
+
+    def test_recursive_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value=" 42 "/>
+  <xacro:property name="a2" value="${ 2 * a }"/>
+  <a doubled="${a2}"/>
+</robot>'''), '''
+<robot>
+  <a doubled="84"/>
+</robot>''')
+
+    def test_recursive_evaluation_wrong_order(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a2" value="${2*a}"/>
+  <xacro:property name="a" value="42"/>
+  <a doubled="${a2}"/>
+</robot>'''), '''
+<robot>
+  <a doubled="84"/>
+</robot>''')
+
+    def test_recursive_definition(self):
+        with self.assertRaises(xacro.XacroException) as cm:
+            self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value="${a2}"/>
+  <xacro:property name="a2" value="${2*a}"/>
+  <a doubled="${a2}"/>
+</robot>''')
+        msg = str(cm.exception)
+        self.assertTrue(msg.startswith('circular variable definition: a2 -> a -> a2\n'
+                                       'Consider disabling lazy evaluation via lazy_eval="false"'))
+
+    def test_greedy_property_evaluation(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="s" value="AbCd"/>
+        <xacro:property name="s" value="${s.lower()}" lazy_eval="false"/>
+        ${s}</a>'''
+        self.assert_matches(self.quick_xacro(src), '<a>abcd</a>')
+
+    def test_multiple_recursive_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value="1"/>
+  <xacro:property name="b" value="2"/>
+  <xacro:property name="c" value="3"/>
+  <xacro:property name="product" value="${a*b*c}"/>
+  <answer product="${product}"/>
+</robot>'''), '''
+<robot>
+  <answer product="6"/>
+</robot>''')
+
+    def test_multiple_definition_and_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value="42"/>
+  <xacro:property name="b" value="${a}"/>
+  <xacro:property name="b" value="${-a}"/>
+  <xacro:property name="b" value="${a}"/>
+  <answer b="${b} ${b} ${b}"/>
+</robot>'''), '''
+<robot>
+  <answer b="42 42 42"/>
+</robot>''')
+
+    def test_transitive_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value="42"/>
+  <xacro:property name="b" value="${a}"/>
+  <xacro:property name="c" value="${b}"/>
+  <xacro:property name="d" value="${c}"/>
+  <answer d="${d}"/>
+</robot>'''), '''
+<robot>
+  <answer d="42"/>
+</robot>''')
+
+    def test_multi_tree_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="a" value="42"/>
+  <xacro:property name="b" value="2.1"/>
+  <xacro:property name="c" value="${a}"/>
+  <xacro:property name="d" value="${b}"/>
+  <xacro:property name="f" value="${c*d}"/>
+  <answer f="${f}"/>
+</robot>'''), '''
+<robot>
+  <answer f="88.2"/>
+</robot>''')
+
+    def test_from_issue(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="x" value="42"/>
+  <xacro:property name="wheel_width" value="${x}"/>
+  <link name="my_link">
+    <origin xyz="0 0 ${wheel_width/2}"/>
+  </link>
+</robot>'''), '''
+<robot>
+  <link name="my_link">
+    <origin xyz="0 0 21.0"/>
+  </link>
+</robot>''')
+
+    def test_recursive_bad_math(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="x" value="0"/>
+  <tag badness="${1/x}"/>
+</robot>''')
+
+    def test_default_param(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="fixed_link" params="parent_link:=base_link child_link *joint_pose">
+    <link name="${child_link}"/>
+    <joint name="${child_link}_joint" type="fixed">
+      <xacro:insert_block name="joint_pose" />
+      <parent link="${parent_link}"/>
+      <child link="${child_link}" />
+    </joint>
+  </xacro:macro>
+  <xacro:fixed_link child_link="foo">
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:fixed_link >
+</robot>'''), '''
+<robot>
+  <link name="foo"/>
+  <joint name="foo_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="base_link"/>
+    <child link="foo"/>
+  </joint>
+</robot>''')
+
+    def test_default_param_override(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="fixed_link" params="parent_link:=base_link child_link *joint_pose">
+    <link name="${child_link}"/>
+    <joint name="${child_link}_joint" type="fixed">
+      <xacro:insert_block name="joint_pose" />
+      <parent link="${parent_link}"/>
+      <child link="${child_link}" />
+    </joint>
+  </xacro:macro>
+  <xacro:fixed_link child_link="foo" parent_link="bar">
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:fixed_link >
+</robot>'''), '''
+<robot>
+  <link name="foo"/>
+  <joint name="foo_joint" type="fixed">
+    <origin rpy="0 0 0" xyz="0 0 0"/>
+    <parent link="bar"/>
+    <child link="foo"/>
+  </joint>
+</robot>''')
+
+    def test_param_missing(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:macro name="fixed_link" params="parent_link child_link *joint_pose">
+    <link name="${child_link}"/>
+    <joint name="${child_link}_joint" type="fixed">
+      <xacro:insert_block name="joint_pose" />
+      <parent link="${parent_link}"/>
+      <child link="${child_link}" />
+    </joint>
+  </xacro:macro>
+  <xacro:fixed_link child_link="foo">
+    <origin xyz="0 0 0" rpy="0 0 0" />
+  </xacro:fixed_link >
+</robot>''')
+
+    def test_default_arg(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:arg name="foo" default="2"/>
+  <link name="my_link">
+    <origin xyz="0 0 $(arg foo)"/>
+  </link>
+</robot>
+'''), '''
+<robot>
+  <link name="my_link">
+    <origin xyz="0 0 2"/>
+  </link>
+</robot>''')
+
+    def test_default_arg_override(self):
+        self.assert_matches(self.quick_xacro('''
+<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:arg name="foo" default="2"/>
+  <link name="my_link">
+    <origin xyz="0 0 $(arg foo)"/>
+  </link>
+</robot>
+''', ['foo:=4']), '''
+<robot>
+  <link name="my_link">
+    <origin xyz="0 0 4"/>
+  </link>
+</robot>''')
+
+    def test_default_arg_missing(self):
+        self.assertRaises(Exception, self.quick_xacro, '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <a arg="$(arg foo)"/>
+</a>
+''')
+
+    def test_default_arg_empty(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:arg name="foo" default=""/>$(arg foo)</a>'''), '''<a/>''')
+
+    def test_arg_function(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:arg name="foo" default="bar"/>${xacro.arg('foo')}</a>'''), '<a>bar</a>')
+
+    def test_broken_include_error_reporting(self):
+        self.assertRaises(xml.parsers.expat.ExpatError, self.quick_xacro,
+        '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+           <xacro:include filename="broken.xacro"/></a>''')
+        self.assertEqual(xacro.filestack, [None, './broken.xacro'])
+
+    def test_broken_input_doesnt_create_empty_output_file(self):
+        # run xacro on broken input file to make sure we don't create an
+        # empty output file
+        tmp_dir_name = tempfile.mkdtemp()  # create directory we can trash
+        output_path = os.path.join(tmp_dir_name, "should_not_exist")
+        self.run_xacro('broken.xacro', '-o', output_path)
+
+        output_file_created = os.path.isfile(output_path)
+        shutil.rmtree(tmp_dir_name)  # clean up after ourselves
+
+        self.assertFalse(output_file_created)
+
+    def test_create_subdirs(self):
+        # run xacro to create output file in non-existent directory
+        # to make sure this directory will be created by xacro
+        tmp_dir_name = tempfile.mkdtemp()  # create directory we can trash
+        shutil.rmtree(tmp_dir_name)  # ensure directory is removed
+        output_path = os.path.join(tmp_dir_name, "out")
+        self.run_xacro('include1.xml', '-o', output_path)
+
+        output_file_created = os.path.isfile(output_path)
+        shutil.rmtree(tmp_dir_name)  # clean up after ourselves
+
+        self.assertTrue(output_file_created)
+
+    def test_iterable_literals_plain(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="l" value="[0, 1+1, 2]"/>
+  <xacro:property name="t" value="(0,1+1,2)"/>
+  <xacro:property name="d" value="{'a':0, 'b':1+1, 'c':2}"/>
+  <a list="${l}" tuple="${t}" dict="${d}"/>
+</a>'''), '''
+<a>
+  <a list="[0, 1+1, 2]" tuple="(0,1+1,2)" dict="{'a':0, 'b':1+1, 'c':2}"/>
+</a>''')
+
+    def test_iterable_literals_eval(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="l" value="${[0, 1+1, 2]}"/>
+  <xacro:property name="t" value="${(0,1+1,2)}"/>
+  <xacro:property name="d" value="${dict(a=0, b=1+1, c=2)}"/>
+  <a list="${l}" tuple="${t}" dict="${d}"/>
+</a>'''), '''
+<a>
+  <a list="[0, 2, 2]" tuple="(0, 2, 2)" dict="{'a': 0, 'c': 2, 'b': 2}"/>
+</a>''')
+
+    def test_literals_eval(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="f" value="1.23"/>
+  <xacro:property name="i" value="123"/>
+  <xacro:property name="s" value="1_2_3"/>
+  float=${f+1} int=${i+1} string=${s}
+</a>'''), '''
+<a>
+  float=2.23 int=124 string=1_2_3
+</a>''')
+
+    def test_enforce_xacro_ns(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <arg name="foo" value="bar"/>
+  <include filename="foo"/>
+</a>''', xacro_ns=False), '''
+<a>
+  <arg name="foo" value="bar"/>
+  <include filename="foo"/>
+</a>''')
+
+    def test_issue_68_numeric_arg(self):
+        # If a property is assigned from a substitution arg, then this properties' value was
+        # no longer converted to a python type, so that e.g. 0.5 remained u'0.5'.
+        # If this property is then used in a numerical expression an exception is thrown.
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:arg name="foo" default="0.5"/>
+  <xacro:property name="prop" value="$(arg foo)" />
+  <a prop="${prop-0.3}"/>
+</a>
+'''), '''
+<a>
+  <a prop="0.2"/>
+</a>''')
+
+    def test_transitive_arg_evaluation(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:arg name="foo" default="0.5"/>
+  <xacro:arg name="bar" default="$(arg foo)"/>
+  <xacro:property name="prop" value="$(arg bar)" />
+  <a prop="${prop-0.3}"/>
+</a>
+'''), '''
+<a>
+  <a prop="0.2"/>
+</a>''')
+
+    def test_macro_name_with_colon(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:macro name="xacro:my_macro"><foo/></xacro:macro>
+        <xacro:my_macro/>
+        </a>'''
+        res = '''<a><foo/></a>'''
+        with capture_stderr(self.quick_xacro, src) as (result, output):
+            self.assert_matches(result, res)
+            self.assertTrue("macro names must not contain prefix 'xacro:'" in output)
+
+    def test_overwrite_globals(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="pi"  value="3.14"/></a>'''
+        with capture_stderr(self.quick_xacro, src) as (result, output):
+            self.assert_matches(result, '<a/>')
+            self.assertTrue(output)
+
+    def test_no_double_evaluation(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/xacro">
+  <xacro:macro name="foo" params="a b:=${a} c:=$${a}"> a=${a} b=${b} c=${c} </xacro:macro>
+  <xacro:property name="a" value="1"/>
+  <xacro:property name="d" value="$${a}"/>
+  <d d="${d}"><xacro:foo a="2"/></d>
+</a>'''
+        res = '''<a><d d="${a}"> a=2 b=1 c=${a} </d></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_property_forwarding(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="arg" value="42"/>
+        <xacro:macro name="foo" params="arg:=^%s">${arg}</xacro:macro>
+        <xacro:foo/>
+        </a>'''
+        res = '''<a>%s</a>'''
+        self.assert_matches(self.quick_xacro(src % ''), res % '42')
+        self.assert_matches(self.quick_xacro(src % '|'), res % '42')
+        self.assert_matches(self.quick_xacro(src % '|6'), res % '42')
+
+    def test_extension_in_expression(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">${2*'$(arg var)'}</a>'''
+        res = '''<a>%s</a>'''
+        self.assert_matches(self.quick_xacro(src, ['var:=xacro']), res % (2 * 'xacro'))
+
+    def test_expression_in_extension(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">$(arg ${'v'+'ar'})</a>'''
+        res = '''<a>%s</a>'''
+        self.assert_matches(self.quick_xacro(src, ['var:=xacro']), res % 'xacro')
+
+    def test_target_namespace(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro" xacro:targetNamespace="http://www.ros.org"/>'''
+        res = '''<a xmlns="http://www.ros.org"/>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_target_namespace_only_from_root(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro"><b xacro:targetNamespace="http://www.ros.org"/></a>'''
+        res = '''<a><b/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_message_functions(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">${{xacro.{f}('colored', 'text', 2, 3.14)}}</a>'''
+        res = '''<a/>'''
+        for f in ['message', 'warning', 'error']:
+          with capture_stderr(self.quick_xacro, src.format(f=f)) as (result, output):
+              self.assert_matches(result, res)
+              self.assertTrue('colored text 2 3.14' in output)
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src.format(f='fatal'))
+
+    def test_error_reporting(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:include filename="raise.xacro"/>
+        <xacro:outer/>
+        </a>'''
+        with self.assertRaises(xacro.XacroException):
+            self.quick_xacro(src)
+        with capture_stderr(xacro.print_location) as (_, output):
+            expected = '''when instantiating macro: inner ({file})
+instantiated from: outer ({file})
+in file: string
+'''.format(file="./raise.xacro")
+            self.assertEqual(output, expected)
+
+    def test_xml_namespace_lifting(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro" xmlns:a="http://www.ros.org/a">
+  <xacro:macro name="test">
+    <xacro:include filename="namespace.xml"></xacro:include>
+  </xacro:macro>
+  <xacro:test />
+</a>'''
+        res = '''<a xmlns:a="http://www.ros.org/a" xmlns:b="http://www.ros.org/b" />'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_comments(self):
+        original = '<!-- ${name} -->'
+        processed = '<!-- foo -->'
+        enabler = '<!-- xacro:eval-comments{suffix} -->'
+        disabler = enabler.format(suffix=":off")
+
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="name" value="foo"/>
+        {enabler}{comment}{text}{comment}</a>'''
+        result = '<a>{c1}{text}{c2}</a>'
+        for enable, suffix, text in itertools.product([False, True], ["", ":on", ":off"], ["", " ", " text ", "<tag/>", disabler]):
+          src_params = dict(comment=original, text=text,
+                            enabler=enabler.format(suffix=suffix) if enable else "")
+          enabled = enable and suffix != ":off"
+          res_params = dict(c1=processed if enabled else original, text="" if text == disabler else text,
+                            c2=processed if enabled and not text.strip() and text != disabler else original)
+          try:
+            self.assert_matches(self.quick_xacro(src.format(**src_params)), result.format(**res_params))
+          except AssertionError as e:
+            print("When evaluating\n{}".format(src.format(**src_params)))
+            raise
+
+    def test_print_location(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:macro name="scope"><xacro:include filename="location.xacro"/></xacro:macro>
+        <xacro:scope/>
+        </a>'''
+        res = '''<a/>'''
+        with capture_stderr(self.quick_xacro, src) as (result, output):
+            self.assert_matches(result, res)
+            self.assertTrue(output == '''when instantiating macro: scope (???)
+in file: ./location.xacro
+included from: string
+''')
+
+    def test_redefine_global_symbol(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+        <xacro:property name="str" value="sin"/>
+        ${str}</a>'''
+        res = '''<a>sin</a>'''
+        with capture_stderr(self.quick_xacro, src) as (result, output):
+            self.assert_matches(result, res)
+            self.assertTrue("redefining global symbol: str" in output)
+
+    def test_include_lazy(self):
+        doc = ('''<a xmlns:xacro="http://www.ros.org/xacro">
+        <xacro:if value="false"><xacro:include filename="non-existent"/></xacro:if></a>''')
+        self.assert_matches(self.quick_xacro(doc), '''<a/>''')
+
+    def test_issue_63_fixed_with_inorder_processing(self):
+        self.assert_matches(self.quick_xacro('''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:arg name="has_stuff" default="false"/>
+  <xacro:if value="$(arg has_stuff)">
+    <xacro:include file="$(find nonexistent_package)/stuff.urdf" />
+  </xacro:if>
+</a>'''), '<a/>')
+
+    # https://github.com/ros/xacro/issues/307
+    def test_property_resolution_with_namespaced_include(self):
+      src = '''<a version="1.0" xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:include filename="./include2.xacro" ns="B"/>
+  <xacro:property name="ext" value="main"/>
+  <xacro:property name="var" value="main"/>
+  <xacro:B.bar arg="${ext}"/>
+  <xacro:B.bar arg="${var}"/>
+  <xacro:B.bar arg="${inner}"/>
+</a>'''
+      res = '''<a version="1.0">
+  <a arg="main" ext="main" var="2"/>
+  <a arg="2" ext="main" var="2"/>
+  <a arg="int" ext="main" var="2"/>
+</a>'''
+      self.assert_matches(self.quick_xacro(src), res)
+
+    def test_include_from_macro(self):
+        src = '''
+    <a xmlns:xacro="http://www.ros.org/xacro">
+      <xacro:macro name="foo" params="file:=include1.xml"><xacro:include filename="${file}"/></xacro:macro>
+      <xacro:foo/>
+      <xacro:foo file="${xacro.abs_filename('include1.xml')}"/>
+      <xacro:include filename="subdir/foo.xacro"/>
+      <xacro:foo file="$(cwd)/subdir/include1.xml"/>
+    </a>'''
+        res = '''<a><inc1/><inc1/><subdir_inc1/><subdir_inc1/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_namespace_propagation(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+          <xacro:include filename="include3.xacro" ns="C"/><xacro:C.foo/></a>'''
+        res = '''<a><inc3 included="inner"/><inner/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_dotify(self):
+      src = '''
+    <a xmlns:xacro="http://www.ros.org/xacro">
+      <xacro:property name="settings" value="${xacro.dotify(dict(a=1, b=2))}"/>
+      ${settings.a + settings.b}
+    </a>'''
+      res = '''<a>3</a>'''
+      self.assert_matches(self.quick_xacro(src), res)
+
+    def test_property_scope_parent_namespaced(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="prop" value="root"/>
+  <root prop="${prop}"/>
+
+  <xacro:include filename="A.xacro" ns="A"/>
+  <root prop="${prop}" A.prop="${A.prop}" A.B.prop="${A.B.prop}" />
+
+  <xacro:A.B.set/>
+  <root prop="${prop}"/>
+</a>'''
+        res = '''<a>
+  <root prop="root"/>
+  <A prop="B"/>
+  <root A.B.prop="b" A.prop="B" prop="root"/>
+  <root prop="macro"/>
+</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_support(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="settings" value="${xacro.load_yaml('settings.yaml')}"/>
+  <xacro:property name="type" value="$(arg type)"/>
+  <xacro:include filename="${settings['arms'][type]['file']}"/>
+  <xacro:call macro="${settings['arms'][type]['macro']}"/>
+</a>'''
+        res = '''<a><{tag}/></a>'''
+        for i in ['inc1', 'inc2']:
+            self.assert_matches(self.quick_xacro(src, cli=['type:=%s' % i]),
+                                res.format(tag=i))
+
+    def test_yaml_support_dotted(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="settings" value="${xacro.load_yaml('settings.yaml')}"/>
+  <xacro:property name="type" value="$(arg type)"/>
+  <xacro:include filename="${settings.arms[type].file}"/>
+  <xacro:call macro="${settings.arms[type].macro}"/>
+</a>'''
+        res = '''<a><{tag}/></a>'''
+        for i in ['inc1', 'inc2']:
+            self.assert_matches(self.quick_xacro(src, cli=['type:=%s' % i]),
+                                res.format(tag=i))
+
+    def test_yaml_support_dotted_key_error(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="settings" value="${xacro.load_yaml('settings.yaml')}"/>
+  <xacro:property name="bar" value="${settings.baz}"/>
+  ${bar}
+</a>'''
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src)
+
+    def test_yaml_support_dotted_arith(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="settings" value="${xacro.load_yaml('settings.yaml')}"/>
+  <xacro:property name="bar" value="${settings.arms.inc2.props.port + 1}"/>
+  ${bar}
+</a>'''
+        res = '''<a>4243</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_support_key_in_dict(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="settings" value="${xacro.load_yaml('settings.yaml')}"/>
+  ${'arms' in settings} ${'baz' in settings}
+</a>'''
+        res = '''<a>True False</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_support_list_of_x(self):
+        src = '''
+    <a xmlns:xacro="http://www.ros.org/wiki/xacro">
+      <xacro:property name="l" value="${xacro.load_yaml('list.yaml')}"/>
+      ${l[0][1]} ${l[1][0]} ${l[2].a.A} ${l[2].a.B[0]} ${l[2].a.B[1]} ${l[2].b[0]}
+    </a>'''
+        res = '''<a>A2 B1 1 2 3 4</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_support_dotted_list_iterator(self):
+        src = '''
+    <a xmlns:xacro="http://www.ros.org/wiki/xacro">
+      ${[2*item.val.x for item in xacro.load_yaml('list2.yaml')]}
+    </a>'''
+        res = '''<a>[2, 4]</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_custom_constructors(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="values" value="${xacro.load_yaml('constructors.yaml')}"/>
+  <values no_tag="${values.no_tag}" angles="${values.angles}" lengths="${values.lengths}"/>
+</a>'''
+        res = '''<a><values no_tag="42" angles="{}" lengths="{}"/></a>'''.format([math.pi]*2, [25.0]*4)
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_yaml_custom_constructors_illegal_expr(self):
+        for file in ['constructors_bad1.yaml', 'constructors_bad2.yaml']:
+          src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="values" value="${{xacro.load_yaml({file})}}"/>
+  <values a="${{values.a}}" />
+</a>'''
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src.format(file=file))
+
+    def test_yaml_hasattr_support(self):
+        yaml = xacro.load_yaml('settings.yaml')
+        self.assertTrue(hasattr(yaml, 'arms'))
+        self.assertFalse(hasattr(yaml, 'this_key_does_not_exist'))
+
+    def test_xacro_exist_required(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:include filename="non-existent.xacro"/>
+</a>'''
+        self.assertRaises(xacro.XacroException, self.quick_xacro, src)
+
+    def test_xacro_exist_optional(self):
+        src = '''
+<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:include filename="non-existent.xacro" optional="True"/>
+</a>'''
+        res = '''<a></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_macro_default_param_evaluation_order(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="foo" params="arg:=${2*foo}">
+    <xacro:property name="foo" value="-"/>
+    <f val="${arg}"/>
+</xacro:macro>
+<xacro:property name="foo" value="${3*7}"/>
+<xacro:foo/>
+<xacro:property name="foo" value="*"/>
+<xacro:foo/>
+</a>'''
+        res = '''<a>
+<f val="42"/><f val="**"/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_default_property(self):
+        src = '''
+        <a xmlns:xacro="http://www.ros.org/xacro">
+            <xacro:property name="prop" default="false"/>
+            <xacro:unless value="${prop}">
+                <foo/>
+                <xacro:property name="prop" value="true"/>
+            </xacro:unless>
+
+            <!-- second foo should be ignored -->
+            <xacro:unless value="${prop}">
+                <foo/>
+                <xacro:property name="prop" value="true"/>
+            </xacro:unless>
+        </a>'''
+        res = '''<a><foo/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_literal_parsing(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">🍔 </a>'''
+        self.assert_matches(self.quick_xacro(src), '''<a>🍔 </a>''')
+
+    def test_unicode_property(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:property name="burger" value="🍔"/>
+${burger}</a>'''
+        res = '''<a>🍔</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_property_attribute(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:property name="burger" value="🍔"/>
+<b c="${burger}"/></a>'''
+        res = '''<a><b c="🍔"/></a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_property_block(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:property name="burger">
+🍔
+</xacro:property>
+<xacro:insert_block name="burger"/></a>'''
+        res = '''<a>🍔</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_conditional(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:property name="burger" value="🍔"/>
+<xacro:if value="${burger == u'🍔'}">
+🍟
+</xacro:if>
+</a>'''
+        res = '''<a>🍟</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_macro(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+<xacro:macro name="burger" params="how_many">
+${u'🍔' * how_many}
+</xacro:macro>
+<xacro:burger how_many="4"/>
+</a>'''
+        res = '''<a>🍔🍔🍔🍔</a>'''
+        self.assert_matches(self.quick_xacro(src), res)
+
+    def test_unicode_file(self):
+        # run the full xacro processing pipeline on a file with
+        # unicode characters in it and make sure the output is correct
+        test_dir = os.path.abspath(os.path.dirname(__file__))
+        input_path = os.path.join(test_dir, 'emoji.xacro')
+        tmp_dir_name = tempfile.mkdtemp()  # create directory we can trash
+        output_path = os.path.join(tmp_dir_name, "out.xml")
+        self.run_xacro(input_path, '-o', output_path)
+        self.assertTrue(os.path.isfile(output_path))
+        self.assert_matches(xml.dom.minidom.parse(output_path), '''<robot>🍔</robot>''')
+        shutil.rmtree(tmp_dir_name)  # clean up after ourselves
+
+    def test_invalid_syntax(self):
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '<a>a${</a>')
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '<a>${b</a>')
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '<a>${{}}</a>')
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '<a>a$(</a>')
+        self.assertRaises(xacro.XacroException, self.quick_xacro, '<a>$(b</a>')
+
+    def test_invalid_property_definitions(self):
+        template = '<a xmlns:xacro="http://www.ros.org/wiki/xacro"><xacro:property name="p" {} /> ${{p}} </a>'
+
+        def check(attributes, expected, **kwargs):
+            with subTest(msg='Checking ' + attributes):
+                with self.assertRaises(xacro.XacroException) as cm:
+                    self.quick_xacro(template.format(attributes), **kwargs)
+                self.assertEqual(str(cm.exception), expected)
+
+        expected = 'Property attributes default, value, and remove are mutually exclusive: p'
+        check('value="" default=""', expected)
+        check('value="" remove="true"', expected)
+        check('default="" remove="true"', expected)
+        self.assert_matches(self.quick_xacro(template.format('default="42" remove="false"')), '<a>42</a>')
+
+    def test_remove_property(self):
+        src = '''<a xmlns:xacro="http://www.ros.org/wiki/xacro">
+  <xacro:property name="p" default="1st" />
+  <xacro:property name="p" remove="true" />
+  <xacro:property name="p" default="2nd" />
+  ${p}</a>'''
+        self.assert_matches(self.quick_xacro(src), '<a>2nd</a>')
+
+
+if __name__ == '__main__':
+    unittest.main()
